/*
 * ---------------------------------------------------------------------------------------
 * _mixins.scss
 * ---------------------------------------------------------------------------------------
 */

@mixin media($min, $pixel-ratio: 1, $orientation: false) {
  @media only screen and (min-width: $min) and (-webkit-min-device-pixel-ratio: $pixel-ratio) {
    @content
  }
}

@mixin media-range($min, $max, $pixel-ratio: 1, $orientation: false) {
  @media only screen and (min-width: $min) and (max-width: $max) and (-webkit-min-device-pixel-ratio: $pixel-ratio) {
    @content
  }
}


@mixin desktop {
  @media (min-width: #{$desktop-min-width}) {
    @content;
  }
}

@mixin tablet {
  @media (min-width: #{$tablet-min-width}) and (max-width: #{$desktop-min-width - 1px}) {
    @content;
  }
}

@mixin smartphone {
  @media (min-width: #{$smartphone-min-width}) and (max-width: #{$tablet-min-width - 1px}) {
    @content;
  }
}


//@mixin media-mobile() {
//  @media only screen and (min-width: $mobile_min_width) and (max-width: $mobile_max_width) and (-webkit-min-device-pixel-ratio: $mobile_min_pixel_ratio) {
//    @content
//  }
//}


//@mixin media-tablet() {
//  @media only screen and (min-width: #{$mobile-max-width + 1}) and (max-width: #{$tablet-max-width}) {
//    @content
//  }
//}
//
//
//@mixin media-desktop() {
//  @media only screen and (min-width: #{$tablet-max-width + 1}) {
//    @content
//  }
//}


@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}


/// Mixin printing a linear-gradient
/// as well as a plain color fallback
/// and the `-webkit-` prefixed declaration
/// @access public
/// @param {Keyword | Angle} $direction - Linear gradient direction
/// @param {Arglist} $color-stops - List of color-stops composing the gradient
@mixin linear-gradient($direction, $color-stops...) {
  background: nth(nth($color-stops, 1), 1);
  background: -webkit-linear-gradient(legacy-direction($direction), $color-stops);
  background: linear-gradient($direction, $color-stops);
}



@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
  @if $inset {
    -webkit-box-shadow:inset $top $left $blur $color;
    -moz-box-shadow:inset $top $left $blur $color;
    box-shadow:inset $top $left $blur $color;
  } @else {
    -webkit-box-shadow: $top $left $blur $color;
    -moz-box-shadow: $top $left $blur $color;
    box-shadow: $top $left $blur $color;
  }
}



@mixin reset-box () {
  margin: 0;
  border: 0;
  padding: 0;
}