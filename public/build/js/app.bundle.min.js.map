{"version":3,"sources":["node_modules/browser-pack/_prelude.js","public/app/app.js","public/app/audio/DrumMachine.js","public/app/audio/Tick.js","public/app/audio/Track.js","public/app/audio/audio-loader.js","public/app/audio/presets.js","public/app/components/drum-machine/drumMachineController.js","public/app/components/test/testController.js","public/app/directives/commentDirective.js","public/app/directives/savePresetDirective.js","public/app/directives/tickSliderDirective.js","public/app/directives/trackDirective.js","public/app/routes.js","public/app/utils/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_routes","_drumMachineController","_testController","_trackDirective","_tickSliderDirective","_commentDirective","_savePresetDirective","app","angular","config","initRoutes","controller","drumMachineController","testController","directive","tickSliderDirective","trackDirective","commentDirective","savePresetDirective","supportedAudioFormats","Set","add","socketEvents","presetSaved","presetConflict","commentSaved","constant","_audioLoader","_utils","_Track","DrumMachine","_classCallCheck","this","tag","numberOfBeats","AudioContext","window","webkitAudioContext","audioContext","pannerNodeSupported","bpm","bpmMin","bpmMax","timeSignature","num","den","tickTime","isPlaying","isStopped","buffers","tracks","defaultBuffersLoaded","defaultTracksLoaded","_tracksInSolo","_tracksInMute","currentTickIndex","callBacksInLoop","soundURLs","kick","snare","hat","ride","checkIfiOSdevice","_enableAudioContextForiOS","audioContextEnabled","createStereoPanner","console","log","_this","$","document","ready","btn","visibility","on","buffer","createBuffer","source","createBufferSource","start","trigger","_this2","ctx","urls","Promise","resolve","reject","all","audioLoader","then","values","error","kickTrack","Track","setTicksFromArray","snareTrack","hatTrack","active","index","volume","id","scheduler","self","clearTimeout","timeOutID","nextTickTime","currentTime","each","track","mute","sampleData","decodedAudioBuffer","trackTick","ticks","tickSound","tickGainNode","createGain","connect","gain","value","gainNode","previousIndex","previousPrevious","firstLoopEnded","forEach","fn","setTimeout","startTime","bufferName","time","sound","destination","trackID","delete","hasOwnProperty","focusTrack","tracksInSolo","tracksInMute","has","solo","size","clear","_typeof","push","key","name","Object","keys","_createEmptyTicksArray","soundPath","pan","_this3","pannerNode","data","_this4","_clearTracks","promises","createTrack","category","_this5","trackData","fileName","ticksData","tick","JSON","stringify","_bpm","val","_onBpmChanged","Tick","arguments","undefined","_Tick","drumMachine","guid","extension","originalBuffer","getArrayAudioBufferFromUrl","getFileNameFromPath","setSampleData","_initTicks","arrayBuffer","decodeAudioData","arrayAudioBuffer","decodedBuffer","getExtensionFromFileName","audioCtx","url","xhr","XMLHttpRequest","open","responseType","onload","response","send","groovyRockPreset","psyTrancePreset","$scope","$compile","$http","$interval","FileSaver","Blob","removeTrack","play","preventDefault","stopPropagation","playBtn","css","backgroundColor","backgroundImage","stopBtn","startSequencer","stop","stopSequencer","loadPresetFromJson","json","enableLoadingSpinner","loadPreset","bpmSlider","slider","$apply","disableLoadingSpinner","initExportMidiMenu","API","li","click","exportMidi","find","append","initPanels","initPresetsMenu","categories","remove","baseServerUrl","method","headers","Accept","presetsData","liParent","ulParent","match","_id","categoryPresets","presets","liCategory","ul","preset","after","errorResponse","initSavePresetMenu","savePreset","element","createElement","domElem","body","loadComments","enableCommentsLoadingSpinner","comments","safeApply","disableCommentsLoadingSpinner","loadingContainer","addClass","removeClass","commentsLoadingOverlay","commentsLoadingSpinner","toastError","text","toast","showHideTransition","bgColor","textColor","allowToastClose","hideAfter","stack","textAlign","position","toastOk","_DrumMachine","phase","$root","$$phase","title","ticksElements","integerval","beats","Array","fill","username","commentToPost","invalidUsernameMessage","invalidCommentMessage","categorySelected","accordion","animate","collapsible","heightStyle","beforeActivate","button","icon","updateBeatIndicators","previousTickIndex","tickIndex","beatIndicators","beatIndicatorsContainer","getElementById","getElementsByClassName","addCallBackInLoop","_start","_stop","indicators","addTrack","addEmptyTrack","notes","waitCounter","noteEventData","pitch","velocity","duration","waitParam","Content-Type","blob","type","saveAs","populateCategories","handler","formData","FormData","jsonPreset","buildJsonPreset","setRequestHeader","uploadFiles","obj","postComment","message","socket","io","scope","min","max","orientation","slide","event","ui","draggable","updateSlider","isInRangeBPM","onPresetCancel","comment","splice","restrict","replace","templateUrl","link","elem","attrs","tagHandler","invalidPresetNameMessage","invalidCategoryMessage","onPresetSave","resizeTick","tickElem","ticksContainerWidth","width","Math","floor","handleFiles","files","file","fileExtension","getFileExtension","reader","FileReader","ev","target","result","readAsArrayBuffer","onDragOver","hasClass","onDrop","originalEvent","dataTransfer","onDragLeave","playSound","onSoloTrack","soloTrack","onMuteTrack","muteTrack","showLabel","$routeProvider","when","otherwise","redirectTo","test","navigator","userAgent","MSStream","c","random","toString","exec","path","substr","lastIndexOf"],"mappings":"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","file":"app.bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * ---------------------------------------------------------------------------------------\n * app.js\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nimport { initRoutes } from \"./routes\";\n\nimport { drumMachineController } from \"./components/drum-machine/drumMachineController\";\nimport { testController } from \"./components/test/testController\";\n\nimport { trackDirective } from \"./directives/trackDirective\";\nimport { tickSliderDirective } from \"./directives/tickSliderDirective\";\nimport { commentDirective } from \"./directives/commentDirective\";\nimport { savePresetDirective } from \"./directives/savePresetDirective\";\n\n\n\n\n(function() {\n\n    let app = angular.module(\"myApp\", [\"ngRoute\", \"ngFileSaver\", \"ngSanitize\", \"ui.select\"]);\n\n\n    // configure angular routes\n    app.config([\"$routeProvider\", initRoutes]);\n\n\n    // bind controllers\n    app.controller(\"drumMachineController\", [\"$scope\", \"$compile\", \"$http\", \"$interval\", \"FileSaver\", \"Blob\", \"socketEvents\", drumMachineController]);\n    app.controller(\"testController\", ['$scope', testController]);\n\n\n    // register directives\n    app.directive(\"tickSlider\", tickSliderDirective);\n    app.directive(\"theTrack\", [\"supportedAudioFormats\", trackDirective]);\n    app.directive(\"comment\", commentDirective);\n    app.directive(\"savePreset\", savePresetDirective);\n\n\n\n\n    let supportedAudioFormats = new Set();\n    supportedAudioFormats.add(\"wav\");\n    supportedAudioFormats.add(\"audio/wav\");\n    supportedAudioFormats.add(\"audio/x-wav\");\n    supportedAudioFormats.add(\"mp3\");\n    supportedAudioFormats.add(\"audio/mp3\");\n    supportedAudioFormats.add(\"audio/x-mp3\");\n    supportedAudioFormats.add(\"ogg\");\n    supportedAudioFormats.add(\"audio/ogg\");\n    supportedAudioFormats.add(\"audio/x-ogg\");\n\n    let socketEvents = {\n        presetSaved: \"PRESET_SAVED\",\n        presetConflict: \"PRESET_CONFLICT\",\n        commentSaved: \"COMMENT_SAVED\"\n    };\n\n    // constants\n    app.constant(\"supportedAudioFormats\", supportedAudioFormats);\n    app.constant(\"socketEvents\", socketEvents);\n\n\n\n}());","/*\n * ---------------------------------------------------------------------------------------\n * DrumMachine.js\n * ---------------------------------------------------------------------------------------\n */\n\nimport { audioLoader } from \"./audio-loader\";\nimport { checkIfiOSdevice } from \"../utils/utils\";\nimport { Track } from \"./Track\";\n\n\nexport class DrumMachine {\n\n    constructor() {\n        this.tag = \"[DrumMachine.js]\";\n        this.numberOfBeats = 16;\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        this.audioContext = new AudioContext();\n        this.pannerNodeSupported = false;\n        this.bpm = 120;\n        this.bpmMin = 30;\n        this.bpmMax = 240;\n        this.timeSignature = {\n            num: 4,\n            den: 4\n        };\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n        this.isPlaying = false;\n        this.isStopped = true;\n        this.buffers = {};\n        this.tracks = {};\n        this.defaultBuffersLoaded = false;\n        this.defaultTracksLoaded = false;\n        this._tracksInSolo = new Set();\n        this._tracksInMute = new Set();\n\n        this.currentTickIndex = 0;\n\n        this.callBacksInLoop = [];\n\n        this.soundURLs = {\n            kick: \"app/assets/audio/kick.wav\",\n            snare: \"app/assets/audio/snare.wav\",\n            hat: \"app/assets/audio/hat.wav\",\n            ride: \"app/assets/audio/ride.wav\"\n        };\n\n        if (checkIfiOSdevice()) {\n            this._enableAudioContextForiOS();\n        } else {\n            this.audioContextEnabled = true;\n        }\n\n        if (typeof this.audioContext.createStereoPanner === \"function\") {\n            this.pannerNodeSupported = true;\n            console.log(\"Stereo panner supported\");\n        } else {\n            console.log(\"Stereo panner not supported\");\n        }\n\n    }\n\n\n    /*\n     * get bpm\n     */\n    get bpm() {\n        return this._bpm;\n    }\n\n    /*\n     * set bpm\n     */\n    set bpm(val) {\n        if (val !== this._bpm) {\n            this._bpm = val;\n            this._onBpmChanged();\n        }\n    }\n\n\n\n\n\n    _enableAudioContextForiOS() {\n        $(document).ready(() => {\n            let btn = $(\"<button/>\", {\n                visibility: \"hidden\"\n            });\n\n            btn.on(\"touchstart\", () => {\n                let buffer = this.audioContext.createBuffer(1, 1, 22050);\n                let source = this.audioContext.createBufferSource();\n                source.buffer = buffer;\n                source.start();\n\n                this.audioContextEnabled = true;\n                console.log(\"AudioContext enabled for iOS\");\n            });\n\n            btn.trigger(\"touchstart\");\n\n        });\n    }\n\n\n    _loadDefaultBuffers() {\n\n        let ctx = this.audioContext;\n        let urls = this.soundURLs;\n\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                audioLoader(ctx, urls.kick),\n                audioLoader(ctx, urls.snare),\n                audioLoader(ctx, urls.hat),\n                audioLoader(ctx, urls.ride)\n            ]).then(values => {\n                this.buffers[\"kick\"] = values[0];\n                this.buffers[\"snare\"] = values[1];\n                this.buffers[\"hat\"] = values[2];\n                this.buffers[\"ride\"] = values[3];\n                this.defaultBuffersLoaded = true;\n                console.log(this.buffers);\n\n                this.defaultBuffersLoaded = true;\n                console.log(\"Default buffers loaded\");\n                // this._initDefaultTracks();\n\n                resolve(\"Default buffers loaded\");\n\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n\n\n    _initDefaultTracks() {\n\n        if (!this.defaultBuffersLoaded) {\n            return;\n        }\n\n        this.tracks = {};\n\n        let kickTrack = new Track(this, \"kick\", this.buffers[\"kick\"]);\n        kickTrack.setTicksFromArray([0,4,8,12]);\n        let snareTrack = new Track(this, \"snare\", this.buffers[\"snare\"], 1, 0.1);\n        snareTrack.setTicksFromArray([4,12]);\n        let hatTrack = new Track(this, \"hat\", this.buffers[\"hat\"], 0.85, -1);\n        // hatTrack.setTicksFromArray([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\n\n\n        hatTrack.setTicksFromArray([\n            {\n                active: true,\n                index: 0,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 1,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 2,\n                volume: 1.2\n            },\n            {\n                active: true,\n                index: 3,\n                volume: 0.4\n            },\n            {\n                active: true,\n                index: 4,\n                volume: 0.9\n            },\n            {\n                active: true,\n                index: 5,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 6,\n                volume: 1\n            },\n            {\n                active: true,\n                index: 7,\n                volume: 0.4\n            },\n            {\n                active: true,\n                index: 8,\n                volume: 0.9\n            },\n            {\n                active: true,\n                index: 9,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 10,\n                volume: 1\n            },\n            {\n                active: true,\n                index: 11,\n                volume: 0.4\n            },\n            {\n                active: true,\n                index: 12,\n                volume: 0.9\n            },\n            {\n                active: true,\n                index: 13,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 14,\n                volume: 1\n            },\n            {\n                active: true,\n                index: 15,\n                volume: 0.4\n            }\n        ]);\n\n        this.tracks[kickTrack.id] = kickTrack;\n        this.tracks[snareTrack.id] = snareTrack;\n        this.tracks[hatTrack.id] = hatTrack;\n\n        this.defaultTracksLoaded = true;\n        console.log(\"Default tracks loaded\" , this.tracks);\n\n        // this._start();\n    }\n\n\n    _onBpmChanged() {\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n    }\n\n\n    _start() {\n\n        if (!this.audioContextEnabled) {\n            console.log(\"Cannot play: AudioContext is not enabled.\");\n            return;\n        }\n\n        if (this.isPlaying) {\n            console.log(\"Cannot play: it is already playing.\");\n            return;\n        }\n\n        // if (!this.defaultTracksLoaded) {\n        //     console.log(\"Cannot play: default tracks not loaded.\");\n        //     return;\n        // }\n\n\n        this.isStopped = false;\n        let self = this;\n        let ctx = this.audioContext;\n        let startTime = ctx.currentTime;\n        let nextTickTime = startTime + self.tickTime;\n        let index = 0;\n        let timeOutID;\n        let firstLoopEnded = false;\n\n\n        function scheduler() {\n\n            if (self.isStopped) {\n                clearTimeout(timeOutID);\n                self.isPlaying = false;\n                return;\n            }\n\n\n            if (nextTickTime <= ctx.currentTime + self.tickTime ) {\n\n                self.isPlaying = true;\n                self.isStopped = false;\n\n                $.each(self.tracks, (id, track) => {\n\n                    if (track.mute) {\n                        return;\n                    }\n\n                    if (!track.sampleData.decodedAudioBuffer) {\n                        return;\n                    }\n\n                    let trackTick = track.ticks[index];\n\n                    if (!trackTick.active) {\n                        return;\n                    }\n\n                    let tickSound = ctx.createBufferSource();\n                    tickSound.buffer = track.sampleData.decodedAudioBuffer;\n                    let tickGainNode = ctx.createGain();\n                    tickSound.connect(tickGainNode);\n                    tickGainNode.gain.value = trackTick.volume;\n                    tickGainNode.connect(track.gainNode);\n                    tickSound.start(nextTickTime);\n\n                });\n\n                self.currentTickIndex = index;\n                let previousIndex = index === 0 ? (self.numberOfBeats - 1) : index - 1;\n                let previousPrevious = previousIndex === 0 ? (self.numberOfBeats - 1) : previousIndex - 1;\n\n                // to syncronize web audio api schedule with ui beat indicators\n                if (firstLoopEnded) {\n                    self.callBacksInLoop.forEach(fn => {\n                        fn(previousPrevious, previousIndex);\n                    });\n                }\n\n                nextTickTime += self.tickTime;\n                index = ++index === self.numberOfBeats ? 0 : index;\n            }\n\n            firstLoopEnded = true;\n            timeOutID = window.setTimeout(scheduler, 0);\n        }\n\n        scheduler();\n    }\n\n\n    _stop() {\n        this.isStopped = true;\n    }\n\n\n    _playSound(bufferName, time) {\n        let ctx = this.audioContext;\n        let sound = ctx.createBufferSource();\n        sound.buffer = this.buffers[bufferName];\n        sound.connect(ctx.destination);\n        sound.start(time);\n    }\n\n\n    removeTrack(trackID) {\n        let track = this.tracks[trackID];\n        this._tracksInSolo.delete(track);\n        this._tracksInMute.delete(track);\n        delete this.tracks[trackID];\n    }\n\n\n\n    soloTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this._tracksInSolo;\n        let tracksInMute = this._tracksInMute;\n\n        // case 1: track is not in solo and not in mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            $.each(this.tracks, (id, track) => {\n               if (id === trackID) {\n                   return;\n               }\n\n               if (!tracksInSolo.has(track)) {\n                   tracksInMute.add(track);\n                   track.mute = true;\n                   track.solo = false;\n               }\n            });\n        }\n\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            focusTrack.solo = false;\n\n            if (tracksInSolo.size > 0) {\n                tracksInMute.add(focusTrack);\n                focusTrack.mute = true;\n            } else {\n                tracksInMute.clear();\n                tracksInSolo.clear();\n                $.each(this.tracks, (id, track) => {\n                   track.mute = false;\n                   track.solo = false;\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else {\n\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            if (tracksInSolo.size === 1) {\n                $.each(this.tracks, (id, track) => {\n                   if (id !== trackID) {\n                       tracksInMute.add(track);\n                       track.mute = true;\n                   }\n                });\n            }\n        }\n    }\n\n\n\n    muteTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this._tracksInSolo;\n        let tracksInMute = this._tracksInMute;\n\n        // case 1: track not in solo or mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInMute.add(focusTrack);\n            focusTrack.mute = true;\n            focusTrack.solo = false;\n        }\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            tracksInMute.add(focusTrack);\n            focusTrack.solo = false;\n            focusTrack.mute = true;\n\n            if (tracksInSolo.size === 0) {\n                $.each(this.tracks, (id, track) => {\n                    if (id !== trackID) {\n                        tracksInMute.delete(track);\n                        track.mute = false;\n                    }\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else if (tracksInMute.has(focusTrack)) {\n            if (tracksInSolo.size > 0) {\n                tracksInMute.delete(focusTrack);\n                tracksInSolo.add(focusTrack);\n                focusTrack.mute = false;\n                focusTrack.solo = true;\n            }\n            else {\n                tracksInMute.delete(focusTrack);\n                focusTrack.mute = false;\n            }\n\n        }\n    }\n\n\n    addCallBackInLoop(fn) {\n        if (!typeof fn === \"function\") return;\n        this.callBacksInLoop.push( fn );\n    }\n\n\n    isInRangeBPM(value) {\n        if (value >= this.bpmMin && value <= this.bpmMax) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n    _createEmptyTicksArray() {\n        let ticks = [];\n        for(let i = 0; i < this.numberOfBeats; i++) {\n\n            ticks.push({\n                index: i,\n                volume: 0,\n                active: false\n            });\n        }\n        return ticks;\n    }\n\n\n    _clearTracks() {\n        this._tracksInSolo.clear();\n        this._tracksInMute.clear();\n\n        for (let key in this.tracks) {\n            if (this.tracks.hasOwnProperty(key)) {\n                delete this.tracks[key];\n            }\n        }\n    }\n\n\n    addEmptyTrack() {\n        let name = \"track_\" + (Object.keys(this.tracks).length + 1);\n        let track = new Track(this, name);\n        track.setTicksFromArray(this._createEmptyTicksArray());\n        this.tracks[track.id] = track;\n    }\n\n\n    createTrack(name, soundPath, volume, pan, ticks) {\n        return new Promise((resolve, reject) => {\n\n            let track = new Track(this, name, soundPath);\n\n            if (ticks) {\n                track.setTicksFromArray(ticks);\n            } else {\n                track.setTicksFromArray(this._createEmptyTicksArray());\n            }\n\n            if (volume) {\n                track.gainNode.gain.value = volume;\n            }\n\n            if (pan) {\n                if (track.pannerNode) {\n                    track.pannerNode.pan.value = pan;\n                }\n            }\n\n            resolve(track);\n        });\n    }\n\n\n    loadPreset(data) {\n        try {\n            this.bpm = data.bpm;\n            this._clearTracks();\n\n            let promises = [];\n\n            data.tracks.forEach((track) => {\n                promises.push(this.createTrack(track.name, track.soundPath, track.volume, track.pan, track.ticks));\n            });\n\n            return Promise.all(promises);\n        }\n        catch (e) {\n            return new Promise((resolve, reject) => {\n                reject(e);\n            });\n        }\n    }\n\n\n\n\n\n\n    buildJsonPreset(name, category) {\n\n        let data = {\n            name: name,\n            category: category,\n            bpm: this.bpm,\n            timeSignature: this.timeSignature\n        };\n\n        let tracks = [];\n\n        for (let id in this.tracks) {\n            if (this.tracks.hasOwnProperty(id)) {\n\n                let track = this.tracks[id];\n\n                let trackData = {\n                    name: track.name,\n                    soundPath: category + \"/\" + track.sampleData.fileName,\n                    volume: track.gainNode.gain.value,\n                    pan: this.pannerNodeSupported ? track.pannerNode.pan.value : 0\n                };\n\n                let ticksData = [];\n\n                track.ticks.forEach(tick => {\n                    ticksData.push({\n                        active: tick.active,\n                        index: tick.index,\n                        volume: tick.volume\n                    })\n                });\n\n                trackData.ticks = ticksData;\n\n                tracks.push(trackData);\n            }\n        }\n\n        data.tracks = tracks;\n\n\n        console.log(data);\n\n\n        return JSON.stringify(data);\n    }\n\n\n\n\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * Tick.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n export class Tick {\n\n     constructor(index = 0, active = false, volume = 1.0) {\n         this.index = index;\n         this.active = active;\n         this.volume = volume;\n     }\n\n     // get volume() {\n     //     return this._volume;\n     // }\n     //\n     // set volume(val) {\n     //     this._volume = val > 1 ? 1.0 : val;\n     // }\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * Track.js\n * ---------------------------------------------------------------------------------------\n */\n\n\"use strict\";\n\nimport { Tick } from \"./Tick\";\nimport { guid } from \"../utils/utils\";\nimport { getArrayAudioBufferFromUrl } from \"../utils/utils\";\nimport { getExtensionFromFileName } from \"../utils/utils\";\nimport { getFileNameFromPath } from \"../utils/utils\";\n\n\n export class Track {\n\n     constructor (drumMachine, name = \"track_default\", soundPath = undefined, volume = 1.0, pan = 0, mute = false ) {\n         this.id = guid();\n         this.drumMachine = drumMachine;\n         this.audioContext = drumMachine.audioContext;\n         this.name = name;\n\n         this.sampleData = {\n             fileName:              \"\",\n             extension:             \"\",\n             originalBuffer:        undefined,\n             decodedAudioBuffer:    undefined,\n         };\n\n\n         this.solo = false;\n         this.mute = mute;\n         this.ticks = [];\n         this.pannerNodeSupported = false;\n         this.gainNode = this.audioContext.createGain();\n         this.gainNode.gain.value = volume;\n\n\n         if (drumMachine.pannerNodeSupported) {\n             this.pannerNode = this.audioContext.createStereoPanner();\n             this.pannerNode.pan.value = pan;\n             this.gainNode.connect(this.pannerNode);\n             this.pannerNode.connect(this.audioContext.destination);\n             this.pannerNodeSupported = true;\n         } else {\n             this.gainNode.connect(this.audioContext.destination);\n         }\n\n\n         if (soundPath) {\n             getArrayAudioBufferFromUrl(this.audioContext, soundPath).then(buffer => {\n                let fileName = getFileNameFromPath(soundPath);\n                this.setSampleData(fileName, buffer);\n             });\n         }\n\n\n\n         this._initTicks();\n     }\n\n\n     // setGain(val) {\n     //     this.gainNode.gain.value = val > 1 ? 1.0 : val;\n     // }\n\n\n     // setPan(val) {\n     //     if (val < -1) {\n     //         this.pannerNode.pan.value = -1;\n     //     }\n     //     else if (val > 1) {\n     //         this.pannerNode.pan.value = 1;\n     //     }\n     //     else {\n     //         this.pannerNode.pan.value = val;\n     //     }\n     // }\n\n\n\n     /*\n      *\n      */\n     _initTicks() {\n         this.ticks = [];\n         for (let i = 0; i < this.drumMachine.numberOfBeats; ++i) {\n             this.ticks.push(new Tick(i));\n         }\n     }\n\n\n     setTick(index, active = true, volume = 1.0) {\n         if (index < 0 || index > (this.drumMachine.numberOfBeats-1)) {\n             return;\n         }\n\n         this.ticks[index].volume = volume;\n         this.ticks[index].active = active;\n     }\n\n\n     setTicksFromArray(data) {\n         data.forEach(e => {\n             if (typeof e === \"object\") {\n                 if (e.index === \"undefined\" || e.index < 0 || e.index > (this.drumMachine.numberOfBeats-1)) {\n                     return;\n                 }\n\n                 this.ticks[e.index].volume = e.volume !== \"undefined\" ? e.volume : 0;\n                 this.ticks[e.index].active = e.active !== \"undefined\" ? e.active : false;\n             }\n             else {\n                 this.ticks[e].active = true;\n             }\n         });\n     }\n\n\n     // setBuffer(buffer, fileName) {\n     //     this.buffer = buffer;\n     //     console.log(\"Track \" + this.name + \": audio buffer changed ( \" + fileName + \" )\");\n     // }\n\n\n     setBuffer(arrayBuffer, fileName) {\n         this.originalBuffer = arrayBuffer;\n         this.drumMachine.audioContext.decodeAudioData(arrayBuffer, decodedAudioBuffer => {\n             this.buffer = decodedAudioBuffer;\n             console.log(\"Track \" + this.name + \": audio buffer changed ( \" + fileName + \" )\");\n         });\n     }\n\n\n     playSound() {\n         if (!this.audioContext || !this.sampleData.decodedAudioBuffer) return;\n         let sound = this.audioContext.createBufferSource();\n         sound.buffer = this.sampleData.decodedAudioBuffer;\n         sound.connect(this.audioContext.destination);\n         sound.start();\n     }\n\n\n\n     setSampleData(fileName, arrayAudioBuffer) {\n\n         if (!fileName || !arrayAudioBuffer) {\n             console.log(\"Missing fileName and/or arrayAudioBuffer parameters\");\n             return;\n         }\n\n         this.drumMachine.audioContext.decodeAudioData(arrayAudioBuffer, decodedBuffer => {\n             this.sampleData.fileName = fileName;\n             this.sampleData.extension = getExtensionFromFileName(fileName);\n             this.sampleData.originalBuffer = arrayAudioBuffer;\n             this.sampleData.decodedAudioBuffer = decodedBuffer;\n         });\n     }\n\n\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * audio-loader.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\nexport function audioLoader(audioCtx, url) {\n\n    return new Promise((resolve, reject) => {\n\n        if (!audioCtx) {\n            reject(\"Missing audio context parameter.\");\n            return;\n        }\n\n        if (!url) {\n            reject(\"Missing url parameter\");\n            return;\n        }\n\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", url);\n        xhr.responseType = \"arraybuffer\";\n\n        xhr.onload = function() {\n            try {\n                audioCtx.decodeAudioData(xhr.response, function(decodedBuffer) {\n                    resolve(decodedBuffer);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        };\n\n        xhr.send();\n    });\n}\n","/**\n * ---------------------------------------------------------------------------------------\n * presets.js\n * ---------------------------------------------------------------------------------------\n */\n\n\nexport let groovyRockPreset = {\n    name : \"Groovy rock\",\n    bpm : 120,\n    category: \"Rock\",\n    timeSignature : {\n        num : 4,\n        den : 4\n    },\n    tracks : [\n        {\n            name : \"kick\",\n            soundPath : \"app/assets/audio/rock-metal/rock-kick.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 0,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 4,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 8,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 10,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"snare\",\n            soundPath : \"app/assets/audio/rock-metal/rock-snare.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 4,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"ghost-snare\",\n            soundPath : \"app/assets/audio/rock-metal/rock-snare-ghost.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 15,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"hh open\",\n            soundPath : \"app/assets/audio/rock-metal/rock-hh-open.wav\",\n            volume : 0.4,\n            pan : 0.5,\n            ticks : [\n                {\n                    active : true,\n                    index : 4,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 8,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 0.8\n                }\n            ]\n        },\n        {\n            name : \"crash\",\n            soundPath : \"app/assets/audio/rock-metal/rock-crash.wav\",\n            volume : 0.5,\n            pan : -0.5,\n            ticks : [\n                {\n                    active : true,\n                    index : 0,\n                    volume : 0.8\n                }\n            ]\n        }\n    ]\n};\n\nexport let psyTrancePreset = {\n    name : \"psy-trance\",\n    category: \"Trance\",\n    bpm : 145,\n    timeSignature : {\n        num : 4,\n        den : 4\n    },\n    tracks : [\n        {\n            name : \"kick\",\n            soundPath : \"app/assets/audio/trance/trance-kick.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 0,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 4,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 8,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"clap\",\n            soundPath : \"app/assets/audio/trance/trance-clap.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 4,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"hh open\",\n            soundPath : \"app/assets/audio/trance/trance-hh-open.wav\",\n            volume : 0.8,\n            pan : 0.2,\n            ticks : [\n                {\n                    active : true,\n                    index : 2,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 6,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 10,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 14,\n                    volume : 0.8\n                }\n            ]\n        },\n        {\n            name : \"bass\",\n            soundPath : \"app/assets/audio/trance/trance-bass-A1.wav\",\n            volume : 0.8,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 1,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 2,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 3,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 5,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 6,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 7,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 9,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 10,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 11,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 13,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 14,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 15,\n                    volume : 0.8\n                }\n            ]\n        }\n    ]\n};\n","/**\n * ---------------------------------------------------------------------------------------\n * mainController.js\n * ---------------------------------------------------------------------------------------\n */\n\n\nimport { DrumMachine } from \"../../audio/DrumMachine\";\nimport { psyTrancePreset } from \"../../audio/presets\";\nimport { groovyRockPreset } from \"../../audio/presets\";\n\n// const baseServerUrl = \"http://localhost:4500\";\nconst baseServerUrl = \"http://192.168.1.72:4500\";\n// const baseServerUrl = \"http://192.168.1.75:4500\";\n\n\nexport function drumMachineController($scope, $compile, $http, $interval, FileSaver, Blob, socketEvents) {\n\n    let drumMachine = new DrumMachine();\n    let loadingContainer = $(\"#loadingContainer\");\n    let commentsLoadingOverlay = $(\"#commentsLoadingOverlay\");\n    let commentsLoadingSpinner = $(\"#commentsLoadingSpinner\");\n    let playBtn = $(\"#sequencerPlayButton\");\n    let stopBtn = $(\"#sequencerStopButton\");\n    let bpmSlider = $(\"#sequencerBPMslider\");\n\n    $scope.safeApply = function(fn) {\n        var phase = this.$root.$$phase;\n        if(phase == '$apply' || phase == '$digest') {\n            if(fn && (typeof(fn) === 'function')) {\n                fn();\n            }\n        } else {\n            this.$apply(fn);\n        }\n    };\n\n    $scope.title = \"Main Controller\";\n    $scope.tracks = [];\n    $scope.ticksElements = [];\n    $scope.bpm = drumMachine.bpm;\n    $scope.isPlaying = drumMachine.isPlaying;\n    $scope.isStopped = drumMachine.isStopped;\n    $scope.removeTrack = removeTrack;\n    $scope.integerval = /^\\d*$/;\n    $scope.beats = new Array(drumMachine.numberOfBeats).fill(false);\n    $scope.username = \"\";\n    $scope.commentToPost = \"\";\n    $scope.comments = [];\n    $scope.invalidUsernameMessage = \"Give ya a name! (3-32 characters)\";\n    $scope.invalidCommentMessage = \"Write something cool! (3-1000 characters)\";\n\n    $scope.preset = {\n        name: \"\",\n        categorySelected: undefined,\n        categories: []\n    };\n\n\n    $scope.tracks = drumMachine.tracks;\n    $scope.safeApply();\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * UI\n     * ---------------------------------------------------------------------------------------\n     */\n\n    $( \"#accordion\" ).accordion({\n        animate: 200,\n        collapsible: true,\n        active: false,\n        heightStyle: \"content\",\n        // icons: { \"header\": \"ui-icon-plus\", \"activeHeader\": \"ui-icon-minus\" },\n        beforeActivate: () => {\n            if ($scope.comments.length === 0) {\n                loadComments();\n            }\n        }\n    });\n\n    $(\"#postCommentBtn\").button({\n        icon: \"ui-icon-pencil\"\n    });\n\n\n\n\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * event listeners\n     * ---------------------------------------------------------------------------------------\n     */\n\n    $(window).ready(() => {\n\n        let beatIndicatorsContainer = document.getElementById(\"beatIndicators\");\n        let beatIndicators = beatIndicatorsContainer.getElementsByClassName(\"beat-indicator\");\n\n        function updateBeatIndicators(previousTickIndex, tickIndex) {\n            $(beatIndicators[previousTickIndex]).removeClass(\"beat-indicator-active\");\n            $(beatIndicators[tickIndex]).addClass(\"beat-indicator-active\");\n        }\n\n        drumMachine.addCallBackInLoop(updateBeatIndicators);\n\n    });\n\n    /*\n    window.addEventListener(\"keyup\", (e) => {\n        switch (e.keyCode) {\n\n            case 32:\n\n                if($(\"textarea#commentArea, input#usernameInput\").is(\":focus\")){\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                else if ($scope.isStopped) {\n                    play(e);\n                } else {\n                    stop(e);\n                }\n                break;\n\n            default:\n                break;\n        }\n    });\n\n\n    // remove scroll down on spacebar\n    window.addEventListener('keydown', function(e) {\n        if(e.keyCode === 32 && e.target === document.body) {\n            e.preventDefault();\n        }\n    });\n    */\n\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * public\n     * ---------------------------------------------------------------------------------------\n     */\n\n    $scope.startSequencer = () => {\n        drumMachine._start();\n        $scope.isPlaying = true;\n        $scope.isStopped = false;\n    };\n\n\n    $scope.stopSequencer = () => {\n        drumMachine._stop();\n        $scope.isPlaying = false;\n        $scope.isStopped = true;\n        let indicators = document.getElementById(\"beatIndicators\").getElementsByClassName(\"beat-indicator\");\n        $(indicators).removeClass(\"beat-indicator-active\");\n    };\n\n\n    $scope.addTrack = () => {\n        drumMachine.addEmptyTrack();\n    };\n\n\n    $scope.exportMidi = () => {\n\n        let tracks = [];\n        for (let key in drumMachine.tracks) {\n            if (drumMachine.tracks.hasOwnProperty(key)) {\n\n                let track = drumMachine.tracks[key];\n                let trackData = {\n                    name: track.name,\n                    notes: []\n                };\n\n                let waitCounter = 0;\n                track.ticks.forEach((tick) => {\n\n                    if (tick.active) {\n                        let noteEventData = {\n                            pitch: [\"C4\"],\n                            velocity: tick.volume,\n                            duration: \"16\"  // 1/16\n                        };\n\n                        if (waitCounter > 0) {\n                            let waitParam = \"T\" + waitCounter * 32; //number of ticks to wait (each tick is 1/128)\n                            noteEventData[\"wait\"] = waitParam;\n                        }\n\n                        trackData.notes.push(noteEventData);\n                        waitCounter = 0;\n                    }\n\n                    else {\n                        waitCounter += 1;\n                    }\n                });\n\n                tracks.push(trackData);\n            }\n        }\n\n\n        let data = {\n            bpm: drumMachine.bpm,\n            timeSignature: {num: 4, den: 4},\n            tracks: tracks\n        };\n\n\n\n        $http({\n            url: baseServerUrl + '/api/midi',\n            method: \"POST\",\n            responseType: \"arraybuffer\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            data: JSON.stringify(data)\n\n        }).then(function (response) {\n            console.log(response);\n            let blob = new Blob([response.data], { type: 'audio/midi' });\n            // let fileName = response.headers('content-disposition');\n            FileSaver.saveAs(blob, \"loop.mid\");\n        }, function (response) {\n            console.log(response);\n        });\n\n    };\n\n\n    $scope.populateCategories = () => {\n        return new Promise((resolve, reject) => {\n            $http({\n                url: baseServerUrl + \"/api/categories\",\n                method: \"GET\",\n                headers: {\n                    \"Accept\": \"application/json\"\n                }\n            }).then(response => {\n                // console.log(response);\n                let categories = response.data;\n                // categories.forEach(c => {\n                //     $scope.categories.push(c.name);\n                // });\n                $scope.preset.categories = categories;\n                resolve(categories);\n\n            }, error => {\n                console.log(error);\n                reject(error);\n            });\n        });\n    };\n\n\n    $scope.loadPreset = () => {\n\n        $http({\n            url: baseServerUrl + \"/api/presets\",\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        }).then(response => {\n\n            let presets = response.data;\n            if (presets.length === 0) {\n                return;\n            }\n\n            drumMachine.loadPreset(presets[0]).then(tracks => {\n\n                tracks.forEach(t => {\n                    drumMachine.tracks[t.id] = t;\n                });\n\n                $scope.bpm = drumMachine.bpm;\n                bpmSlider.slider(\"value\", $scope.bpm);\n                $scope.$apply();\n\n\n            }, error => {\n                console.log(error);\n            });\n\n        }, errorResponse => {\n            console.log(errorResponse);\n        });\n\n    };\n\n\n    $scope.savePreset = function() {\n\n        let formData = new FormData();\n        let jsonPreset = drumMachine.buildJsonPreset($scope.preset.name, $scope.preset.categorySelected.name);\n\n\n        for (let id in drumMachine.tracks) {\n\n            if (drumMachine.tracks.hasOwnProperty(id)) {\n                let track = drumMachine.tracks[id];\n\n                let blob = new Blob([track.sampleData.originalBuffer], {\n                    // type: track.sampleData.extension ? \"audio/\" + track.sampleData.extension : \"octet-stream\"\n                    type: \"octet-stream\"\n                });\n\n                formData.append(\"sample\", blob, track.sampleData.fileName);\n            }\n        }\n\n\n        formData.append(\"preset\", jsonPreset);\n\n\n        let xhr = new XMLHttpRequest();\n\n\n\n        xhr.open( 'POST', baseServerUrl + '/api/presets', true );\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.onload = handler;\n        xhr.send( formData );\n\n        function handler(e) {\n            console.log(e);\n        }\n\n    };\n\n\n    $scope.uploadFiles = function() {\n\n        let formData = new FormData();\n\n        // $('input[type=\"file\"]').each(function(index) {\n        //\n        //     let fileList = $(this)[0].files;\n        //\n        //     for(let i = 0; i < fileList.length; i++) {\n        //         let file = fileList[i];\n        //         formData.append(file.name, file);\n        //     }\n        // });\n\n\n\n\n\n\n        // drumMachine.tracks.forEach(track => {\n        //\n        //     console.log(track);\n        //     let buffer = track.buffer;\n        //     let blob = new Blob(buffer);\n        //     formData.append(track.name, blob, \"campione.wav\");\n        //\n        // });\n\n        for (let id in drumMachine.tracks) {\n            if (drumMachine.tracks.hasOwnProperty(id)) {\n                let track = drumMachine.tracks[id];\n\n\n                let blob = new Blob([track.sampleData.originalBuffer], {\n                    // type: track.sampleData.extension ? \"audio/\" + track.sampleData.extension : \"octet-stream\"\n                    type: \"octet-stream\"\n                });\n\n                formData.append(\"sample\", blob, track.sampleData.fileName);\n            }\n        }\n\n\n\n        let obj = {\n            name: \"track\",\n            bpm: 120,\n            tracks: [\n                {\n                    name: \"kick\"\n                },\n                {\n                    name: \"snare\"\n                }\n            ]\n        };\n\n        formData.append(\"preset\", JSON.stringify(obj));\n\n\n        let xhr = new XMLHttpRequest();\n\n\n\n        xhr.open( 'POST', baseServerUrl + '/api/upload', true );\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.onload = handler;\n        xhr.send( formData );\n\n        function handler(e) {\n            console.log(e);\n        }\n\n        // $http({\n        //     url: \"http://localhost:4500/upload\",\n        //     method: \"POST\",\n        //     transformRequest: angular.identity,\n        //     header: {\n        //         \"Content-Type\": undefined,\n        //     },\n        //     data: formData\n        // }).then(response => {\n        //     console.log(response);\n        // }, error => {\n        //     console.log(error);\n        // });\n\n\n\n    };\n\n\n    $scope.postComment = ()=> {\n\n        let data = {\n            username: $scope.username,\n            message: $scope.commentToPost\n        };\n\n        $http({\n            url: baseServerUrl + '/api/comments',\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            data: JSON.stringify(data)\n\n        }).then(function (response) {\n            console.log(response);\n        }, function (response) {\n            console.log(response);\n        });\n\n    };\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * private\n     * ---------------------------------------------------------------------------------------\n     */\n\n    function removeTrack(track) {\n        drumMachine.removeTrack(track.id);\n    }\n\n\n    function initDefaultTracks($scope, drumMachine) {\n\n        enableLoadingSpinner();\n\n        drumMachine._loadDefaultBuffers().then(() => {\n            drumMachine._initDefaultTracks();\n            $scope.tracks = drumMachine.tracks;\n            $scope.$apply();\n            disableLoadingSpinner();\n        }, error => {\n            console.log(error);\n        });\n    }\n\n\n    function initDATgui(drumMachine) {\n        let gui = new dat.GUI();\n        let bpmController = gui.add(drumMachine, \"bpm\", 50.0, 220.0);\n\n        bpmController.onChange(value => {\n            drumMachine.bpm = Math.floor(drumMachine.bpm);\n        });\n    }\n\n\n    function initSequencerControls(scope, drumMachine) {\n\n        playBtn.on(\"mousedown touchstart\", (e) => {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            playBtn.css({\n                backgroundColor: \"#444\"\n            });\n        });\n\n        playBtn.on(\"mouseup touchend\", (e) => {\n            play(e);\n        });\n\n\n\n\n        stopBtn.on(\"mousedown touchstart\", (e) => {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            stopBtn.css({\n                backgroundColor: \"#444\"\n            });\n        });\n\n        stopBtn.on(\"mouseup touchend\", (e) => {\n            stop(e);\n        });\n\n\n        bpmSlider.slider({\n            min: drumMachine.bpmMin,\n            max: drumMachine.bpmMax,\n            orientation: \"horizontal\",\n            value: scope.bpm,\n            slide: (event, ui) => {\n                drumMachine.bpm = ui.value;\n                scope.bpm = ui.value;\n                scope.$apply();\n            }\n        }).draggable();\n\n\n\n        scope.updateSlider = function() {\n            if (drumMachine.isInRangeBPM(scope.bpm)) {\n                bpmSlider.slider(\"value\", scope.bpm);\n                drumMachine.bpm = scope.bpm;\n            }\n        }\n    }\n\n\n    function play(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        playBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Play-50-green.png)\"\n        });\n\n        stopBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Stop-50-white.png)\"\n        });\n\n        $scope.startSequencer();\n    }\n\n\n    function stop(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        stopBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Stop-50-red.png)\"\n        });\n\n        playBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Play-50-white.png)\"\n        });\n\n        $scope.stopSequencer();\n    }\n\n\n    function loadPresetFromJson(json) {\n\n        enableLoadingSpinner();\n\n        drumMachine.loadPreset(json).then(tracks => {\n\n            tracks.forEach(t => {\n                drumMachine.tracks[t.id] = t;\n            });\n\n            $scope.bpm = drumMachine.bpm;\n            bpmSlider.slider(\"value\", $scope.bpm);\n            $scope.$apply();\n            disableLoadingSpinner();\n\n        }, error => {\n            console.log(error);\n        });\n    }\n\n\n    function initExportMidiMenu() {\n\n        let API = $(\"nav#menu\").data( \"mmenu\" );\n        let li = $('<li><a href=\"#exportMidi\" >Export midi</a></li>');\n        li.click($scope.exportMidi);\n\n        $(\"#menu-list\").find( \".mm-listview\" ).append( li );\n\n        API.initPanels( $(\"#menu-list\") );\n\n    }\n\n\n    function initPresetsMenu(categories) {\n\n        $('li[id=\"presetsMenu\"]').remove();\n\n        $http({\n            url: baseServerUrl + \"/api/presets\",\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        }).then(response => {\n\n            let presetsData = response.data;\n            if (presetsData.length === 0) {\n                return;\n            }\n\n\n            let liParent = $('<li id=\"presetsMenu\"><a href=\"#\">Presets</a></li>');\n            let ulParent = $(\"<ul></ul>\");\n            liParent.append(ulParent);\n\n\n            categories.forEach(category => {\n\n                let match = presetsData.find(e => { return e._id === category.name; });\n\n                if (!match) {\n                   return;\n                }\n\n                let categoryPresets = match.presets;\n\n                let liCategory = $('<li><a href=\"#\">' + category.name + '</a></li>');\n                let ul = $(\"<ul></ul>\");\n\n\n                categoryPresets.forEach(preset => {\n                    let li = $('<li><a href=\"#\">' + preset.name + '</a></li>');\n                    li.click(() => {\n                        loadPresetFromJson(preset);\n                    });\n\n                    ul.append(li);\n                });\n\n                liCategory.append(ul);\n                ulParent.append(liCategory);\n\n            });\n\n\n            let API = $(\"nav#menu\").data( \"mmenu\" );\n            $(\"#menu-list\").find( \".mm-listview li:first\" ).after( liParent );\n            API.initPanels( $(\"#menu-list\") );\n\n\n        }, errorResponse => {\n            console.log(errorResponse);\n            initExportMidiMenu();\n        });\n    }\n\n\n    function initSavePresetMenu() {\n        let li = $('<li><a href=\"#\">Save preset</a></li>');\n\n        li.click(() => {\n            let savePreset = angular.element(document.createElement('save-preset'));\n            let domElem = $compile( savePreset )( $scope );\n            angular.element(document.body).append(domElem);\n        });\n\n        let API = $(\"nav#menu\").data( \"mmenu\" );\n        $(\"#menu-list\").find( \".mm-listview\" ).append( li );\n        API.initPanels( $(\"#menu-list\") );\n    }\n\n\n    function loadComments() {\n\n        enableCommentsLoadingSpinner();\n\n        $http({\n            url: baseServerUrl + '/api/comments',\n            method: \"GET\",\n            headers: {\n                \"Accept\" : \"application/json\"\n            }\n\n        }).then(function (response) {\n            console.log(response);\n            $scope.comments = response.data;\n            $scope.safeApply();\n            disableCommentsLoadingSpinner();\n        }, function (response) {\n            console.log(response);\n        });\n\n    }\n\n\n    function enableLoadingSpinner() {\n        setTimeout(() => {\n            loadingContainer.addClass(\"loading-active\");\n        }, 0);\n    }\n\n\n    function disableLoadingSpinner() {\n        setTimeout(() => {\n            loadingContainer.removeClass(\"loading-active\");\n        }, 1500);\n    }\n\n\n    function enableCommentsLoadingSpinner() {\n        setTimeout(() => {\n            commentsLoadingOverlay.addClass(\"loading-active\");\n            commentsLoadingSpinner.addClass(\"loading-active\");\n        }, 100);\n    }\n\n\n    function disableCommentsLoadingSpinner() {\n        setTimeout(() => {\n            commentsLoadingOverlay.removeClass(\"loading-active\");\n            commentsLoadingSpinner.removeClass(\"loading-active\");\n        }, 100);\n    }\n\n\n    function toastError(text) {\n        $.toast({\n            text : text,\n            showHideTransition : 'slide',  // It can be plain, fade or slide\n            bgColor : '#ff4a40',              // Background color for toast\n            textColor : '#fff',            // text color\n            allowToastClose : false,       // Show the close button or not\n            hideAfter : 3000,              // `false` to make it sticky or time in miliseconds to hide after\n            stack : 5,                     // `fakse` to show one stack at a time count showing the number of toasts that can be shown at once\n            textAlign : 'left',            // Alignment of text i.e. left, right, center\n            position : 'top-right'       // bottom-left or bottom-right or bottom-center or top-left or top-right or top-center or mid-center or an object representing the left, right, top, bottom values to position the toast on page\n        });\n    }\n\n\n    function toastOk(text) {\n        $.toast({\n            text : text,\n            showHideTransition : 'slide',  // It can be plain, fade or slide\n            bgColor : '#05a2fc',              // Background color for toast\n            textColor : '#fff',            // text color\n            allowToastClose : false,       // Show the close button or not\n            hideAfter : 3000,              // `false` to make it sticky or time in miliseconds to hide after\n            stack : 5,                     // `fakse` to show one stack at a time count showing the number of toasts that can be shown at once\n            textAlign : 'left',            // Alignment of text i.e. left, right, center\n            position : 'top-right'       // bottom-left or bottom-right or bottom-center or top-left or top-right or top-center or mid-center or an object representing the left, right, top, bottom values to position the toast on page\n        });\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /**\n     * ---------------------------------------------------------------------------------------\n     * init\n     * ---------------------------------------------------------------------------------------\n     */\n\n    const socket = io.connect(baseServerUrl);\n    initSequencerControls($scope, drumMachine);\n\n    $(window).ready(() => {\n        initSavePresetMenu();\n        initExportMidiMenu();\n\n        $scope.populateCategories().then(categories => {\n            initPresetsMenu(categories);\n        });\n\n        $interval(() => {\n            $scope.populateCategories().then(categories => {\n                console.log(\"$interval: populateCategories\");\n            })\n        }, 20000);\n\n        socket.on(socketEvents.presetSaved, data => {\n            console.log(socketEvents.presetSaved, data);\n            toastOk(\"Preset saved!\");\n            $scope.onPresetCancel();\n            initPresetsMenu($scope.preset.categories);\n        });\n\n        socket.on(socketEvents.presetConflict, data => {\n            console.log(socketEvents.presetConflict, data);\n            toastError(data);\n        });\n\n        socket.on(socketEvents.commentSaved, comment => {\n            // toastOk(\"Comment posted!\");\n            $scope.comments.splice(0, 0, comment);\n            $scope.commentToPost = \"\";\n            $scope.safeApply();\n        });\n\n    });\n\n\n\n}\n\n\n\n\n\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * testController.js\n * ---------------------------------------------------------------------------------------\n */\n\n export function testController($scope) {\n\n     $scope.title = \"Test Controller\";\n     console.log(\"Test Controller\");\n\n }","/**\n * ---------------------------------------------------------------------------------------\n * commentDirective.js\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nexport function commentDirective() {\n\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        templateUrl: \"app/directives/templates/commentDirective.html\",\n        link: function (scope, elem, attrs) {\n\n\n\n        }\n    }\n\n\n\n}\n\n\n","/**\n * ---------------------------------------------------------------------------------------\n * savePresetDirective.js\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\n\nexport function savePresetDirective() {\n\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        templateUrl: \"app/directives/templates/savePreset.html\",\n        link: function (scope, elem, attrs) {\n\n\n            scope.tagHandler = function (tag){\n                return null;\n            };\n\n            scope.invalidPresetNameMessage = \"Choose a preset name (6-32 characters)\";\n            scope.invalidCategoryMessage = \"Choose a category\";\n\n\n\n\n            scope.onPresetCancel = function() {\n                $(\".save-preset-container\").remove();\n            };\n\n\n            scope.onPresetSave = function() {\n                scope.savePreset();\n            };\n\n\n\n\n\n\n\n\n\n\n            function initUI() {\n\n                $(\"#presetCancelBtn\").button();\n                $(\"#presetSaveBtn\").button();\n            }\n\n\n\n\n\n            /**\n             * ---------------------------------------------------------------------------------------\n             * init\n             * ---------------------------------------------------------------------------------------\n             */\n\n            initUI();\n\n        }\n\n\n    }\n\n\n}","/**\n * ---------------------------------------------------------------------------------------\n * tickSliderDirective.js\n * ---------------------------------------------------------------------------------------\n */\n\n\"use strict\";\n\nexport function tickSliderDirective() {\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            tick: \"=\",\n            ticksElements: \"=\",\n            resizeTick: \"=\"\n        },\n        link: (scope, elem, attrs) => {\n\n\n            // console.log(scope.tick);\n            scope.ticksElements.push(elem);\n\n\n            elem.slider({\n                min: 0,\n                max: 100,\n                orientation: \"vertical\",\n                value: scope.tick.active ? scope.tick.volume * 100 : 0,\n                slide: (event, ui) => {\n\n                    if (ui.value === 0) {\n                        scope.tick.active = false;\n                    }\n                    else {\n                        scope.tick.active = true;\n                    }\n\n                    scope.tick.volume = ui.value * 0.01;\n                    // console.log(scope.tick.volume);\n                }\n            }).draggable();\n\n            // scope.resizeTick(elem);\n\n        }\n    };\n\n}\n","/**\n * ---------------------------------------------------------------------------------------\n * trackDirective\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\nimport { getFileExtension } from \"../utils/utils\";\n\n\nexport function trackDirective(supportedAudioFormats) {\n\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            track: \"=\",\n            ticksElements: \"=\",\n            removeTrack: \"=\"\n        },\n        templateUrl: \"app/directives/templates/trackDirective.html\",\n        link: function (scope, elem, attrs) {\n\n            scope.resizeTick = resizeTick;\n            scope.handleFiles = handleFiles;\n            scope.playSound = playSound;\n            scope.onSoloTrack = onSoloTrack;\n            scope.onMuteTrack = onMuteTrack;\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * styles & widgets\n             * ---------------------------------------------------------------------------------------\n             */\n\n            elem.find('button[name=\"removeTrackButton\"]').button({\n                icon: \"ui-icon-close\",\n                showLabel: false\n            });\n\n            elem.find('button[name=\"playSoundButton\"]').button({\n                icon: \"ui-icon-circle-triangle-e\",\n                showLabel: false\n            });\n\n            elem.find('div[id=\"trackVolumeSlider\"]').slider({\n                min: 0,\n                max: 100,\n                orientation: \"horizontal\",\n                value: scope.track.gainNode.gain.value * 100,\n                slide: (event, ui) => {\n                    scope.track.gainNode.gain.value = ui.value * 0.01;\n                }\n            }).draggable();\n\n            if (scope.track.pannerNodeSupported) {\n                elem.find('div[id=\"trackPanSlider\"]').slider({\n                    min: -100,\n                    max: 100,\n                    orientation: \"horizontal\",\n                    value: scope.track.pannerNode.pan.value * 100,\n                    slide: (event, ui) => {\n                        scope.track.pannerNode.pan.value = ui.value * 0.01;\n                    }\n                }).draggable();\n            } else {\n                elem.find('div[id=\"trackPanSlider\"]').remove();\n                elem.find(\".pan-label\").remove();\n\n                // push down volume slider\n                elem.find('div[id=\"trackVolumeSlider\"]').css({\n                    // marginTop: 0,\n                    // position: \"relative\",\n                    // bottom: 0\n                });\n            }\n\n\n            elem.find('button[name=soloTrackButton]').button({\n\n            });\n\n            elem.find('button[name=muteTrackButton]').button({\n\n            });\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * event listeners\n             * ---------------------------------------------------------------------------------------\n             */\n\n            // $(window).resize(() => {\n            //     scope.ticksElements.forEach((e) => {\n            //         resizeTick(e);\n            //     });\n            // });\n\n\n\n\n            elem.on(\"dragover\", onDragOver);\n            elem.on(\"drop\", onDrop);\n            elem.on(\"dragleave\", onDragLeave);\n\n\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * private functions\n             * ---------------------------------------------------------------------------------------\n             */\n\n            function resizeTick(tickElem) {\n                let ticksContainerWidth = elem.find(\".ticks-container\").width();\n                console.log(ticksContainerWidth);\n                let margin = 8;\n                let tickWidth = Math.floor((ticksContainerWidth - 15 * margin) / 16.0);\n\n\n                // tickElem.css({\n                //     width: 32,\n                //     marginRight: \"8px !important\"\n                // });\n\n\n                // tickElem.parent().css({\n                //     width: tickWidth,\n                //     marginRight: margin\n                // });\n\n\n\n                // tickElem.find(\".ui-slider-handle\").css({\n                //\n                // });\n\n            }\n\n\n            function handleFiles(files) {\n                if (!files || files.length < 1) return;\n\n                let file = files[0];\n                let fileExtension = getFileExtension(file.name);\n\n                // chech if it is an audio file with a supported extension\n                if (!supportedAudioFormats.has(fileExtension)) {\n                    console.log(\"File format not supported by Web Audio API: \", fileExtension);\n                    return;\n                }\n\n                let reader = new FileReader();\n\n                reader.onload = (ev) => {\n                    let arrayBuffer = ev.target.result;\n                    scope.track.setSampleData(file.name, arrayBuffer);\n                };\n\n                reader.readAsArrayBuffer(file);\n            }\n\n\n            function onDragOver(e) {\n                if (!elem.hasClass(\"track-dragfile\")) {\n                    elem.addClass(\"track-dragfile\");\n                }\n                e.stopPropagation();\n                e.preventDefault();\n            }\n\n\n            function onDrop(e) {\n                e.stopPropagation();\n                e.preventDefault();\n                handleFiles(e.originalEvent.dataTransfer.files);\n                onDragLeave();\n            }\n\n\n            function onDragLeave(e) {\n                if (elem.hasClass(\"track-dragfile\")) {\n                    elem.removeClass(\"track-dragfile\");\n                }\n                if (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            }\n\n            function playSound() {\n                scope.track.playSound();\n            }\n\n\n            function onSoloTrack() {\n                scope.track.drumMachine.soloTrack(scope.track.id);\n            }\n\n            function onMuteTrack() {\n                scope.track.drumMachine.muteTrack(scope.track.id);\n            }\n\n\n\n        }\n    };\n\n}\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * routes.js\n * ---------------------------------------------------------------------------------------\n */\n\nexport function initRoutes($routeProvider) {\n\n\n    $routeProvider.when('/', {\n        controller: \"drumMachineController\",\n        templateUrl: \"app/components/drum-machine/drumMachineView.html\"\n    });\n\n    $routeProvider.when('/test', {\n        controller: \"testController\",\n        templateUrl: \"app/components/test/testView.html\"\n    });\n\n    $routeProvider.otherwise({redirectTo: '/'});\n\n}","/*\n * ---------------------------------------------------------------------------------------\n * utils.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n /*\n  * checkIfiOSdevice\n  */\n export function checkIfiOSdevice() {\n     return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n }\n\n\n\n /*\n  * generate uuid\n  */\n export function guid() {\n     let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n         var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n         return v.toString(16);\n     });\n     return uuid;\n }\n\n\n\n\n export function getExtensionFromFileName(fileName) {\n     let re = /(?:\\.([^.]+))?$/;\n     let ext = re.exec(fileName)[1];\n     return ext;\n }\n\n\n\n export function getFileNameFromPath(path) {\n     return path.replace(/^.*[\\\\\\/]/, '');\n }\n\n\n\n export function getArrayAudioBufferFromUrl(audioCtx, url) {\n\n        return new Promise((resolve, reject) => {\n\n            if (!audioCtx) {\n                reject(\"Missing audio context parameter.\");\n                return;\n            }\n\n            if (!url) {\n                reject(\"Missing url parameter\");\n                return;\n            }\n\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url);\n            xhr.responseType = \"arraybuffer\";\n\n            xhr.onload = function() {\n                resolve(xhr.response);\n            };\n\n            xhr.send();\n        });\n\n}\n\n\n\nexport function getFileExtension(fileName) {\n    return fileName.substr(fileName.lastIndexOf('.') + 1);\n}"]}