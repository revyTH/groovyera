{"version":3,"sources":["node_modules/browser-pack/_prelude.js","public/app/app.js","public/app/audio/DrumMachine.js","public/app/audio/Tick.js","public/app/audio/Track.js","public/app/audio/audio-loader.js","public/app/components/drum-machine/drumMachineController.js","public/app/components/test/testController.js","public/app/directives/tickSlider-directive.js","public/app/directives/track-directive.js","public/app/routes.js","public/app/utils/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_routes","_drumMachineController","_testController","_trackDirective","_tickSliderDirective","app","angular","config","initRoutes","controller","drumMachineController","testController","directive","tickSliderDirective","trackDirective","supportedAudioFormats","Set","add","constant","_audioLoader","_utils","_Track","DrumMachine","_classCallCheck","this","tag","numberOfBeats","AudioContext","window","webkitAudioContext","audioContext","bpm","bpmMin","bpmMax","tickTime","isPlaying","isStopped","buffers","tracks","defaultBuffersLoaded","defaultTracksLoaded","tracksInSolo","tracksInMute","currentTickIndex","callBacksInLoop","soundURLs","kick","snare","hat","ride","checkIfiOSdevice","_enableAudioContextForiOS","audioContextEnabled","_this","$","document","ready","btn","visibility","on","buffer","createBuffer","source","createBufferSource","start","console","log","trigger","_this2","ctx","urls","Promise","resolve","reject","all","audioLoader","then","values","error","kickTrack","Track","setTicksFromArray","snareTrack","hatTrack","active","index","volume","id","scheduler","self","clearTimeout","timeOutID","nextTickTime","currentTime","each","track","mute","trackTick","ticks","tickSound","tickGainNode","createGain","connect","gain","value","gainNode","previousIndex","previousPrevious","firstLoopEnded","forEach","fn","setTimeout","startTime","bufferName","time","sound","destination","trackID","delete","hasOwnProperty","focusTrack","has","solo","size","clear","_typeof","push","key","name","Object","keys","_createEmptyTicksArray","soundPath","pan","_this3","data","_this4","_clearTracks","promises","createTrack","_bpm","val","_onBpmChanged","Tick","arguments","undefined","_Tick","drumMachine","guid","pannerNodeSupported","createStereoPanner","pannerNode","_initTicks","fileName","audioCtx","url","xhr","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","decodedBuffer","send","$scope","$http","FileSaver","Blob","removeTrack","play","preventDefault","stopPropagation","playBtn","css","backgroundColor","backgroundImage","stopBtn","startSequencer","stop","stopSequencer","safeApply","phase","$root","$$phase","$apply","_DrumMachine","bpmSlider","title","ticksElements","integerval","beats","Array","fill","updateBeatIndicators","previousTickIndex","tickIndex","beatIndicators","removeClass","addClass","beatIndicatorsContainer","getElementById","getElementsByClassName","addCallBackInLoop","addEventListener","keyCode","_start","_stop","indicators","addTrack","addEmptyTrack","testAPI","trackData","notes","waitCounter","tick","noteEventData","pitch","velocity","duration","waitParam","timeSignature","num","den","method","headers","Content-Type","JSON","stringify","blob","type","saveAs","loadPreset","Accept","presets","slider","errorResponse","savePreset","preset","_loadDefaultBuffers","_initDefaultTracks","scope","min","max","orientation","slide","event","ui","draggable","updateSlider","isInRangeBPM","restrict","replace","resizeTick","link","elem","attrs","templateUrl","tickElem","ticksContainerWidth","find","width","Math","floor","handleFiles","files","file","reader","FileReader","ev","target","result","setBuffer","readAsArrayBuffer","onDragOver","hasClass","onDrop","originalEvent","dataTransfer","onDragLeave","playSound","onSoloTrack","soloTrack","onMuteTrack","muteTrack","button","icon","showLabel","remove","$routeProvider","when","otherwise","redirectTo","test","navigator","userAgent","MSStream","c","random","toString"],"mappings":"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","file":"app.bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * ---------------------------------------------------------------------------------------\n * app.js\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nimport { initRoutes } from \"./routes\";\n\nimport { drumMachineController } from \"./components/drum-machine/drumMachineController\";\nimport { testController } from \"./components/test/testController\";\n\nimport { trackDirective } from \"./directives/track-directive\";\nimport { tickSliderDirective } from \"./directives/tickSlider-directive\";\n\n\n\n(function() {\n\n    let app = angular.module(\"myApp\", [\"ngRoute\", \"ngFileSaver\"]);\n\n\n    // configure angular routes\n    app.config([\"$routeProvider\", initRoutes]);\n\n\n    // bind controllers\n    app.controller(\"drumMachineController\", [\"$scope\", \"$http\", \"FileSaver\", \"Blob\", drumMachineController]);\n    app.controller(\"testController\", ['$scope', testController]);\n\n\n    // register directives\n    app.directive(\"tickSlider\", tickSliderDirective);\n    app.directive(\"theTrack\", [\"supportedAudioFormats\", trackDirective]);\n\n\n\n    let supportedAudioFormats = new Set();\n    supportedAudioFormats.add(\"audio/wav\");\n    supportedAudioFormats.add(\"audio/x-wav\");\n    supportedAudioFormats.add(\"audio/mp3\");\n    supportedAudioFormats.add(\"audio/x-mp3\");\n    supportedAudioFormats.add(\"audio/ogg\");\n    supportedAudioFormats.add(\"audio/x-ogg\");\n\n    // constants\n    app.constant(\"supportedAudioFormats\", supportedAudioFormats);\n\n\n\n}());","/*\n * ---------------------------------------------------------------------------------------\n * DrumMachine.js\n * ---------------------------------------------------------------------------------------\n */\n\nimport { audioLoader } from \"./audio-loader\";\nimport { checkIfiOSdevice } from \"../utils/utils\";\nimport { Track } from \"./Track\";\n\n\nexport class DrumMachine {\n\n    constructor() {\n        this.tag = \"[DrumMachine.js]\";\n        this.numberOfBeats = 16;\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        this.audioContext = new AudioContext();\n        this.bpm = 120;\n        this.bpmMin = 30;\n        this.bpmMax = 240;\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n        this.isPlaying = false;\n        this.isStopped = true;\n        this.buffers = {};\n        this.tracks = {};\n        this.defaultBuffersLoaded = false;\n        this.defaultTracksLoaded = false;\n        this.tracksInSolo = new Set();\n        this.tracksInMute = new Set();\n\n        this.currentTickIndex = 0;\n\n        this.callBacksInLoop = [];\n\n        this.soundURLs = {\n            kick: \"app/assets/audio/kick.wav\",\n            snare: \"app/assets/audio/snare.wav\",\n            hat: \"app/assets/audio/hat.wav\",\n            ride: \"app/assets/audio/ride.wav\"\n        };\n\n        if (checkIfiOSdevice()) {\n            this._enableAudioContextForiOS();\n        } else {\n            this.audioContextEnabled = true;\n        }\n\n    }\n\n\n    /*\n     * get bpm\n     */\n    get bpm() {\n        return this._bpm;\n    }\n\n    /*\n     * set bpm\n     */\n    set bpm(val) {\n        if (val !== this._bpm) {\n            this._bpm = val;\n            this._onBpmChanged();\n        }\n    }\n\n\n\n\n\n    _enableAudioContextForiOS() {\n        $(document).ready(() => {\n            let btn = $(\"<button/>\", {\n                visibility: \"hidden\"\n            });\n\n            btn.on(\"touchstart\", () => {\n                let buffer = this.audioContext.createBuffer(1, 1, 22050);\n                let source = this.audioContext.createBufferSource();\n                source.buffer = buffer;\n                source.start();\n\n                this.audioContextEnabled = true;\n                console.log(\"AudioContext enabled for iOS\");\n            });\n\n            btn.trigger(\"touchstart\");\n\n        });\n    }\n\n\n    _loadDefaultBuffers() {\n\n        let ctx = this.audioContext;\n        let urls = this.soundURLs;\n\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                audioLoader(ctx, urls.kick),\n                audioLoader(ctx, urls.snare),\n                audioLoader(ctx, urls.hat),\n                audioLoader(ctx, urls.ride)\n            ]).then(values => {\n                this.buffers[\"kick\"] = values[0];\n                this.buffers[\"snare\"] = values[1];\n                this.buffers[\"hat\"] = values[2];\n                this.buffers[\"ride\"] = values[3];\n                this.defaultBuffersLoaded = true;\n                console.log(this.buffers);\n\n                this.defaultBuffersLoaded = true;\n                console.log(\"Default buffers loaded\");\n                // this._initDefaultTracks();\n\n                resolve(\"Default buffers loaded\");\n\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n\n\n    _initDefaultTracks() {\n\n        if (!this.defaultBuffersLoaded) {\n            return;\n        }\n\n        this.tracks = {};\n\n        let kickTrack = new Track(this, \"kick\", this.buffers[\"kick\"]);\n        kickTrack.setTicksFromArray([0,4,8,12]);\n        let snareTrack = new Track(this, \"snare\", this.buffers[\"snare\"], 1, 0.1);\n        snareTrack.setTicksFromArray([4,12]);\n        let hatTrack = new Track(this, \"hat\", this.buffers[\"hat\"], 0.85, -1);\n        // hatTrack.setTicksFromArray([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\n\n\n        hatTrack.setTicksFromArray([\n            {\n                active: true,\n                index: 0,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 1,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 2,\n                volume: 1.2\n            },\n            {\n                active: true,\n                index: 3,\n                volume: 0.4\n            },\n            {\n                active: true,\n                index: 4,\n                volume: 0.9\n            },\n            {\n                active: true,\n                index: 5,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 6,\n                volume: 1\n            },\n            {\n                active: true,\n                index: 7,\n                volume: 0.4\n            },\n            {\n                active: true,\n                index: 8,\n                volume: 0.9\n            },\n            {\n                active: true,\n                index: 9,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 10,\n                volume: 1\n            },\n            {\n                active: true,\n                index: 11,\n                volume: 0.4\n            },\n            {\n                active: true,\n                index: 12,\n                volume: 0.9\n            },\n            {\n                active: true,\n                index: 13,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 14,\n                volume: 1\n            },\n            {\n                active: true,\n                index: 15,\n                volume: 0.4\n            }\n        ]);\n\n        this.tracks[kickTrack.id] = kickTrack;\n        this.tracks[snareTrack.id] = snareTrack;\n        this.tracks[hatTrack.id] = hatTrack;\n\n        this.defaultTracksLoaded = true;\n        console.log(\"Default tracks loaded\" , this.tracks);\n\n        // this._start();\n    }\n\n\n    _onBpmChanged() {\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n    }\n\n\n\n    _start() {\n\n        if (!this.audioContextEnabled) {\n            console.log(\"Cannot play: AudioContext is not enabled.\");\n            return;\n        }\n\n        if (this.isPlaying) {\n            console.log(\"Cannot play: it is already playing.\");\n            return;\n        }\n\n        if (!this.defaultTracksLoaded) {\n            console.log(\"Cannot play: default tracks not loaded.\");\n            return;\n        }\n\n\n        this.isStopped = false;\n        let self = this;\n        let ctx = this.audioContext;\n        let startTime = ctx.currentTime;\n        let nextTickTime = startTime + self.tickTime;\n        let index = 0;\n        let timeOutID;\n        let firstLoopEnded = false;\n\n\n        function scheduler() {\n\n            if (self.isStopped) {\n                clearTimeout(timeOutID);\n                self.isPlaying = false;\n                return;\n            }\n\n\n            if (nextTickTime <= ctx.currentTime + self.tickTime ) {\n\n                self.isPlaying = true;\n                self.isStopped = false;\n\n                $.each(self.tracks, (id, track) => {\n\n                    if (track.mute) {\n                        return;\n                    }\n\n                    if (!track.buffer) {\n                        return;\n                    }\n\n                    let trackTick = track.ticks[index];\n\n                    if (!trackTick.active) {\n                        return;\n                    }\n\n                    let tickSound = ctx.createBufferSource();\n                    tickSound.buffer = track.buffer;\n                    let tickGainNode = ctx.createGain();\n                    tickSound.connect(tickGainNode);\n                    tickGainNode.gain.value = trackTick.volume;\n                    tickGainNode.connect(track.gainNode);\n                    tickSound.start(nextTickTime);\n\n                });\n\n                self.currentTickIndex = index;\n                let previousIndex = index === 0 ? (self.numberOfBeats - 1) : index - 1;\n                let previousPrevious = previousIndex === 0 ? (self.numberOfBeats - 1) : previousIndex - 1;\n\n                // to syncronize web audio api schedule with ui beat indicators\n                if (firstLoopEnded) {\n                    self.callBacksInLoop.forEach(fn => {\n                        fn(previousPrevious, previousIndex);\n                    });\n                }\n\n                nextTickTime += self.tickTime;\n                index = ++index === self.numberOfBeats ? 0 : index;\n            }\n\n            firstLoopEnded = true;\n            timeOutID = window.setTimeout(scheduler, 0);\n        }\n\n        scheduler();\n    }\n\n\n    _stop() {\n        this.isStopped = true;\n    }\n\n\n\n\n\n    _playSound(bufferName, time) {\n        let ctx = this.audioContext;\n        let sound = ctx.createBufferSource();\n        sound.buffer = this.buffers[bufferName];\n        sound.connect(ctx.destination);\n        sound.start(time);\n    }\n\n\n\n\n    removeTrack(trackID) {\n        let track = this.tracks[trackID];\n        this.tracksInSolo.delete(track);\n        this.tracksInMute.delete(track);\n        delete this.tracks[trackID];\n    }\n\n\n\n    soloTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this.tracksInSolo;\n        let tracksInMute = this.tracksInMute;\n\n        // case 1: track is not in solo and not in mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            $.each(this.tracks, (id, track) => {\n               if (id === trackID) {\n                   return;\n               }\n\n               if (!tracksInSolo.has(track)) {\n                   tracksInMute.add(track);\n                   track.mute = true;\n                   track.solo = false;\n               }\n            });\n        }\n\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            focusTrack.solo = false;\n\n            if (tracksInSolo.size > 0) {\n                tracksInMute.add(focusTrack);\n                focusTrack.mute = true;\n            } else {\n                tracksInMute.clear();\n                tracksInSolo.clear();\n                $.each(this.tracks, (id, track) => {\n                   track.mute = false;\n                   track.solo = false;\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else {\n\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            if (tracksInSolo.size === 1) {\n                $.each(this.tracks, (id, track) => {\n                   if (id !== trackID) {\n                       tracksInMute.add(track);\n                       track.mute = true;\n                   }\n                });\n            }\n        }\n    }\n\n\n\n    muteTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this.tracksInSolo;\n        let tracksInMute = this.tracksInMute;\n\n        // case 1: track not in solo or mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInMute.add(focusTrack);\n            focusTrack.mute = true;\n            focusTrack.solo = false;\n        }\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            tracksInMute.add(focusTrack);\n            focusTrack.solo = false;\n            focusTrack.mute = true;\n\n            if (tracksInSolo.size === 0) {\n                $.each(this.tracks, (id, track) => {\n                    if (id !== trackID) {\n                        tracksInMute.delete(track);\n                        track.mute = false;\n                    }\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else if (tracksInMute.has(focusTrack)) {\n            if (tracksInSolo.size > 0) {\n                tracksInMute.delete(focusTrack);\n                tracksInSolo.add(focusTrack);\n                focusTrack.mute = false;\n                focusTrack.solo = true;\n            }\n            else {\n                tracksInMute.delete(focusTrack);\n                focusTrack.mute = false;\n            }\n\n        }\n    }\n\n\n    addCallBackInLoop(fn) {\n        if (!typeof fn === \"function\") return;\n        this.callBacksInLoop.push( fn );\n    }\n\n\n    isInRangeBPM(value) {\n        if (value >= this.bpmMin && value <= this.bpmMax) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n    _createEmptyTicksArray() {\n        let ticks = [];\n        for(let i = 0; i < this.numberOfBeats; i++) {\n\n            console.log(i);\n\n            ticks.push({\n                index: i,\n                volume: 0,\n                active: false\n            });\n        }\n        return ticks;\n    }\n\n\n    _clearTracks() {\n        this.tracksInSolo.clear();\n        this.tracksInMute.clear();\n\n        for (let key in this.tracks) {\n            if (this.tracks.hasOwnProperty(key)) {\n                delete this.tracks[key];\n            }\n        }\n    }\n\n\n    addEmptyTrack() {\n        let name = \"track_\" + Object.keys(this.tracks).length;\n        let track = new Track(this, name);\n        track.setTicksFromArray(this._createEmptyTicksArray());\n        this.tracks[track.id] = track;\n    }\n\n\n    createTrack(name, soundPath, volume, pan, ticks) {\n        return new Promise((resolve, reject) => {\n            audioLoader(this.audioContext, soundPath).then(buffer => {\n\n                let track = new Track(this, name, buffer);\n\n                if (ticks) {\n                    track.setTicksFromArray(ticks);\n                } else {\n                    track.setTicksFromArray(this._createEmptyTicksArray());\n                }\n\n                if (volume) {\n                    track.volume = volume;\n                }\n\n                if (pan) {\n                    track.pan = pan;\n                }\n\n                resolve(track);\n\n            }, error => {\n                console.log(error);\n                reject(error);\n            });\n        });\n    }\n\n\n\n    loadPreset(data) {\n        try {\n            this.bpm = data.bpm;\n            this._clearTracks();\n\n            let promises = [];\n\n            data.tracks.forEach((track) => {\n                promises.push(this.createTrack(track.name, track.soundPath, track.volume, track.pan, track.ticks));\n            });\n\n            return Promise.all(promises);\n        }\n        catch (e) {\n            return new Promise((resolve, reject) => {\n                reject(e);\n            });\n        }\n    }\n\n\n\n\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * Tick.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n export class Tick {\n\n     constructor(index = 0, active = false, volume = 1.0) {\n         this.index = index;\n         this.active = active;\n         this.volume = volume;\n     }\n\n     // get volume() {\n     //     return this._volume;\n     // }\n     //\n     // set volume(val) {\n     //     this._volume = val > 1 ? 1.0 : val;\n     // }\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * Track.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n import { Tick } from \"./Tick\";\nimport { guid } from \"../utils/utils\";\n\n\n export class Track {\n\n     constructor (drumMachine, name = \"track_default\", buffer = undefined, volume = 1.0, pan = 0, mute = false ) {\n         this.id = guid();\n         this.drumMachine = drumMachine;\n         this.audioContext = drumMachine.audioContext;\n         this.name = name;\n         this.buffer = buffer;\n         this.solo = false;\n         this.mute = mute;\n         this.ticks = [];\n         this.pannerNodeSupported = false;\n         this.gainNode = this.audioContext.createGain();\n         this.gainNode.gain.value = volume;\n\n\n         if (typeof this.audioContext.createStereoPanner === \"function\") {\n             this.pannerNode = this.audioContext.createStereoPanner();\n             this.pannerNode.pan.value = pan;\n             this.gainNode.connect(this.pannerNode);\n             this.pannerNode.connect(this.audioContext.destination);\n             this.pannerNodeSupported = true;\n             console.log(\"Stereo panner supported\");\n         } else {\n             this.gainNode.connect(this.audioContext.destination);\n             console.log(\"Stereo panner not supported\");\n         }\n\n         this._initTicks();\n     }\n\n\n     // setGain(val) {\n     //     this.gainNode.gain.value = val > 1 ? 1.0 : val;\n     // }\n\n\n     // setPan(val) {\n     //     if (val < -1) {\n     //         this.pannerNode.pan.value = -1;\n     //     }\n     //     else if (val > 1) {\n     //         this.pannerNode.pan.value = 1;\n     //     }\n     //     else {\n     //         this.pannerNode.pan.value = val;\n     //     }\n     // }\n\n\n\n     /*\n      *\n      */\n     _initTicks() {\n         this.ticks = [];\n         for (let i = 0; i < this.drumMachine.numberOfBeats; ++i) {\n             this.ticks.push(new Tick(i));\n         }\n     }\n\n\n     setTick(index, active = true, volume = 1.0) {\n         if (index < 0 || index > (this.drumMachine.numberOfBeats-1)) {\n             return;\n         }\n\n         this.ticks[index].volume = volume;\n         this.ticks[index].active = active;\n     }\n\n\n     setTicksFromArray(data) {\n         data.forEach(e => {\n             if (typeof e === \"object\") {\n                 if (e.index === \"undefined\" || e.index < 0 || e.index > (this.drumMachine.numberOfBeats-1)) {\n                     return;\n                 }\n\n                 this.ticks[e.index].volume = e.volume !== \"undefined\" ? e.volume : 0;\n                 this.ticks[e.index].active = e.active !== \"undefined\" ? e.active : false;\n             }\n             else {\n                 this.ticks[e].active = true;\n             }\n         });\n     }\n\n\n     setBuffer(buffer, fileName) {\n         this.buffer = buffer;\n         console.log(\"Track \" + this.name + \": audio buffer changed ( \" + fileName + \" )\");\n     }\n\n\n     playSound() {\n         if (!this.audioContext || !this.buffer) return;\n         let sound = this.audioContext.createBufferSource();\n         sound.buffer = this.buffer;\n         sound.connect(this.audioContext.destination);\n         sound.start();\n     }\n\n\n\n\n\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * audio-loader.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\nexport function audioLoader(audioCtx, url) {\n\n    return new Promise((resolve, reject) => {\n\n        if (!audioCtx) {\n            reject(\"Missing audio context parameter.\");\n            return;\n        }\n\n        if (!url) {\n            reject(\"Missing url parameter\");\n            return;\n        }\n\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", url);\n        xhr.responseType = \"arraybuffer\";\n\n        xhr.onload = function() {\n            try {\n                audioCtx.decodeAudioData(xhr.response, function(decodedBuffer) {\n                    resolve(decodedBuffer);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        };\n\n        xhr.send();\n    });\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * mainController.js\n * ---------------------------------------------------------------------------------------\n */\n\n\nimport { DrumMachine } from \"../../audio/DrumMachine\";\n\n\nexport function drumMachineController($scope, $http, FileSaver, Blob) {\n\n    $scope.safeApply = function(fn) {\n        var phase = this.$root.$$phase;\n        if(phase == '$apply' || phase == '$digest') {\n            if(fn && (typeof(fn) === 'function')) {\n                fn();\n            }\n        } else {\n            this.$apply(fn);\n        }\n    };\n\n    let drumMachine = new DrumMachine();\n    let playBtn = $(\"#sequencerPlayButton\");\n    let stopBtn = $(\"#sequencerStopButton\");\n    let bpmSlider = $(\"#sequencerBPMslider\");\n\n\n\n    $scope.title = \"Main Controller\";\n    $scope.tracks = [];\n    $scope.ticksElements = [];\n    $scope.bpm = drumMachine.bpm;\n    $scope.isPlaying = drumMachine.isPlaying;\n    $scope.isStopped = drumMachine.isStopped;\n    $scope.removeTrack = removeTrack;\n    $scope.integerval = /^\\d*$/;\n    $scope.beats = new Array(drumMachine.numberOfBeats).fill(false);\n\n\n\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * event listeners\n     * ---------------------------------------------------------------------------------------\n     */\n\n    $(window).ready(() => {\n\n        let beatIndicatorsContainer = document.getElementById(\"beatIndicators\");\n        let beatIndicators = beatIndicatorsContainer.getElementsByClassName(\"beat-indicator\");\n\n        function updateBeatIndicators(previousTickIndex, tickIndex) {\n            $(beatIndicators[previousTickIndex]).removeClass(\"beat-indicator-active\");\n            $(beatIndicators[tickIndex]).addClass(\"beat-indicator-active\");\n        }\n\n        drumMachine.addCallBackInLoop(updateBeatIndicators);\n\n    });\n\n\n    window.addEventListener(\"keyup\", (e) => {\n        switch (e.keyCode) {\n\n            case 32:\n                if ($scope.isStopped) {\n                    play(e);\n                } else {\n                    stop(e);\n                }\n                break;\n\n            default:\n                break;\n        }\n    });\n\n\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * public\n     * ---------------------------------------------------------------------------------------\n     */\n\n    $scope.startSequencer = () => {\n        drumMachine._start();\n        $scope.isPlaying = true;\n        $scope.isStopped = false;\n    };\n\n    $scope.stopSequencer = () => {\n        drumMachine._stop();\n        $scope.isPlaying = false;\n        $scope.isStopped = true;\n        let indicators = document.getElementById(\"beatIndicators\").getElementsByClassName(\"beat-indicator\");\n        $(indicators).removeClass(\"beat-indicator-active\");\n    };\n\n\n    $scope.addTrack = () => {\n        drumMachine.addEmptyTrack();\n    };\n\n\n    $scope.testAPI = () => {\n\n\n        // $http({\n        //     url: 'http://localhost:4500/api/midi',\n        //     method: \"GET\",\n        //     responseType: \"arraybuffer\"\n        // }).then(function (response) {\n        //     console.log(response);\n        //     let blob = new Blob([response.data], { type: 'audio/midi' });\n        //     // console.log(response.headers);\n        //     // let fileName = response.headers('content-disposition');\n        //     FileSaver.saveAs(blob, \"loopish.mid\");\n        // }, function (response) {\n        //     console.log('Unable to download the file')\n        // });\n\n\n        let tracks = [];\n        for (let key in drumMachine.tracks) {\n            if (drumMachine.tracks.hasOwnProperty(key)) {\n\n                let track = drumMachine.tracks[key];\n                let trackData = {\n                    name: track.name,\n                    notes: []\n                };\n\n                let waitCounter = 0;\n                track.ticks.forEach((tick) => {\n\n                    if (tick.active) {\n                        let noteEventData = {\n                            pitch: [\"C4\"],\n                            velocity: tick.volume,\n                            duration: \"16\"  // 1/16\n                        };\n\n                        if (waitCounter > 0) {\n                            let waitParam = \"T\" + waitCounter * 32; //number of ticks to wait (each tick is 1/128)\n                            noteEventData[\"wait\"] = waitParam;\n                        }\n\n                        trackData.notes.push(noteEventData);\n                        waitCounter = 0;\n\n                        // console.log(noteEventData);\n\n                    }\n\n                    else {\n                        waitCounter += 1;\n                    }\n                });\n\n                tracks.push(trackData);\n            }\n        }\n\n\n        let data = {\n            bpm: drumMachine.bpm,\n            timeSignature: {num: 4, den: 4},\n            tracks: tracks\n        };\n\n\n        console.log(\"DATA TO SEND\", data);\n\n\n        $http({\n            url: 'http://localhost:4500/api/midi',\n            method: \"POST\",\n            responseType: \"arraybuffer\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            data: JSON.stringify(data)\n\n        }).then(function (response) {\n            console.log(response);\n            let blob = new Blob([response.data], { type: 'audio/midi' });\n            // let fileName = response.headers('content-disposition');\n            FileSaver.saveAs(blob, \"loopish.mid\");\n        }, function (response) {\n            console.log(response);\n        });\n\n    };\n\n\n\n    $scope.loadPreset = () => {\n\n\n        $http({\n            url: \"http://localhost:4500/api/presets\",\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        }).then(response => {\n\n            let presets = response.data;\n            if (presets.length === 0) {\n                return;\n            }\n\n            drumMachine.loadPreset(presets[0]).then(tracks => {\n\n                tracks.forEach(t => {\n                    drumMachine.tracks[t.id] = t;\n                });\n\n                $scope.bpm = drumMachine.bpm;\n                bpmSlider.slider(\"value\", $scope.bpm);\n                $scope.$apply();\n\n\n            }, error => {\n                console.log(error);\n            });\n\n\n\n        }, errorResponse => {\n            console.log(errorResponse);\n        });\n\n\n    };\n\n\n\n\n    $scope.savePreset = function() {\n\n        let preset = {\n\n            name: \"preset001\",\n            bpm: 180,\n            timeSignature: {\n                num: 4,\n                den: 4\n            },\n\n            tracks: [\n                {\n                    name: \"kick\",\n                    soundPath: \"app/assets/audio/kick.wav\",\n                    volume: 1,\n                    pan: 0,\n                    ticks: [\n                        {\n                            active: true,\n                            index: 0,\n                            volume: 1\n                        },\n                        {\n                            active: true,\n                            index: 4,\n                            volume: 1\n                        },\n                        {\n                            active: true,\n                            index: 8,\n                            volume: 1\n                        },\n                        {\n                            active: true,\n                            index: 12,\n                            volume: 1\n                        }\n                    ]\n                },\n                {\n                    name: \"snare\",\n                    soundPath: \"app/assets/audio/snare.wav\",\n                    volume: 1,\n                    pan: 0,\n                    ticks: [\n                        {\n                            active: true,\n                            index: 4,\n                            volume: 1\n                        },\n                        {\n                            active: true,\n                            index: 12,\n                            volume: 1\n                        }\n                    ]\n                },\n                {\n                    name: \"hats\",\n                    soundPath: \"app/assets/audio/hat.wav\",\n                    volume: 1,\n                    pan: 0,\n                    ticks: [\n                        {\n                            active: true,\n                            index: 1,\n                            volume: 0.5\n                        },\n                        {\n                            active: true,\n                            index: 2,\n                            volume: 0.9\n                        },\n                        {\n                            active: true,\n                            index: 3,\n                            volume: 0.7\n                        },{\n                            active: true,\n                            index: 5,\n                            volume: 0.5\n                        },{\n                            active: true,\n                            index: 6,\n                            volume: 0.9\n                        },{\n                            active: true,\n                            index: 7,\n                            volume: 0.7\n                        },{\n                            active: true,\n                            index: 9,\n                            volume: 0.5\n                        },{\n                            active: true,\n                            index: 10,\n                            volume: 0.9\n                        },{\n                            active: true,\n                            index: 11,\n                            volume: 0.7\n                        },{\n                            active: true,\n                            index: 13,\n                            volume: 0.5\n                        },{\n                            active: true,\n                            index: 14,\n                            volume: 0.9\n                        },{\n                            active: true,\n                            index: 15,\n                            volume: 0.7\n                        }\n                    ]\n                },\n            ]\n        };\n\n\n\n        $http({\n            url: 'http://localhost:4500/api/presets',\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            data: JSON.stringify(preset)\n\n        }).then(function (response) {\n            console.log(response);\n        }, function (response) {\n            console.log(response);\n        });\n\n\n\n    };\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * private\n     * ---------------------------------------------------------------------------------------\n     */\n\n    function removeTrack(track) {\n        drumMachine.removeTrack(track.id);\n    }\n\n    function initDefaultTracks($scope, drumMachine) {\n        drumMachine._loadDefaultBuffers().then(() => {\n            drumMachine._initDefaultTracks();\n            $scope.tracks = drumMachine.tracks;\n            $scope.$apply();\n        }, error => {\n            console.log(error);\n        });\n    }\n\n    function initDATgui(drumMachine) {\n        let gui = new dat.GUI();\n        let bpmController = gui.add(drumMachine, \"bpm\", 50.0, 220.0);\n\n        bpmController.onChange(value => {\n            drumMachine.bpm = Math.floor(drumMachine.bpm);\n        });\n    }\n\n\n    function initSequencerControls(scope, drumMachine) {\n\n        playBtn.on(\"mousedown touchstart\", (e) => {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            playBtn.css({\n                backgroundColor: \"#444\"\n            });\n        });\n\n        playBtn.on(\"mouseup touchend\", (e) => {\n            play(e);\n        });\n\n\n\n\n        stopBtn.on(\"mousedown touchstart\", (e) => {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            stopBtn.css({\n                backgroundColor: \"#444\"\n            });\n        });\n\n        stopBtn.on(\"mouseup touchend\", (e) => {\n            stop(e);\n        });\n\n\n        bpmSlider.slider({\n            min: drumMachine.bpmMin,\n            max: drumMachine.bpmMax,\n            orientation: \"horizontal\",\n            value: scope.bpm,\n            slide: (event, ui) => {\n                drumMachine.bpm = ui.value;\n                scope.bpm = ui.value;\n                scope.$apply();\n            }\n        }).draggable();\n\n\n\n        scope.updateSlider = function() {\n            if (drumMachine.isInRangeBPM(scope.bpm)) {\n                bpmSlider.slider(\"value\", scope.bpm);\n                drumMachine.bpm = scope.bpm;\n            }\n        }\n    }\n\n\n\n    function play(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        playBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Play-50-green.png)\"\n        });\n\n        stopBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Stop-50-white.png)\"\n        });\n\n        $scope.startSequencer();\n    }\n\n\n    function stop(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        stopBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Stop-50-red.png)\"\n        });\n\n        playBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Play-50-white.png)\"\n        });\n\n        $scope.stopSequencer();\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * init\n     * ---------------------------------------------------------------------------------------\n     */\n\n    initDefaultTracks($scope, drumMachine);\n    initSequencerControls($scope, drumMachine);\n    // initDATgui(drumMachine);\n\n}\n\n\n\n\n\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * testController.js\n * ---------------------------------------------------------------------------------------\n */\n\n export function testController($scope) {\n\n     $scope.title = \"Test Controller\";\n     console.log(\"Test Controller\");\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * verticalSlider directive\n * ---------------------------------------------------------------------------------------\n */\n\n\"use strict\";\n\nexport function tickSliderDirective() {\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            tick: \"=\",\n            ticksElements: \"=\",\n            resizeTick: \"=\"\n        },\n        link: (scope, elem, attrs) => {\n\n\n            // console.log(scope.tick);\n            scope.ticksElements.push(elem);\n\n\n            elem.slider({\n                min: 0,\n                max: 100,\n                orientation: \"vertical\",\n                value: scope.tick.active ? scope.tick.volume * 100 : 0,\n                slide: (event, ui) => {\n\n                    if (ui.value === 0) {\n                        scope.tick.active = false;\n                    }\n                    else {\n                        scope.tick.active = true;\n                    }\n\n                    scope.tick.volume = ui.value * 0.01;\n                    // console.log(scope.tick.volume);\n                }\n            }).draggable();\n\n            // scope.resizeTick(elem);\n\n        }\n    };\n\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * trackDirective\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nexport function trackDirective(supportedAudioFormats) {\n\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            track: \"=\",\n            ticksElements: \"=\",\n            removeTrack: \"=\"\n        },\n        templateUrl: \"app/directives/templates/trackDirTemplate.html\",\n        link: function (scope, elem, attrs) {\n\n            scope.resizeTick = resizeTick;\n            scope.handleFiles = handleFiles;\n            scope.playSound = playSound;\n            scope.onSoloTrack = onSoloTrack;\n            scope.onMuteTrack = onMuteTrack;\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * styles & widgets\n             * ---------------------------------------------------------------------------------------\n             */\n\n            elem.find('button[name=\"removeTrackButton\"]').button({\n                icon: \"ui-icon-close\",\n                showLabel: false\n            });\n\n            elem.find('button[name=\"playSoundButton\"]').button({\n                icon: \"ui-icon-circle-triangle-e\",\n                showLabel: false\n            });\n\n            elem.find('div[id=\"trackVolumeSlider\"]').slider({\n                min: 0,\n                max: 100,\n                orientation: \"horizontal\",\n                value: scope.track.gainNode.gain.value * 100,\n                slide: (event, ui) => {\n                    scope.track.gainNode.gain.value = ui.value * 0.01;\n                }\n            }).draggable();\n\n            if (scope.track.pannerNodeSupported) {\n                elem.find('div[id=\"trackPanSlider\"]').slider({\n                    min: -100,\n                    max: 100,\n                    orientation: \"horizontal\",\n                    value: scope.track.pannerNode.pan.value * 100,\n                    slide: (event, ui) => {\n                        scope.track.pannerNode.pan.value = ui.value * 0.01;\n                    }\n                }).draggable();\n            } else {\n                elem.find('div[id=\"trackPanSlider\"]').remove();\n                elem.find(\".pan-label\").remove();\n\n                // push down volume slider\n                elem.find('div[id=\"trackVolumeSlider\"]').css({\n                    // marginTop: 0,\n                    // position: \"relative\",\n                    // bottom: 0\n                });\n            }\n\n\n            elem.find('button[name=soloTrackButton]').button({\n\n            });\n\n            elem.find('button[name=muteTrackButton]').button({\n\n            });\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * event listeners\n             * ---------------------------------------------------------------------------------------\n             */\n\n            // $(window).resize(() => {\n            //     scope.ticksElements.forEach((e) => {\n            //         resizeTick(e);\n            //     });\n            // });\n\n\n\n\n            elem.on(\"dragover\", onDragOver);\n            elem.on(\"drop\", onDrop);\n            elem.on(\"dragleave\", onDragLeave);\n\n\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * private functions\n             * ---------------------------------------------------------------------------------------\n             */\n\n            function resizeTick(tickElem) {\n                let ticksContainerWidth = elem.find(\".ticks-container\").width();\n                console.log(ticksContainerWidth);\n                let margin = 8;\n                let tickWidth = Math.floor((ticksContainerWidth - 15 * margin) / 16.0);\n\n\n                // tickElem.css({\n                //     width: 32,\n                //     marginRight: \"8px !important\"\n                // });\n\n\n                // tickElem.parent().css({\n                //     width: tickWidth,\n                //     marginRight: margin\n                // });\n\n\n\n                // tickElem.find(\".ui-slider-handle\").css({\n                //\n                // });\n\n            }\n\n\n            function handleFiles(files) {\n                if (!files || files.length < 1) return;\n\n                let file = files[0];\n\n                // chech if it is an audio file with a supported extension\n                if (!supportedAudioFormats.has(file.type)) {\n                    console.log(\"File format not supported by Web Audio API\");\n                    return;\n                }\n\n                let reader = new FileReader();\n                reader.onload = (ev) => {\n                    scope.track.audioContext.decodeAudioData(ev.target.result, function (buffer) {\n                        scope.track.setBuffer(buffer, file.name);\n                    });\n                };\n                reader.readAsArrayBuffer(file);\n            }\n\n\n            function onDragOver(e) {\n                if (!elem.hasClass(\"track-dragfile\")) {\n                    elem.addClass(\"track-dragfile\");\n                }\n                e.stopPropagation();\n                e.preventDefault();\n            }\n\n\n            function onDrop(e) {\n                e.stopPropagation();\n                e.preventDefault();\n                handleFiles(e.originalEvent.dataTransfer.files);\n                onDragLeave();\n            }\n\n\n            function onDragLeave(e) {\n                if (elem.hasClass(\"track-dragfile\")) {\n                    elem.removeClass(\"track-dragfile\");\n                }\n                if (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            }\n\n            function playSound() {\n                scope.track.playSound();\n            }\n\n\n            function onSoloTrack() {\n                scope.track.drumMachine.soloTrack(scope.track.id);\n            }\n\n            function onMuteTrack() {\n                scope.track.drumMachine.muteTrack(scope.track.id);\n            }\n\n\n\n        }\n    };\n\n}\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * routes.js\n * ---------------------------------------------------------------------------------------\n */\n\nexport function initRoutes($routeProvider) {\n\n\n    $routeProvider.when('/', {\n        controller: \"drumMachineController\",\n        templateUrl: \"app/components/drum-machine/drumMachineView.html\"\n    });\n\n    $routeProvider.when('/test', {\n        controller: \"testController\",\n        templateUrl: \"app/components/test/testView.html\"\n    });\n\n    $routeProvider.otherwise({redirectTo: '/'});\n\n}","/*\n * ---------------------------------------------------------------------------------------\n * utils.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n /*\n  * checkIfiOSdevice\n  */\n export function checkIfiOSdevice() {\n     return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n }\n\n\n\n /*\n  * generate uuid\n  */\n export function guid() {\n     let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n         var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n         return v.toString(16);\n     });\n     return uuid;\n }"]}