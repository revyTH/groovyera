{"version":3,"sources":["node_modules/browser-pack/_prelude.js","public/app/app.js","public/app/audio/DrumMachine.js","public/app/audio/Tick.js","public/app/audio/Track.js","public/app/audio/audio-loader.js","public/app/components/main/mainController.js","public/app/components/test/testController.js","public/app/directives/tickSlider-directive.js","public/app/directives/track-directive.js","public/app/routes.js","public/app/utils/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_routes","_mainController","_testController","_trackDirective","_tickSliderDirective","app","angular","config","initRoutes","controller","mainController","testController","directive","tickSliderDirective","trackDirective","supportedAudioFormats","Set","add","constant","_audioLoader","_utils","_Track","DrumMachine","_classCallCheck","this","tag","numberOfBeats","AudioContext","window","webkitAudioContext","audioContext","bpm","bpmMin","bpmMax","tickTime","isPlaying","isStopped","buffers","tracks","defaultBuffersLoaded","defaultTracksLoaded","tracksInSolo","tracksInMute","currentTickIndex","callBacksInLoop","soundURLs","kick","snare","hat","ride","checkIfiOSdevice","_enableAudioContextForiOS","audioContextEnabled","_this","$","document","ready","btn","visibility","on","buffer","createBuffer","source","createBufferSource","start","console","log","trigger","_this2","ctx","urls","Promise","resolve","reject","all","audioLoader","then","values","error","kickTrack","Track","setTicksFromArray","snareTrack","hatTrack","index","volume","id","scheduler","self","clearTimeout","timeOutID","nextTickTime","currentTime","each","track","mute","trackTick","ticks","active","tickSound","tickGainNode","createGain","connect","gain","value","gainNode","previousIndex","previousPrevious","firstLoopEnded","forEach","fn","setTimeout","startTime","bufferName","time","sound","destination","name","soundUrl","_this3","arguments","undefined","pan","hasOwnProperty","newTrack","trackID","focusTrack","has","delete","solo","size","clear","_typeof","push","_bpm","val","_onBpmChanged","Tick","_volume","_Tick","drumMachine","guid","pannerNodeSupported","createStereoPanner","pannerNode","_initTicks","data","tick","fileName","audioCtx","url","xhr","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","decodedBuffer","send","$scope","removeTrack","play","preventDefault","stopPropagation","playBtn","css","backgroundColor","backgroundImage","stopBtn","startSequencer","stop","stopSequencer","safeApply","phase","$root","$$phase","$apply","_DrumMachine","bpmSlider","title","ticksElements","integerval","beats","Array","fill","updateBeatIndicators","previousTickIndex","tickIndex","beatIndicators","removeClass","addClass","beatIndicatorsContainer","getElementById","getElementsByClassName","addCallBackInLoop","addEventListener","keyCode","_start","_stop","indicators","_loadDefaultBuffers","_initDefaultTracks","scope","slider","min","max","orientation","slide","event","ui","draggable","updateSlider","isInRangeBPM","restrict","replace","resizeTick","link","elem","attrs","templateUrl","tickElem","ticksContainerWidth","find","width","Math","floor","handleFiles","files","file","type","reader","FileReader","ev","target","result","setBuffer","readAsArrayBuffer","onDragOver","hasClass","onDrop","originalEvent","dataTransfer","onDragLeave","playSound","onSoloTrack","soloTrack","onMuteTrack","muteTrack","button","icon","showLabel","remove","$routeProvider","when","otherwise","redirectTo","test","navigator","userAgent","MSStream","c","random","toString"],"mappings":"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","file":"app.bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * ---------------------------------------------------------------------------------------\n * app.js\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nimport { initRoutes } from \"./routes\";\n\nimport { mainController } from \"./components/main/mainController\";\nimport { testController } from \"./components/test/testController\";\n\nimport { trackDirective } from \"./directives/track-directive\";\nimport { tickSliderDirective } from \"./directives/tickSlider-directive\";\n\n\n\n(function() {\n\n    let app = angular.module(\"myApp\", [\"ngRoute\"]);\n\n\n    // configure angular routes\n    app.config([\"$routeProvider\", initRoutes]);\n\n\n    // bind controllers\n    app.controller(\"mainController\", ['$scope', mainController]);\n    app.controller(\"testController\", ['$scope', testController]);\n\n\n    // register directives\n    app.directive(\"tickSlider\", tickSliderDirective);\n    app.directive(\"theTrack\", [\"supportedAudioFormats\", trackDirective]);\n\n\n\n    let supportedAudioFormats = new Set();\n    supportedAudioFormats.add(\"audio/wav\");\n    supportedAudioFormats.add(\"audio/x-wav\");\n    supportedAudioFormats.add(\"audio/mp3\");\n    supportedAudioFormats.add(\"audio/x-mp3\");\n    supportedAudioFormats.add(\"audio/ogg\");\n    supportedAudioFormats.add(\"audio/x-ogg\");\n\n    // constants\n    app.constant(\"supportedAudioFormats\", supportedAudioFormats);\n\n\n\n}());","/*\n * ---------------------------------------------------------------------------------------\n * DrumMachine.js\n * ---------------------------------------------------------------------------------------\n */\n\nimport { audioLoader } from \"./audio-loader\";\nimport { checkIfiOSdevice } from \"../utils/utils\";\nimport { Track } from \"./Track\";\n\n\nexport class DrumMachine {\n\n    constructor() {\n        this.tag = \"[DrumMachine.js]\";\n        this.numberOfBeats = 16;\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        this.audioContext = new AudioContext();\n        this.bpm = 120;\n        this.bpmMin = 30;\n        this.bpmMax = 260;\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n        this.isPlaying = false;\n        this.isStopped = true;\n        this.buffers = {};\n        this.tracks = {};\n        this.defaultBuffersLoaded = false;\n        this.defaultTracksLoaded = false;\n        this.tracksInSolo = new Set();\n        this.tracksInMute = new Set();\n\n        this.currentTickIndex = 0;\n\n        this.callBacksInLoop = [];\n\n        this.soundURLs = {\n            kick: \"app/assets/audio/kick.wav\",\n            snare: \"app/assets/audio/snare.wav\",\n            hat: \"app/assets/audio/hat.wav\",\n            ride: \"app/assets/audio/ride.wav\"\n        };\n\n        if (checkIfiOSdevice()) {\n            this._enableAudioContextForiOS();\n        } else {\n            this.audioContextEnabled = true;\n        }\n\n    }\n\n\n    /*\n     * get bpm\n     */\n    get bpm() {\n        return this._bpm;\n    }\n\n    /*\n     * set bpm\n     */\n    set bpm(val) {\n        if (val !== this._bpm) {\n            this._bpm = val;\n            this._onBpmChanged();\n        }\n    }\n\n\n\n\n\n    _enableAudioContextForiOS() {\n        $(document).ready(() => {\n            let btn = $(\"<button/>\", {\n                visibility: \"hidden\"\n            });\n\n            btn.on(\"touchstart\", () => {\n                let buffer = this.audioContext.createBuffer(1, 1, 22050);\n                let source = this.audioContext.createBufferSource();\n                source.buffer = buffer;\n                source.start();\n\n                this.audioContextEnabled = true;\n                console.log(\"AudioContext enabled for iOS\");\n            });\n\n            btn.trigger(\"touchstart\");\n\n        });\n    }\n\n\n    _loadDefaultBuffers() {\n\n        let ctx = this.audioContext;\n        let urls = this.soundURLs;\n\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                audioLoader(ctx, urls.kick),\n                audioLoader(ctx, urls.snare),\n                audioLoader(ctx, urls.hat),\n                audioLoader(ctx, urls.ride)\n            ]).then(values => {\n                this.buffers[\"kick\"] = values[0];\n                this.buffers[\"snare\"] = values[1];\n                this.buffers[\"hat\"] = values[2];\n                this.buffers[\"ride\"] = values[3];\n                this.defaultBuffersLoaded = true;\n                console.log(this.buffers);\n\n                this.defaultBuffersLoaded = true;\n                console.log(\"Default buffers loaded\");\n                // this._initDefaultTracks();\n\n                resolve(\"Default buffers loaded\");\n\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n\n\n    _initDefaultTracks() {\n\n        if (!this.defaultBuffersLoaded) {\n            return;\n        }\n\n        this.tracks = {};\n\n        let kickTrack = new Track(this, \"kick\", this.buffers[\"kick\"]);\n        kickTrack.setTicksFromArray([0,4,8,12]);\n        let snareTrack = new Track(this, \"snare\", this.buffers[\"snare\"], 1, 0.1);\n        snareTrack.setTicksFromArray([4,12]);\n        let hatTrack = new Track(this, \"hat\", this.buffers[\"hat\"], 0.85, -1);\n        // hatTrack.setTicksFromArray([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\n\n\n        hatTrack.setTicksFromArray([\n            {\n                index: 0,\n                volume: 0.5\n            },\n            {\n                index: 1,\n                volume: 0.5\n            },\n            {\n                index: 2,\n                volume: 1.2\n            },\n            {\n                index: 3,\n                volume: 0.4\n            },\n            {\n                index: 4,\n                volume: 0.9\n            },\n            {\n                index: 5,\n                volume: 0.5\n            },\n            {\n                index: 6,\n                volume: 1.2\n            },\n            {\n                index: 7,\n                volume: 0.4\n            },\n            {\n                index: 8,\n                volume: 0.9\n            },\n            {\n                index: 9,\n                volume: 0.5\n            },\n            {\n                index: 10,\n                volume: 1.2\n            },\n            {\n                index: 11,\n                volume: 0.4\n            },\n            {\n                index: 12,\n                volume: 0.9\n            },\n            {\n                index: 13,\n                volume: 0.5\n            },\n            {\n                index: 14,\n                volume: 1.2\n            },\n            {\n                index: 15,\n                volume: 0.4\n            }\n        ]);\n\n        this.tracks[kickTrack.id] = kickTrack;\n        this.tracks[snareTrack.id] = snareTrack;\n        this.tracks[hatTrack.id] = hatTrack;\n\n        this.defaultTracksLoaded = true;\n        console.log(\"Default tracks loaded\" , this.tracks);\n\n        // this._start();\n    }\n\n\n    _onBpmChanged() {\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n    }\n\n\n\n    _start() {\n\n        if (!this.audioContextEnabled) {\n            console.log(\"Cannot play: AudioContext is not enabled.\");\n            return;\n        }\n\n        if (this.isPlaying) {\n            console.log(\"Cannot play: it is already playing.\");\n            return;\n        }\n\n        if (!this.defaultTracksLoaded) {\n            console.log(\"Cannot play: default tracks not loaded.\");\n            return;\n        }\n\n\n        this.isStopped = false;\n        let self = this;\n        let ctx = this.audioContext;\n        let startTime = ctx.currentTime;\n        let nextTickTime = startTime + self.tickTime;\n        let index = 0;\n        let timeOutID;\n        let firstLoopEnded = false;\n\n\n        function scheduler() {\n\n            if (self.isStopped) {\n                clearTimeout(timeOutID);\n                self.isPlaying = false;\n                return;\n            }\n\n\n            if (nextTickTime <= ctx.currentTime + self.tickTime ) {\n\n                self.isPlaying = true;\n                self.isStopped = false;\n\n                $.each(self.tracks, (id, track) => {\n\n                    if (track.mute) {\n                        return;\n                    }\n\n                    if (!track.buffer) {\n                        return;\n                    }\n\n                    let trackTick = track.ticks[index];\n\n                    if (!trackTick.active) {\n                        return;\n                    }\n\n                    let tickSound = ctx.createBufferSource();\n                    tickSound.buffer = track.buffer;\n                    let tickGainNode = ctx.createGain();\n                    tickSound.connect(tickGainNode);\n                    tickGainNode.gain.value = trackTick.volume;\n                    tickGainNode.connect(track.gainNode);\n                    tickSound.start(nextTickTime);\n\n                });\n\n                self.currentTickIndex = index;\n                let previousIndex = index === 0 ? (self.numberOfBeats - 1) : index - 1;\n                let previousPrevious = previousIndex === 0 ? (self.numberOfBeats - 1) : previousIndex - 1;\n\n                // to syncronize web audio api schedule with ui beat indicators\n                if (firstLoopEnded) {\n                    self.callBacksInLoop.forEach(fn => {\n                        fn(previousPrevious, previousIndex);\n                    });\n                }\n\n                nextTickTime += self.tickTime;\n                index = ++index === self.numberOfBeats ? 0 : index;\n            }\n\n            firstLoopEnded = true;\n            timeOutID = window.setTimeout(scheduler, 0);\n        }\n\n        scheduler();\n    }\n\n\n    _stop() {\n        this.isStopped = true;\n    }\n\n\n\n\n\n    _playSound(bufferName, time) {\n        let ctx = this.audioContext;\n        let sound = ctx.createBufferSource();\n        sound.buffer = this.buffers[bufferName];\n        sound.connect(ctx.destination);\n        sound.start(time);\n    }\n\n\n\n    addNewTrack(name, soundUrl, volume = 1.0, pan = 0) {\n\n        if (this.buffers.hasOwnProperty(name)) {\n            console.log(\"Track name collision\");\n            return;\n        }\n\n        audioLoader(this.audioContext, soundUrl).then(buffer => {\n            this.buffers[name] = buffer;\n            let newTrack = new Track(this, name, this.buffers[name], volume, pan);\n            this.tracks[newTrack.id] = newTrack;\n            console.log(\"Added track \", newTrack);\n        }, error => {\n            console.log(\"ERROR\", error);\n        });\n    }\n\n\n    removeTrack(trackID) {\n        delete this.tracks[trackID];\n    }\n\n\n\n    soloTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this.tracksInSolo;\n        let tracksInMute = this.tracksInMute;\n\n        // case 1: track is not in solo and not in mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            $.each(this.tracks, (id, track) => {\n               if (id === trackID) {\n                   return;\n               }\n\n               if (!tracksInSolo.has(track)) {\n                   tracksInMute.add(track);\n                   track.mute = true;\n                   track.solo = false;\n               }\n            });\n        }\n\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            focusTrack.solo = false;\n\n            if (tracksInSolo.size > 0) {\n                tracksInMute.add(focusTrack);\n                focusTrack.mute = true;\n            } else {\n                tracksInMute.clear();\n                tracksInSolo.clear();\n                $.each(this.tracks, (id, track) => {\n                   track.mute = false;\n                   track.solo = false;\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else {\n\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            if (tracksInSolo.size === 1) {\n                $.each(this.tracks, (id, track) => {\n                   if (id !== trackID) {\n                       tracksInMute.add(track);\n                       track.mute = true;\n                   }\n                });\n            }\n        }\n    }\n\n\n\n    muteTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this.tracksInSolo;\n        let tracksInMute = this.tracksInMute;\n\n        // case 1: track not in solo or mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInMute.add(focusTrack);\n            focusTrack.mute = true;\n            focusTrack.solo = false;\n        }\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            tracksInMute.add(focusTrack);\n            focusTrack.solo = false;\n            focusTrack.mute = true;\n\n            if (tracksInSolo.size === 0) {\n                $.each(this.tracks, (id, track) => {\n                    if (id !== trackID) {\n                        tracksInMute.delete(track);\n                        track.mute = false;\n                    }\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else if (tracksInMute.has(focusTrack)) {\n            if (tracksInSolo.size > 0) {\n                tracksInMute.delete(focusTrack);\n                tracksInSolo.add(focusTrack);\n                focusTrack.mute = false;\n                focusTrack.solo = true;\n            }\n            else {\n                tracksInMute.delete(focusTrack);\n                focusTrack.mute = false;\n            }\n\n        }\n    }\n\n\n    addCallBackInLoop(fn) {\n        if (!typeof fn === \"function\") return;\n        this.callBacksInLoop.push( fn );\n    }\n\n\n    isInRangeBPM(value) {\n        if (value >= this.bpmMin && value <= this.bpmMax) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n\n\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * Tick.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n export class Tick {\n\n     constructor(index = 0, active = false, volume = 1.0) {\n         this.index = index;\n         this.active = active;\n         this.volume = volume;\n     }\n\n     get volume() {\n         return this._volume;\n     }\n\n     set volume(val) {\n         this._volume = val > 1 ? 1.0 : val;\n     }\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * Track.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n import { Tick } from \"./Tick\";\nimport { guid } from \"../utils/utils\";\n\n\n export class Track {\n\n     constructor (drumMachine, name = \"track_default\", buffer = undefined, volume = 1.0, pan = 0, mute = false ) {\n         this.id = guid();\n         this.drumMachine = drumMachine;\n         this.audioContext = drumMachine.audioContext;\n         this.name = name;\n         this.buffer = buffer;\n         this.solo = false;\n         this.mute = mute;\n         this.ticks = [];\n         this.pannerNodeSupported = false;\n         this.gainNode = this.audioContext.createGain();\n         this.gainNode.gain.value = volume;\n\n\n         if (typeof this.audioContext.createStereoPanner === \"function\") {\n             this.pannerNode = this.audioContext.createStereoPanner();\n             this.pannerNode.pan.value = pan;\n             this.gainNode.connect(this.pannerNode);\n             this.pannerNode.connect(this.audioContext.destination);\n             this.pannerNodeSupported = true;\n             console.log(\"Stereo panner supported\");\n         } else {\n             this.gainNode.connect(this.audioContext.destination);\n             console.log(\"Stereo panner not supported\");\n         }\n\n         this._initTicks();\n     }\n\n\n     // setGain(val) {\n     //     this.gainNode.gain.value = val > 1 ? 1.0 : val;\n     // }\n\n\n     // setPan(val) {\n     //     if (val < -1) {\n     //         this.pannerNode.pan.value = -1;\n     //     }\n     //     else if (val > 1) {\n     //         this.pannerNode.pan.value = 1;\n     //     }\n     //     else {\n     //         this.pannerNode.pan.value = val;\n     //     }\n     // }\n\n\n\n     /*\n      *\n      */\n     _initTicks() {\n         this.ticks = [];\n         for (let i = 0; i < this.drumMachine.numberOfBeats; ++i) {\n             this.ticks.push(new Tick(i));\n         }\n     }\n\n\n     setTick(index, active = true, volume = 1.0) {\n         if (index < 0 || index > (this.drumMachine.numberOfBeats-1)) {\n             return;\n         }\n\n         this.ticks[index].volume = volume;\n         this.ticks[index].active = active;\n     }\n\n\n     setTicksFromArray(data) {\n         data.forEach(e => {\n\n             if (typeof e === \"object\") {\n                 if (!e.index || e.index < 0 || e.index > (this.drumMachine.numberOfBeats-1)) {\n                     return;\n                 }\n\n                 let tick = this.ticks[e.index];\n                 tick.volume = e.volume ? e.volume : 1.0;\n                 tick.active = e.active ? e.active : true;\n             }\n             else {\n                 this.ticks[e].active = true;\n             }\n\n         });\n     }\n\n\n     setBuffer(buffer, fileName) {\n         this.buffer = buffer;\n         console.log(\"Track \" + this.name + \": audio buffer changed ( \" + fileName + \" )\");\n     }\n\n\n     playSound() {\n         if (!this.audioContext) return;\n         let sound = this.audioContext.createBufferSource();\n         sound.buffer = this.buffer;\n         sound.connect(this.audioContext.destination);\n         sound.start();\n     }\n\n\n\n\n\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * audio-loader.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\nexport function audioLoader(audioCtx, url) {\n\n    return new Promise((resolve, reject) => {\n\n        if (!audioCtx) {\n            reject(\"Missing audio context parameter.\");\n            return;\n        }\n\n        if (!url) {\n            reject(\"Missing url parameter\");\n            return;\n        }\n\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", url);\n        xhr.responseType = \"arraybuffer\";\n\n        xhr.onload = function() {\n            try {\n                audioCtx.decodeAudioData(xhr.response, function(decodedBuffer) {\n                    resolve(decodedBuffer);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        };\n\n        xhr.send();\n    });\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * mainController.js\n * ---------------------------------------------------------------------------------------\n */\n\n\nimport { DrumMachine } from \"../../audio/DrumMachine\";\n\n\nexport function mainController($scope) {\n\n    $scope.safeApply = function(fn) {\n        var phase = this.$root.$$phase;\n        if(phase == '$apply' || phase == '$digest') {\n            if(fn && (typeof(fn) === 'function')) {\n                fn();\n            }\n        } else {\n            this.$apply(fn);\n        }\n    };\n\n    let drumMachine = new DrumMachine();\n    let playBtn = $(\"#sequencerPlayButton\");\n    let stopBtn = $(\"#sequencerStopButton\");\n    let bpmSlider = $(\"#sequencerBPMslider\");\n\n\n\n    $scope.title = \"Main Controller\";\n    $scope.tracks = [];\n    $scope.ticksElements = [];\n    $scope.bpm = drumMachine.bpm;\n    $scope.isPlaying = drumMachine.isPlaying;\n    $scope.isStopped = drumMachine.isStopped;\n    $scope.removeTrack = removeTrack;\n    $scope.integerval = /^\\d*$/;\n    $scope.beats = new Array(drumMachine.numberOfBeats).fill(false);\n\n\n\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * event listeners\n     * ---------------------------------------------------------------------------------------\n     */\n\n    $(window).ready(() => {\n\n        let beatIndicatorsContainer = document.getElementById(\"beatIndicators\");\n        let beatIndicators = beatIndicatorsContainer.getElementsByClassName(\"beat-indicator\");\n\n        function updateBeatIndicators(previousTickIndex, tickIndex) {\n            $(beatIndicators[previousTickIndex]).removeClass(\"beat-indicator-active\");\n            $(beatIndicators[tickIndex]).addClass(\"beat-indicator-active\");\n            console.log(previousTickIndex, tickIndex);\n        }\n\n        drumMachine.addCallBackInLoop(updateBeatIndicators);\n\n    });\n\n\n    window.addEventListener(\"keyup\", (e) => {\n        switch (e.keyCode) {\n\n            case 32:\n                if ($scope.isStopped) {\n                    play(e);\n                } else {\n                    stop(e);\n                }\n                break;\n\n            default:\n                break;\n        }\n    });\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * public\n     * ---------------------------------------------------------------------------------------\n     */\n\n    $scope.startSequencer = () => {\n        drumMachine._start();\n        $scope.isPlaying = true;\n        $scope.isStopped = false;\n    };\n\n    $scope.stopSequencer = () => {\n        drumMachine._stop();\n        $scope.isPlaying = false;\n        $scope.isStopped = true;\n        let indicators = document.getElementById(\"beatIndicators\").getElementsByClassName(\"beat-indicator\");\n        $(indicators).removeClass(\"beat-indicator-active\");\n    };\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * private\n     * ---------------------------------------------------------------------------------------\n     */\n\n    function removeTrack(track) {\n        drumMachine.removeTrack(track.id);\n    }\n\n    function initDefaultTracks($scope, drumMachine) {\n        drumMachine._loadDefaultBuffers().then(() => {\n            drumMachine._initDefaultTracks();\n            $scope.tracks = drumMachine.tracks;\n            $scope.$apply();\n        }, error => {\n            console.log(error);\n        });\n    }\n\n    function initDATgui(drumMachine) {\n        let gui = new dat.GUI();\n        let bpmController = gui.add(drumMachine, \"bpm\", 50.0, 220.0);\n\n        bpmController.onChange(value => {\n            drumMachine.bpm = Math.floor(drumMachine.bpm);\n        });\n    }\n\n\n    function initSequencerControls(scope, drumMachine) {\n\n        playBtn.on(\"mousedown touchstart\", (e) => {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            playBtn.css({\n                backgroundColor: \"#444\"\n            });\n        });\n\n        playBtn.on(\"mouseup touchend\", (e) => {\n            play(e);\n        });\n\n\n\n\n        stopBtn.on(\"mousedown touchstart\", (e) => {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            stopBtn.css({\n                backgroundColor: \"#444\"\n            });\n        });\n\n        stopBtn.on(\"mouseup touchend\", (e) => {\n            stop(e);\n        });\n\n\n        bpmSlider.slider({\n            min: drumMachine.bpmMin,\n            max: drumMachine.bpmMax,\n            orientation: \"horizontal\",\n            value: scope.bpm,\n            slide: (event, ui) => {\n                drumMachine.bpm = ui.value;\n                scope.bpm = ui.value;\n                scope.$apply();\n            }\n        }).draggable();\n\n\n        scope.updateSlider = function() {\n            if (drumMachine.isInRangeBPM(scope.bpm)) {\n                bpmSlider.slider(\"value\", scope.bpm);\n                drumMachine.bpm = scope.bpm;\n            }\n        }\n    }\n\n\n\n    function play(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        playBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Play-50-green.png)\"\n        });\n\n        stopBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Stop-50-white.png)\"\n        });\n\n        $scope.startSequencer();\n    }\n\n\n    function stop(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        stopBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Stop-50-red.png)\"\n        });\n\n        playBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Play-50-white.png)\"\n        });\n\n        $scope.stopSequencer();\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * init\n     * ---------------------------------------------------------------------------------------\n     */\n\n    initDefaultTracks($scope, drumMachine);\n    initSequencerControls($scope, drumMachine);\n    // initDATgui(drumMachine);\n\n}\n\n\n\n\n\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * testController.js\n * ---------------------------------------------------------------------------------------\n */\n\n export function testController($scope) {\n\n     $scope.title = \"Test Controller\";\n     console.log(\"Test Controller\");\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * verticalSlider directive\n * ---------------------------------------------------------------------------------------\n */\n\n\"use strict\";\n\nexport function tickSliderDirective() {\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            tick: \"=\",\n            ticksElements: \"=\",\n            resizeTick: \"=\"\n        },\n        link: (scope, elem, attrs) => {\n\n\n            // console.log(scope.tick);\n            scope.ticksElements.push(elem);\n\n\n            elem.slider({\n                min: 0,\n                max: 100,\n                orientation: \"vertical\",\n                value: scope.tick.active ? scope.tick.volume * 100 : 0,\n                slide: (event, ui) => {\n\n                    if (!scope.tick.active) {\n                        scope.tick.active = true;\n                    }\n\n                    scope.tick.volume = ui.value * 0.01;\n                    // console.log(scope.tick.volume);\n                }\n            }).draggable();\n\n\n\n            // scope.resizeTick(elem);\n\n        }\n    };\n\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * trackDirective\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nexport function trackDirective(supportedAudioFormats) {\n\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            track: \"=\",\n            ticksElements: \"=\",\n            removeTrack: \"=\"\n        },\n        templateUrl: \"app/directives/templates/trackDirTemplate.html\",\n        link: function (scope, elem, attrs) {\n\n            scope.resizeTick = resizeTick;\n            scope.handleFiles = handleFiles;\n            scope.playSound = playSound;\n            scope.onSoloTrack = onSoloTrack;\n            scope.onMuteTrack = onMuteTrack;\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * styles & widgets\n             * ---------------------------------------------------------------------------------------\n             */\n\n            elem.find('button[name=\"removeTrackButton\"]').button({\n                icon: \"ui-icon-close\",\n                showLabel: false\n            });\n\n            elem.find('button[name=\"playSoundButton\"]').button({\n                icon: \"ui-icon-circle-triangle-e\",\n                showLabel: false\n            });\n\n            elem.find('div[id=\"trackVolumeSlider\"]').slider({\n                min: 0,\n                max: 100,\n                orientation: \"horizontal\",\n                value: scope.track.gainNode.gain.value * 100,\n                slide: (event, ui) => {\n                    scope.track.gainNode.gain.value = ui.value * 0.01;\n                }\n            }).draggable();\n\n            if (scope.track.pannerNodeSupported) {\n                elem.find('div[id=\"trackPanSlider\"]').slider({\n                    min: -100,\n                    max: 100,\n                    orientation: \"horizontal\",\n                    value: scope.track.pannerNode.pan.value * 100,\n                    slide: (event, ui) => {\n                        scope.track.pannerNode.pan.value = ui.value * 0.01;\n                    }\n                }).draggable();\n            } else {\n                elem.find('div[id=\"trackPanSlider\"]').remove();\n                elem.find(\".pan-label\").remove();\n\n                // push down volume slider\n                elem.find('div[id=\"trackVolumeSlider\"]').css({\n                    // marginTop: 0,\n                    // position: \"relative\",\n                    // bottom: 0\n                });\n            }\n\n\n            elem.find('button[name=soloTrackButton]').button({\n\n            });\n\n            elem.find('button[name=muteTrackButton]').button({\n\n            });\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * event listeners\n             * ---------------------------------------------------------------------------------------\n             */\n\n            // $(window).resize(() => {\n            //     scope.ticksElements.forEach((e) => {\n            //         resizeTick(e);\n            //     });\n            // });\n\n\n\n\n            elem.on(\"dragover\", onDragOver);\n            elem.on(\"drop\", onDrop);\n            elem.on(\"dragleave\", onDragLeave);\n\n\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * private functions\n             * ---------------------------------------------------------------------------------------\n             */\n\n            function resizeTick(tickElem) {\n                let ticksContainerWidth = elem.find(\".ticks-container\").width();\n                console.log(ticksContainerWidth);\n                let margin = 8;\n                let tickWidth = Math.floor((ticksContainerWidth - 15 * margin) / 16.0);\n\n\n                // tickElem.css({\n                //     width: 32,\n                //     marginRight: \"8px !important\"\n                // });\n\n\n                // tickElem.parent().css({\n                //     width: tickWidth,\n                //     marginRight: margin\n                // });\n\n\n\n                // tickElem.find(\".ui-slider-handle\").css({\n                //\n                // });\n\n            }\n\n\n            function handleFiles(files) {\n                if (!files || files.length < 1) return;\n\n                let file = files[0];\n\n                // chech if it is an audio file with a supported extension\n                if (!supportedAudioFormats.has(file.type)) {\n                    console.log(\"File format not supported by Web Audio API\");\n                    return;\n                }\n\n                let reader = new FileReader();\n                reader.onload = (ev) => {\n                    scope.track.audioContext.decodeAudioData(ev.target.result, function (buffer) {\n                        scope.track.setBuffer(buffer, file.name);\n                    });\n                };\n                reader.readAsArrayBuffer(file);\n            }\n\n\n            function onDragOver(e) {\n                if (!elem.hasClass(\"track-dragfile\")) {\n                    elem.addClass(\"track-dragfile\");\n                }\n                e.stopPropagation();\n                e.preventDefault();\n            }\n\n\n            function onDrop(e) {\n                e.stopPropagation();\n                e.preventDefault();\n                handleFiles(e.originalEvent.dataTransfer.files);\n                onDragLeave();\n            }\n\n\n            function onDragLeave(e) {\n                if (elem.hasClass(\"track-dragfile\")) {\n                    elem.removeClass(\"track-dragfile\");\n                }\n                if (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            }\n\n            function playSound() {\n                scope.track.playSound();\n            }\n\n\n            function onSoloTrack() {\n                scope.track.drumMachine.soloTrack(scope.track.id);\n            }\n\n            function onMuteTrack() {\n                scope.track.drumMachine.muteTrack(scope.track.id);\n            }\n\n\n\n        }\n    };\n\n}\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * routes.js\n * ---------------------------------------------------------------------------------------\n */\n\nexport function initRoutes($routeProvider) {\n\n\n    $routeProvider.when('/', {\n        controller: \"mainController\",\n        templateUrl: \"app/components/main/mainView.html\"\n    });\n\n    $routeProvider.when('/test', {\n        controller: \"testController\",\n        templateUrl: \"app/components/test/testView.html\"\n    });\n\n    $routeProvider.otherwise({redirectTo: '/'});\n\n}","/*\n * ---------------------------------------------------------------------------------------\n * utils.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n /*\n  * checkIfiOSdevice\n  */\n export function checkIfiOSdevice() {\n     return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n }\n\n\n\n /*\n  * generate uuid\n  */\n export function guid() {\n     let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n         var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n         return v.toString(16);\n     });\n     return uuid;\n }"]}