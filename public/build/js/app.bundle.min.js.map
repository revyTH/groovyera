{"version":3,"sources":["node_modules/browser-pack/_prelude.js","public/app/app.js","public/app/audio/DrumMachine.js","public/app/audio/Tick.js","public/app/audio/Track.js","public/app/audio/audio-loader.js","public/app/components/main/mainController.js","public/app/components/test/testController.js","public/app/directives/tickSlider-directive.js","public/app/directives/track-directive.js","public/app/routes.js","public/app/utils/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_routes","_mainController","_testController","_trackDirective","_tickSliderDirective","app","angular","config","initRoutes","controller","mainController","testController","directive","tickSliderDirective","trackDirective","supportedAudioFormats","Set","add","constant","_audioLoader","_utils","_Track","DrumMachine","_classCallCheck","this","tag","AudioContext","window","webkitAudioContext","audioContext","bpm","tickTime","isPlaying","buffers","tracks","defaultBuffersLoaded","defaultTracksLoaded","tracksInSolo","tracksInMute","currentTickIndex","soundURLs","kick","snare","hat","ride","checkIfiOSdevice","_enableAudioContextForiOS","audioContextEnabled","_this","$","document","ready","btn","visibility","on","buffer","createBuffer","source","createBufferSource","start","trigger","console","log","_this2","ctx","urls","Promise","resolve","reject","all","audioLoader","then","values","error","kickTrack","Track","setTicksFromArray","snareTrack","hatTrack","index","volume","id","scheduler","nextTickTime","currentTime","self","each","track","mute","trackTick","ticks","active","tickSound","tickGainNode","createGain","connect","gain","value","gainNode","setTimeout","startTime","bufferName","time","sound","destination","name","soundUrl","_this3","arguments","undefined","pan","hasOwnProperty","newTrack","trackID","focusTrack","has","delete","solo","size","clear","_bpm","val","_onBpmChanged","Tick","_volume","_Tick","drumMachine","guid","pannerNodeSupported","createStereoPanner","pannerNode","_initTicks","push","data","forEach","_typeof","tick","fileName","audioCtx","url","xhr","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","decodedBuffer","send","$scope","removeTrack","title","ticksElements","_DrumMachine","startSequencer","_start","initDefaultTracks","initDATgui","_loadDefaultBuffers","_initDefaultTracks","$apply","dat","GUI","onChange","Math","floor","restrict","replace","scope","resizeTick","link","elem","attrs","slider","min","max","orientation","slide","event","ui","draggable","templateUrl","tickElem","ticksContainerWidth","find","width","handleFiles","files","file","type","reader","FileReader","ev","target","result","setBuffer","readAsArrayBuffer","onDragOver","hasClass","addClass","stopPropagation","preventDefault","onDrop","originalEvent","dataTransfer","onDragLeave","removeClass","playSound","onSoloTrack","soloTrack","onMuteTrack","muteTrack","button","icon","showLabel","remove","css","$routeProvider","when","otherwise","redirectTo","test","navigator","userAgent","MSStream","c","random","toString"],"mappings":"CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,GAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,EAAAJ,GCOA,YAGA,IAAAK,GAAAX,EAAA,YAEAY,EAAAZ,EAAA,oCACAa,EAAAb,EAAA,oCAEAc,EAAAd,EAAA,gCACAe,EAAAf,EAAA,sCAIC,WAEG,GAAIgB,GAAMC,QAAQP,OAAO,SAAU,WAInCM,GAAIE,QAAQ,iBAADP,EAAAQ,aAIXH,EAAII,WAAW,kBAAmB,SAADR,EAAAS,iBACjCL,EAAII,WAAW,kBAAmB,SAADP,EAAAS,iBAIjCN,EAAIO,UAAU,aAAdR,EAAAS,qBACAR,EAAIO,UAAU,YAAa,wBAADT,EAAAW,gBAI1B,IAAIC,GAAwB,GAAIC,IAChCD,GAAsBE,IAAI,aAC1BF,EAAsBE,IAAI,eAC1BF,EAAsBE,IAAI,aAC1BF,EAAsBE,IAAI,eAC1BF,EAAsBE,IAAI,aAC1BF,EAAsBE,IAAI,eAG1BZ,EAAIa,SAAS,wBAAyBH,smBC3C1CI,EAAA9B,EAAA,kBACA+B,EAAA/B,EAAA,kBACAgC,EAAAhC,EAAA,aAGaiC,uBAET,QAAAA,KAAcC,EAAAC,KAAAF,GACVE,KAAKC,IAAM,kBACX,IAAIC,GAAeC,OAAOD,cAAgBC,OAAOC,kBACjDJ,MAAKK,aAAe,GAAIH,GACxBF,KAAKM,IAAM,IACXN,KAAKO,SAAW,GAAOP,KAAKM,IAAM,EAClCN,KAAKQ,WAAY,EACjBR,KAAKS,WACLT,KAAKU,UACLV,KAAKW,sBAAuB,EAC5BX,KAAKY,qBAAsB,EAC3BZ,KAAKa,aAAe,GAAIrB,KACxBQ,KAAKc,aAAe,GAAItB,KAExBQ,KAAKe,iBAAmB,EAGxBf,KAAKgB,WACDC,KAAM,4BACNC,MAAO,6BACPC,IAAK,2BACLC,KAAM,8BAGN,EAAAxB,EAAAyB,oBACArB,KAAKsB,4BAELtB,KAAKuB,qBAAsB,gEA0BP,GAAAC,GAAAxB,IACxByB,GAAEC,UAAUC,MAAM,WACd,GAAIC,GAAMH,EAAE,aACRI,WAAY,UAGhBD,GAAIE,GAAG,aAAc,WACjB,GAAIC,GAASP,EAAKnB,aAAa2B,aAAa,EAAG,EAAG,OAC9CC,EAAST,EAAKnB,aAAa6B,oBAC/BD,GAAOF,OAASA,EAChBE,EAAOE,UAGXP,EAAIQ,QAAQ,cAEZZ,EAAKD,qBAAsB,EAC3Bc,QAAQC,IAAI,gFAKE,GAAAC,GAAAvC,KAEdwC,EAAMxC,KAAKK,aACXoC,EAAOzC,KAAKgB,SAEhB,OAAO,IAAI0B,SAAQ,SAACC,EAASC,GACzBF,QAAQG,MACJ,EAAAlD,EAAAmD,aAAYN,EAAKC,EAAKxB,OACtB,EAAAtB,EAAAmD,aAAYN,EAAKC,EAAKvB,QACtB,EAAAvB,EAAAmD,aAAYN,EAAKC,EAAKtB,MACtB,EAAAxB,EAAAmD,aAAYN,EAAKC,EAAKrB,QACvB2B,KAAK,SAAAC,GACJT,EAAK9B,QAAL,KAAuBuC,EAAO,GAC9BT,EAAK9B,QAAL,MAAwBuC,EAAO,GAC/BT,EAAK9B,QAAL,IAAsBuC,EAAO,GAC7BT,EAAK9B,QAAL,KAAuBuC,EAAO,GAC9BT,EAAK5B,sBAAuB,EAC5B0B,QAAQC,IAAIC,EAAK9B,SAEjB8B,EAAK5B,sBAAuB,EAC5B0B,QAAQC,IAAI,0BAGZK,EAAQ,2BAET,SAAAM,GACCL,EAAOK,oDAQf,GAAKjD,KAAKW,qBAAV,CAIAX,KAAKU,SAEL,IAAIwC,GAAY,GAAArD,GAAAsD,MAAUnD,KAAM,OAAQA,KAAKS,QAAL,KACxCyC,GAAUE,mBAAmB,EAAE,EAAE,EAAE,IACnC,IAAIC,GAAa,GAAAxD,GAAAsD,MAAUnD,KAAM,QAASA,KAAKS,QAAL,MAAuB,EAAG,GACpE4C,GAAWD,mBAAmB,EAAE,IAChC,IAAIE,GAAW,GAAAzD,GAAAsD,MAAUnD,KAAM,MAAOA,KAAKS,QAAL,IAAqB,KAAO,EAIlE6C,GAASF,oBAEDG,MAAO,EACPC,OAAQ,KAGRD,MAAO,EACPC,OAAQ,KAGRD,MAAO,EACPC,OAAQ,MAGRD,MAAO,EACPC,OAAQ,KAGRD,MAAO,EACPC,OAAQ,KAGRD,MAAO,EACPC,OAAQ,KAGRD,MAAO,EACPC,OAAQ,MAGRD,MAAO,EACPC,OAAQ,KAGRD,MAAO,EACPC,OAAQ,KAGRD,MAAO,EACPC,OAAQ,KAGRD,MAAO,GACPC,OAAQ,MAGRD,MAAO,GACPC,OAAQ,KAGRD,MAAO,GACPC,OAAQ,KAGRD,MAAO,GACPC,OAAQ,KAGRD,MAAO,GACPC,OAAQ,MAGRD,MAAO,GACPC,OAAQ,MAIhBxD,KAAKU,OAAOwC,EAAUO,IAAMP,EAC5BlD,KAAKU,OAAO2C,EAAWI,IAAMJ,EAC7BrD,KAAKU,OAAO4C,EAASG,IAAMH,EAE3BtD,KAAKY,qBAAsB,EAC3ByB,QAAQC,IAAI,wBAA0BtC,KAAKU,iDAO3CV,KAAKO,SAAW,GAAOP,KAAKM,IAAM,mCA6BlC,QAASoD,KAEDC,GAAgBnB,EAAIoB,YAAcC,EAAKtD,WAGvCkB,EAAEqC,KAAKD,EAAKnD,OAAQ,SAAC+C,EAAIM,GAGrB,IAAIA,EAAMC,MAILD,EAAMhC,OAAX,CAKA,GAAIkC,GAAYF,EAAMG,MAAMX,EAE5B,IAAKU,EAAUE,OAAf,CAIA,GAAIC,GAAY5B,EAAIN,oBACpBkC,GAAUrC,OAASgC,EAAMhC,MACzB,IAAIsC,GAAe7B,EAAI8B,YACvBF,GAAUG,QAAQF,GAClBA,EAAaG,KAAKC,MAAQR,EAAUT,OACpCa,EAAaE,QAAQR,EAAMW,UAC3BN,EAAUjC,MAAMwB,OAKpBE,EAAK9C,iBAAmBwC,EAExBI,GAAgBE,EAAKtD,SAErBgD,GAAS,EACTA,EAAkB,KAAVA,EAAe,EAAIA,GAI/BpD,OAAOwE,WAAWjB,EAAW,GAjEjC,IAAK1D,KAAKuB,oBAEN,WADAc,SAAQC,IAAI,4CAIhB,IAAItC,KAAKQ,UAEL,WADA6B,SAAQC,IAAI,sCAIhB,KAAKtC,KAAKY,oBAEN,WADAyB,SAAQC,IAAI,0CAIhBtC,MAAKQ,WAAY,CACjB,IAAIqD,GAAO7D,KACPwC,EAAMxC,KAAKK,aACXuE,EAAYpC,EAAIoB,YAChBD,EAAeiB,EAAYf,EAAKtD,SAChCgD,EAAQ,CAgDZG,wCAQOmB,EAAYC,GACnB,GAAItC,GAAMxC,KAAKK,aACX0E,EAAQvC,EAAIN,oBAChB6C,GAAMhD,OAAS/B,KAAKS,QAAQoE,GAC5BE,EAAMR,QAAQ/B,EAAIwC,aAClBD,EAAM5C,MAAM2C,uCAKJG,EAAMC,GAAiC,GAAAC,GAAAnF,KAAvBwD,EAAuB4B,UAAA/G,OAAA,OAAAgH,KAAAD,UAAA,GAAAA,UAAA,GAAd,EAAKE,EAASF,UAAA/G,OAAA,OAAAgH,KAAAD,UAAA,GAAAA,UAAA,GAAH,CAE5C,IAAIpF,KAAKS,QAAQ8E,eAAeN,GAE5B,WADA5C,SAAQC,IAAI,yBAIhB,EAAA3C,EAAAmD,aAAY9C,KAAKK,aAAc6E,GAAUnC,KAAK,SAAAhB,GAC1CoD,EAAK1E,QAAQwE,GAAQlD,CACrB,IAAIyD,GAAW,GAAA3F,GAAAsD,MAAAgC,EAAgBF,EAAME,EAAK1E,QAAQwE,GAAOzB,EAAQ8B,EACjEH,GAAKzE,OAAO8E,EAAS/B,IAAM+B,EAC3BnD,QAAQC,IAAI,eAAgBkD,IAC7B,SAAAvC,GACCZ,QAAQC,IAAI,QAASW,yCAKjBwC,SACDzF,MAAKU,OAAO+E,qCAKbA,GAEN,GAAKzF,KAAKU,OAAO6E,eAAeE,GAAhC,CAEA,GAAIC,GAAa1F,KAAKU,OAAO+E,GACzB5E,EAAeb,KAAKa,aACpBC,EAAed,KAAKc,YAGnBD,GAAa8E,IAAID,IAAgB5E,EAAa6E,IAAID,GAoB9C7E,EAAa8E,IAAID,IACtB7E,EAAa+E,OAAOF,GACpBA,EAAWG,MAAO,EAEdhF,EAAaiF,KAAO,GACpBhF,EAAarB,IAAIiG,GACjBA,EAAW1B,MAAO,IAElBlD,EAAaiF,QACblF,EAAakF,QACbtE,EAAEqC,KAAK9D,KAAKU,OAAQ,SAAC+C,EAAIM,GACtBA,EAAMC,MAAO,EACbD,EAAM8B,MAAO,OAQpBhF,EAAapB,IAAIiG,GACjBA,EAAWG,MAAO,EAClBH,EAAW1B,MAAO,EAEQ,IAAtBnD,EAAaiF,MACbrE,EAAEqC,KAAK9D,KAAKU,OAAQ,SAAC+C,EAAIM,GAClBN,IAAOgC,IACP3E,EAAarB,IAAIsE,GACjBA,EAAMC,MAAO,OA/CxBnD,EAAapB,IAAIiG,GACjBA,EAAWG,MAAO,EAClBH,EAAW1B,MAAO,EAElBvC,EAAEqC,KAAK9D,KAAKU,OAAQ,SAAC+C,EAAIM,GAClBN,IAAOgC,IAIN5E,EAAa8E,IAAI5B,KAClBjD,EAAarB,IAAIsE,GACjBA,EAAMC,MAAO,EACbD,EAAM8B,MAAO,0CA4ClBJ,GAEN,GAAKzF,KAAKU,OAAO6E,eAAeE,GAAhC,CAEA,GAAIC,GAAa1F,KAAKU,OAAO+E,GACzB5E,EAAeb,KAAKa,aACpBC,EAAed,KAAKc,YAGnBD,GAAa8E,IAAID,IAAgB5E,EAAa6E,IAAID,GAO9C7E,EAAa8E,IAAID,IACtB7E,EAAa+E,OAAOF,GACpB5E,EAAarB,IAAIiG,GACjBA,EAAWG,MAAO,EAClBH,EAAW1B,MAAO,EAEQ,IAAtBnD,EAAaiF,MACbrE,EAAEqC,KAAK9D,KAAKU,OAAQ,SAAC+C,EAAIM,GACjBN,IAAOgC,IACP3E,EAAa8E,OAAO7B,GACpBA,EAAMC,MAAO,MAOpBlD,EAAa6E,IAAID,KAClB7E,EAAaiF,KAAO,GACpBhF,EAAa8E,OAAOF,GACpB7E,EAAapB,IAAIiG,GACjBA,EAAW1B,MAAO,EAClB0B,EAAWG,MAAO,IAGlB/E,EAAa8E,OAAOF,GACpBA,EAAW1B,MAAO,KAhCtBlD,EAAarB,IAAIiG,GACjBA,EAAW1B,MAAO,EAClB0B,EAAWG,MAAO,gCAtWtB,MAAO7F,MAAKgG,mBAMRC,GACAA,IAAQjG,KAAKgG,OACbhG,KAAKgG,KAAOC,EACZjG,KAAKkG,oGCtDhB,uZAGaC,gBAET,QAAAA,KAAqD,GAAzC5C,GAAyC6B,UAAA/G,OAAA,OAAAgH,KAAAD,UAAA,GAAAA,UAAA,GAAjC,EAAGjB,EAA8BiB,UAAA/G,OAAA,OAAAgH,KAAAD,UAAA,IAAAA,UAAA,GAAd5B,EAAc4B,UAAA/G,OAAA,OAAAgH,KAAAD,UAAA,GAAAA,UAAA,GAAL,CAAKrF,GAAAC,KAAAmG,GACjDnG,KAAKuD,MAAQA,EACbvD,KAAKmE,OAASA,EACdnE,KAAKwD,OAASA,2CAId,MAAOxD,MAAKoG,sBAGLH,GACPjG,KAAKoG,QAAUH,EAAM,EAAI,EAAMA,mCChBvC,gnBAEAI,EAAAxI,EAAA,UACD+B,EAAA/B,EAAA,oBAGcsF,iBAET,QAAAA,GAAamD,GAA+F,GAAlFrB,GAAkFG,UAAA/G,OAAA,OAAAgH,KAAAD,UAAA,GAAAA,UAAA,GAA3E,gBAAiBrD,EAA0DqD,UAAA/G,OAAA,OAAAgH,KAAAD,UAAA,GAAAA,UAAA,OAAjDC,GAAW7B,EAAsC4B,UAAA/G,OAAA,OAAAgH,KAAAD,UAAA,GAAAA,UAAA,GAA7B,EAAKE,EAAwBF,UAAA/G,OAAA,OAAAgH,KAAAD,UAAA,GAAAA,UAAA,GAAlB,EAAGpB,EAAeoB,UAAA/G,OAAA,OAAAgH,KAAAD,UAAA,IAAAA,UAAA,EAAArF,GAAAC,KAAAmD,GACxGnD,KAAKyD,IAAK,EAAA7D,EAAA2G,QACVvG,KAAKsG,YAAcA,EACnBtG,KAAKK,aAAeiG,EAAYjG,aAChCL,KAAKiF,KAAOA,EACZjF,KAAK+B,OAASA,EACd/B,KAAK6F,MAAO,EACZ7F,KAAKgE,KAAOA,EACZhE,KAAKkE,SACLlE,KAAKwG,qBAAsB,EAC3BxG,KAAK0E,SAAW1E,KAAKK,aAAaiE,aAClCtE,KAAK0E,SAASF,KAAKC,MAAQjB,EAGyB,kBAAzCxD,MAAKK,aAAaoG,oBACzBzG,KAAK0G,WAAa1G,KAAKK,aAAaoG,qBACpCzG,KAAK0G,WAAWpB,IAAIb,MAAQa,EAC5BtF,KAAK0E,SAASH,QAAQvE,KAAK0G,YAC3B1G,KAAK0G,WAAWnC,QAAQvE,KAAKK,aAAa2E,aAC1ChF,KAAKwG,qBAAsB,EAC3BnE,QAAQC,IAAI,6BAEZtC,KAAK0E,SAASH,QAAQvE,KAAKK,aAAa2E,aACxC3C,QAAQC,IAAI,gCAGhBtC,KAAK2G,4DA2BL3G,KAAKkE,QACL,KAAK,GAAIpG,GAAI,EAAGA,EAAI,KAAMA,EACtBkC,KAAKkE,MAAM0C,KAAK,GAAAP,GAAAF,KAASrI,oCAKzByF,GAAoC,GAA7BY,KAA6BiB,UAAA/G,OAAA,OAAAgH,KAAAD,UAAA,KAAAA,UAAA,GAAd5B,EAAc4B,UAAA/G,OAAA,OAAAgH,KAAAD,UAAA,GAAAA,UAAA,GAAL,CAC/B7B,GAAQ,GAAKA,EAAQ,KAIzBvD,KAAKkE,MAAMX,GAAOC,OAASA,EAC3BxD,KAAKkE,MAAMX,GAAOY,OAASA,6CAIb0C,GAAM,GAAArF,GAAAxB,IACpB6G,GAAKC,QAAQ,SAAAzJ,GAET,GAAiB,gBAAb,KAAOA,EAAP,YAAA0J,EAAO1J,IAAgB,CACvB,IAAKA,EAAEkG,OAASlG,EAAEkG,MAAQ,GAAKlG,EAAEkG,MAAQ,GACrC,MAGJ,IAAIyD,GAAOxF,EAAK0C,MAAM7G,EAAEkG,MACxByD,GAAKxD,OAASnG,EAAEmG,OAASnG,EAAEmG,OAAS,EACpCwD,EAAK7C,QAAS9G,EAAE8G,QAAS9G,EAAE8G,WAG3B3C,GAAK0C,MAAM7G,GAAG8G,QAAS,sCAOzBpC,EAAQkF,GACdjH,KAAK+B,OAASA,EACdM,QAAQC,IAAI,SAAWtC,KAAKiF,KAAO,4BAA8BgC,EAAW,0CAK5E,GAAKjH,KAAKK,aAAV,CACA,GAAI0E,GAAQ/E,KAAKK,aAAa6B,oBAC9B6C,GAAMhD,OAAS/B,KAAK+B,OACpBgD,EAAMR,QAAQvE,KAAKK,aAAa2E,aAChCD,EAAM5C,wEC7Gd,YAGM,SAASW,GAAYoE,EAAUC,GAElC,MAAO,IAAIzE,SAAQ,SAACC,EAASC,GAEzB,IAAKsE,EAED,WADAtE,GAAO,mCAIX,KAAKuE,EAED,WADAvE,GAAO,wBAIX,IAAIwE,GAAM,GAAIC,eACdD,GAAIE,KAAK,MAAOH,GAChBC,EAAIG,aAAe,cAEnBH,EAAII,OAAS,WACT,IACIN,EAASO,gBAAgBL,EAAIM,SAAU,SAASC,GAC5ChF,EAAQgF,KAEd,MAAOtK,GACLuF,EAAOvF,KAIf+J,EAAIQ,4DA5BI9E,YAAAA,sCCCT,SAAS5D,GAAe2I,GAiB3B,QAASC,GAAY/D,GACjBuC,EAAYwB,YAAY/D,EAAMN,IAhBlCoE,EAAOE,MAAQ,kBACfF,EAAOnH,UACPmH,EAAOG,iBACPH,EAAOC,YAAcA,EACrBzF,QAAQC,IAAI,kBAGZ,IAAIgE,GAAc,GAAA2B,GAAAnI,WAGlB+H,GAAOK,eAAiB,WACpB5B,EAAY6B,UAShBC,EAAkBP,EAAQvB,GAC1B+B,EAAW/B,GAOf,QAAS8B,GAAkBP,EAAQvB,GAC/BA,EAAYgC,sBAAsBvF,KAAK,WACnCuD,EAAYiC,qBACZV,EAAOnH,OAAS4F,EAAY5F,OAC5BmH,EAAOW,UACR,SAAAvF,GACCZ,QAAQC,IAAIW,KAMpB,QAASoF,GAAW/B,IACN,GAAImC,KAAIC,KACMjJ,IAAI6G,EAAa,MAAO,GAAM,KAExCqC,SAAS,SAAAlE,GACnB6B,EAAYhG,IAAMsI,KAAKC,MAAMvC,EAAYhG,0DA/CjCpB,eAAAA,CAHhB,IAAA+I,GAAApK,EAAA,0FCDQ,SAASsB,GAAe0I,GAE3BA,EAAOE,MAAQ,kBACf1F,QAAQC,IAAI,sEAHAnD,eAAAA,0BCAjB,YAEO,SAASE,KAEZ,OACIyJ,SAAU,KACVC,QAAS,QACTC,OACIhC,KAAM,IACNgB,cAAe,IACfiB,WAAY,KAEhBC,KAAM,SAACF,EAAOG,EAAMC,GAIhBJ,EAAMhB,cAAcpB,KAAKuC,GAGzBA,EAAKE,QACDC,IAAK,EACLC,IAAK,IACLC,YAAa,WACb/E,MAAOuE,EAAMhC,KAAK7C,OAA6B,IAApB6E,EAAMhC,KAAKxD,OAAe,EACrDiG,MAAO,SAACC,EAAOC,GAENX,EAAMhC,KAAK7C,SACZ6E,EAAMhC,KAAK7C,QAAS,GAGxB6E,EAAMhC,KAAKxD,OAAoB,IAAXmG,EAAGlF,SAG5BmF,iEA/BCvK,oBAAAA,0BCDhB,YAGO,SAASC,GAAeC,GAG3B,OACIuJ,SAAU,KACVC,QAAS,QACTC,OACIjF,MAAO,IACPiE,cAAe,IACfF,YAAa,KAEjB+B,YAAa,iDACbX,KAAM,SAAUF,EAAOG,EAAMC,GA0GzB,QAASH,GAAWa,GAChB,GAAIC,GAAsBZ,EAAKa,KAAK,oBAAoBC,OACxD5H,SAAQC,IAAIyH,EAEInB,MAAKC,OAAOkB,EAAsB,KAAe,IAuBrE,QAASG,GAAYC,GACjB,GAAKA,KAASA,EAAM9L,OAAS,GAA7B,CAEA,GAAI+L,GAAOD,EAAM,EAGjB,KAAK5K,EAAsBoG,IAAIyE,EAAKC,MAEhC,WADAhI,SAAQC,IAAI,6CAIhB,IAAIgI,GAAS,GAAIC,WACjBD,GAAO9C,OAAS,SAACgD,GACbxB,EAAMjF,MAAM1D,aAAaoH,gBAAgB+C,EAAGC,OAAOC,OAAQ,SAAU3I,GACjEiH,EAAMjF,MAAM4G,UAAU5I,EAAQqI,EAAKnF,SAG3CqF,EAAOM,kBAAkBR,IAI7B,QAASS,GAAWxN,GACX8L,EAAK2B,SAAS,mBACf3B,EAAK4B,SAAS,kBAElB1N,EAAE2N,kBACF3N,EAAE4N,iBAIN,QAASC,GAAO7N,GACZA,EAAE2N,kBACF3N,EAAE4N,iBACFf,EAAY7M,EAAE8N,cAAcC,aAAajB,OACzCkB,IAIJ,QAASA,GAAYhO,GACb8L,EAAK2B,SAAS,mBACd3B,EAAKmC,YAAY,kBAEjBjO,IACAA,EAAE2N,kBACF3N,EAAE4N,kBAIV,QAASM,KACLvC,EAAMjF,MAAMwH,YAIhB,QAASC,KACLxC,EAAMjF,MAAMuC,YAAYmF,UAAUzC,EAAMjF,MAAMN,IAGlD,QAASiI,KACL1C,EAAMjF,MAAMuC,YAAYqF,UAAU3C,EAAMjF,MAAMN,IA7LlDuF,EAAMC,WAAaA,EACnBD,EAAMkB,YAAcA,EACpBlB,EAAMuC,UAAYA,EAClBvC,EAAMwC,YAAcA,EACpBxC,EAAM0C,YAAcA,EAUpBvC,EAAKa,KAAK,oCAAoC4B,QAC1CC,KAAM,gBACNC,WAAW,IAGf3C,EAAKa,KAAK,kCAAkC4B,QACxCC,KAAM,4BACNC,WAAW,IAGf3C,EAAKa,KAAK,+BAA+BX,QACrCC,IAAK,EACLC,IAAK,IACLC,YAAa,aACb/E,MAAyC,IAAlCuE,EAAMjF,MAAMW,SAASF,KAAKC,MACjCgF,MAAO,SAACC,EAAOC,GACXX,EAAMjF,MAAMW,SAASF,KAAKC,MAAmB,IAAXkF,EAAGlF,SAE1CmF,YAECZ,EAAMjF,MAAMyC,oBACZ2C,EAAKa,KAAK,4BAA4BX,QAClCC,KAAM,IACNC,IAAK,IACLC,YAAa,aACb/E,MAA0C,IAAnCuE,EAAMjF,MAAM2C,WAAWpB,IAAIb,MAClCgF,MAAO,SAACC,EAAOC,GACXX,EAAMjF,MAAM2C,WAAWpB,IAAIb,MAAmB,IAAXkF,EAAGlF,SAE3CmF,aAEHT,EAAKa,KAAK,4BAA4B+B,SACtC5C,EAAKa,KAAK,cAAc+B,SAGxB5C,EAAKa,KAAK,+BAA+BgC,SAQ7C7C,EAAKa,KAAK,gCAAgC4B,WAI1CzC,EAAKa,KAAK,gCAAgC4B,WAyB1CzC,EAAKrH,GAAG,WAAY+I,GACpB1B,EAAKrH,GAAG,OAAQoJ,GAChB/B,EAAKrH,GAAG,YAAauJ,wDAtGjB/L,eAAAA,uCCJT,SAASN,GAAWiN,GAGvBA,EAAeC,KAAK,KAChBjN,WAAY,iBACZ4K,YAAa,sCAGjBoC,EAAeC,KAAK,SAChBjN,WAAY,iBACZ4K,YAAa,sCAGjBoC,EAAeE,WAAWC,WAAY,yDAb1BpN,WAAAA,2BCAf,YAMO,SAASqC,KACZ,MAAO,mBAAmBgL,KAAKC,UAAUC,aAAepM,OAAOqM,SAQ5D,QAASjG,KAKZ,MAJW,uCAAuCwC,QAAQ,QAAS,SAAS0D,GACxE,GAAIjP,GAAkB,GAAdoL,KAAK8D,SAAY,CACzB,QADqC,KAALD,EAAWjP,EAAO,EAAFA,EAAM,GAC7CmP,SAAS,yDAZVtL,iBAAAA,IASAkF,KAAAA","file":"app.bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * ---------------------------------------------------------------------------------------\n * app.js\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nimport { initRoutes } from \"./routes\";\n\nimport { mainController } from \"./components/main/mainController\";\nimport { testController } from \"./components/test/testController\";\n\nimport { trackDirective } from \"./directives/track-directive\";\nimport { tickSliderDirective } from \"./directives/tickSlider-directive\";\n\n\n\n(function() {\n\n    let app = angular.module(\"myApp\", [\"ngRoute\"]);\n\n\n    // configure angular routes\n    app.config([\"$routeProvider\", initRoutes]);\n\n\n    // bind controllers\n    app.controller(\"mainController\", ['$scope', mainController]);\n    app.controller(\"testController\", ['$scope', testController]);\n\n\n    // register directives\n    app.directive(\"tickSlider\", tickSliderDirective);\n    app.directive(\"theTrack\", [\"supportedAudioFormats\", trackDirective]);\n\n\n\n    let supportedAudioFormats = new Set();\n    supportedAudioFormats.add(\"audio/wav\");\n    supportedAudioFormats.add(\"audio/x-wav\");\n    supportedAudioFormats.add(\"audio/mp3\");\n    supportedAudioFormats.add(\"audio/x-mp3\");\n    supportedAudioFormats.add(\"audio/ogg\");\n    supportedAudioFormats.add(\"audio/x-ogg\");\n\n    // constants\n    app.constant(\"supportedAudioFormats\", supportedAudioFormats);\n\n\n\n}());","/*\n * ---------------------------------------------------------------------------------------\n * DrumMachine.js\n * ---------------------------------------------------------------------------------------\n */\n\nimport { audioLoader } from \"./audio-loader\";\nimport { checkIfiOSdevice } from \"../utils/utils\";\nimport { Track } from \"./Track\";\n\n\nexport class DrumMachine {\n\n    constructor() {\n        this.tag = \"[DrumMachine.js]\";\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        this.audioContext = new AudioContext();\n        this.bpm = 120.0;\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n        this.isPlaying = false;\n        this.buffers = {};\n        this.tracks = {};\n        this.defaultBuffersLoaded = false;\n        this.defaultTracksLoaded = false;\n        this.tracksInSolo = new Set();\n        this.tracksInMute = new Set();\n\n        this.currentTickIndex = 1;\n\n\n        this.soundURLs = {\n            kick: \"app/assets/audio/kick.wav\",\n            snare: \"app/assets/audio/snare.wav\",\n            hat: \"app/assets/audio/hat.wav\",\n            ride: \"app/assets/audio/ride.wav\"\n        };\n\n        if (checkIfiOSdevice()) {\n            this._enableAudioContextForiOS();\n        } else {\n            this.audioContextEnabled = true;\n        }\n\n        // this._loadDefaultBuffers();\n    }\n\n\n    /*\n     * get bpm\n     */\n    get bpm() {\n        return this._bpm;\n    }\n\n    /*\n     * set bpm\n     */\n    set bpm(val) {\n        if (val !== this._bpm) {\n            this._bpm = val;\n            this._onBpmChanged();\n        }\n    }\n\n\n\n    _enableAudioContextForiOS() {\n        $(document).ready(() => {\n            let btn = $(\"<button/>\", {\n                visibility: \"hidden\"\n            });\n\n            btn.on(\"touchstart\", () => {\n                let buffer = this.audioContext.createBuffer(1, 1, 22050);\n                let source = this.audioContext.createBufferSource();\n                source.buffer = buffer;\n                source.start();\n            });\n\n            btn.trigger(\"touchstart\");\n\n            this.audioContextEnabled = true;\n            console.log(\"AudioContext enabled for iOS\");\n        });\n    }\n\n\n    _loadDefaultBuffers() {\n\n        let ctx = this.audioContext;\n        let urls = this.soundURLs;\n\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                audioLoader(ctx, urls.kick),\n                audioLoader(ctx, urls.snare),\n                audioLoader(ctx, urls.hat),\n                audioLoader(ctx, urls.ride)\n            ]).then(values => {\n                this.buffers[\"kick\"] = values[0];\n                this.buffers[\"snare\"] = values[1];\n                this.buffers[\"hat\"] = values[2];\n                this.buffers[\"ride\"] = values[3];\n                this.defaultBuffersLoaded = true;\n                console.log(this.buffers);\n\n                this.defaultBuffersLoaded = true;\n                console.log(\"Default buffers loaded\");\n                // this._initDefaultTracks();\n\n                resolve(\"Default buffers loaded\");\n\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n\n\n    _initDefaultTracks() {\n\n        if (!this.defaultBuffersLoaded) {\n            return;\n        }\n\n        this.tracks = {};\n\n        let kickTrack = new Track(this, \"kick\", this.buffers[\"kick\"]);\n        kickTrack.setTicksFromArray([0,4,8,12]);\n        let snareTrack = new Track(this, \"snare\", this.buffers[\"snare\"], 1, 0.1);\n        snareTrack.setTicksFromArray([4,12]);\n        let hatTrack = new Track(this, \"hat\", this.buffers[\"hat\"], 0.85, -1);\n        // hatTrack.setTicksFromArray([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\n\n\n        hatTrack.setTicksFromArray([\n            {\n                index: 0,\n                volume: 0.9\n            },\n            {\n                index: 1,\n                volume: 0.5\n            },\n            {\n                index: 2,\n                volume: 1.2\n            },\n            {\n                index: 3,\n                volume: 0.4\n            },\n            {\n                index: 4,\n                volume: 0.9\n            },\n            {\n                index: 5,\n                volume: 0.5\n            },\n            {\n                index: 6,\n                volume: 1.2\n            },\n            {\n                index: 7,\n                volume: 0.4\n            },\n            {\n                index: 8,\n                volume: 0.9\n            },\n            {\n                index: 9,\n                volume: 0.5\n            },\n            {\n                index: 10,\n                volume: 1.2\n            },\n            {\n                index: 11,\n                volume: 0.4\n            },\n            {\n                index: 12,\n                volume: 0.9\n            },\n            {\n                index: 13,\n                volume: 0.5\n            },\n            {\n                index: 14,\n                volume: 1.2\n            },\n            {\n                index: 15,\n                volume: 0.4\n            }\n        ]);\n\n        this.tracks[kickTrack.id] = kickTrack;\n        this.tracks[snareTrack.id] = snareTrack;\n        this.tracks[hatTrack.id] = hatTrack;\n\n        this.defaultTracksLoaded = true;\n        console.log(\"Default tracks loaded\" , this.tracks);\n\n        // this._start();\n    }\n\n\n    _onBpmChanged() {\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n    }\n\n\n\n    _start() {\n\n        if (!this.audioContextEnabled) {\n            console.log(\"Cannot play: AudioContext is not enabled.\");\n            return;\n        }\n\n        if (this.isPlaying) {\n            console.log(\"Cannot play: it is already playing.\");\n            return;\n        }\n\n        if (!this.defaultTracksLoaded) {\n            console.log(\"Cannot play: default tracks not loaded.\");\n            return;\n        }\n\n        this.isPlaying = true;\n        let self = this;\n        let ctx = this.audioContext;\n        let startTime = ctx.currentTime;\n        let nextTickTime = startTime + self.tickTime;\n        let index = 0;\n\n        function scheduler() {\n\n            if (nextTickTime <= ctx.currentTime + self.tickTime ) {\n            // if (nextTickTime <= ctx.currentTime + 0.05 ) {\n\n                $.each(self.tracks, (id, track) => {\n                // self.tracks.forEach(track => {\n\n                    if (track.mute) {\n                        return;\n                    }\n\n                    if (!track.buffer) {\n                        return;\n                    }\n\n\n                    let trackTick = track.ticks[index];\n\n                    if (!trackTick.active) {\n                        return;\n                    }\n\n                    let tickSound = ctx.createBufferSource();\n                    tickSound.buffer = track.buffer;\n                    let tickGainNode = ctx.createGain();\n                    tickSound.connect(tickGainNode);\n                    tickGainNode.gain.value = trackTick.volume;\n                    tickGainNode.connect(track.gainNode);\n                    tickSound.start(nextTickTime);\n\n                });\n\n\n                self.currentTickIndex = index;\n                // console.log(\"Tick \" + self.currentTickIndex);\n                nextTickTime += self.tickTime;\n\n                index += 1;\n                index = index === 16 ? 0 : index;\n\n            }\n\n            window.setTimeout(scheduler, 0);\n        }\n\n        scheduler();\n    }\n\n\n\n\n\n\n    _playSound(bufferName, time) {\n        let ctx = this.audioContext;\n        let sound = ctx.createBufferSource();\n        sound.buffer = this.buffers[bufferName];\n        sound.connect(ctx.destination);\n        sound.start(time);\n    }\n\n\n\n    addNewTrack(name, soundUrl, volume = 1.0, pan = 0) {\n\n        if (this.buffers.hasOwnProperty(name)) {\n            console.log(\"Track name collision\");\n            return;\n        }\n\n        audioLoader(this.audioContext, soundUrl).then(buffer => {\n            this.buffers[name] = buffer;\n            let newTrack = new Track(this, name, this.buffers[name], volume, pan);\n            this.tracks[newTrack.id] = newTrack;\n            console.log(\"Added track \", newTrack);\n        }, error => {\n            console.log(\"ERROR\", error);\n        });\n    }\n\n\n    removeTrack(trackID) {\n        delete this.tracks[trackID];\n    }\n\n\n\n    soloTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this.tracksInSolo;\n        let tracksInMute = this.tracksInMute;\n\n        // case 1: track is not in solo and not in mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            $.each(this.tracks, (id, track) => {\n               if (id === trackID) {\n                   return;\n               }\n\n               if (!tracksInSolo.has(track)) {\n                   tracksInMute.add(track);\n                   track.mute = true;\n                   track.solo = false;\n               }\n            });\n        }\n\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            focusTrack.solo = false;\n\n            if (tracksInSolo.size > 0) {\n                tracksInMute.add(focusTrack);\n                focusTrack.mute = true;\n            } else {\n                tracksInMute.clear();\n                tracksInSolo.clear();\n                $.each(this.tracks, (id, track) => {\n                   track.mute = false;\n                   track.solo = false;\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else {\n\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            if (tracksInSolo.size === 1) {\n                $.each(this.tracks, (id, track) => {\n                   if (id !== trackID) {\n                       tracksInMute.add(track);\n                       track.mute = true;\n                   }\n                });\n            }\n        }\n    }\n\n\n\n    muteTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this.tracksInSolo;\n        let tracksInMute = this.tracksInMute;\n\n        // case 1: track not in solo or mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInMute.add(focusTrack);\n            focusTrack.mute = true;\n            focusTrack.solo = false;\n        }\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            tracksInMute.add(focusTrack);\n            focusTrack.solo = false;\n            focusTrack.mute = true;\n\n            if (tracksInSolo.size === 0) {\n                $.each(this.tracks, (id, track) => {\n                    if (id !== trackID) {\n                        tracksInMute.delete(track);\n                        track.mute = false;\n                    }\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else if (tracksInMute.has(focusTrack)) {\n            if (tracksInSolo.size > 0) {\n                tracksInMute.delete(focusTrack);\n                tracksInSolo.add(focusTrack);\n                focusTrack.mute = false;\n                focusTrack.solo = true;\n            }\n            else {\n                tracksInMute.delete(focusTrack);\n                focusTrack.mute = false;\n            }\n\n        }\n    }\n\n\n\n\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * Tick.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n export class Tick {\n\n     constructor(index = 0, active = false, volume = 1.0) {\n         this.index = index;\n         this.active = active;\n         this.volume = volume;\n     }\n\n     get volume() {\n         return this._volume;\n     }\n\n     set volume(val) {\n         this._volume = val > 1 ? 1.0 : val;\n     }\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * Track.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n import { Tick } from \"./Tick\";\nimport { guid } from \"../utils/utils\";\n\n\n export class Track {\n\n     constructor (drumMachine, name = \"track_default\", buffer = undefined, volume = 1.0, pan = 0, mute = false ) {\n         this.id = guid();\n         this.drumMachine = drumMachine;\n         this.audioContext = drumMachine.audioContext;\n         this.name = name;\n         this.buffer = buffer;\n         this.solo = false;\n         this.mute = mute;\n         this.ticks = [];\n         this.pannerNodeSupported = false;\n         this.gainNode = this.audioContext.createGain();\n         this.gainNode.gain.value = volume;\n\n\n         if (typeof this.audioContext.createStereoPanner === \"function\") {\n             this.pannerNode = this.audioContext.createStereoPanner();\n             this.pannerNode.pan.value = pan;\n             this.gainNode.connect(this.pannerNode);\n             this.pannerNode.connect(this.audioContext.destination);\n             this.pannerNodeSupported = true;\n             console.log(\"Stereo panner supported\");\n         } else {\n             this.gainNode.connect(this.audioContext.destination);\n             console.log(\"Stereo panner not supported\");\n         }\n\n         this._initTicks();\n     }\n\n\n     // setGain(val) {\n     //     this.gainNode.gain.value = val > 1 ? 1.0 : val;\n     // }\n\n\n     // setPan(val) {\n     //     if (val < -1) {\n     //         this.pannerNode.pan.value = -1;\n     //     }\n     //     else if (val > 1) {\n     //         this.pannerNode.pan.value = 1;\n     //     }\n     //     else {\n     //         this.pannerNode.pan.value = val;\n     //     }\n     // }\n\n\n\n     /*\n      *\n      */\n     _initTicks() {\n         this.ticks = [];\n         for (let i = 0; i < 16; ++i) {\n             this.ticks.push(new Tick(i));\n         }\n     }\n\n\n     setTick(index, active = true, volume = 1.0) {\n         if (index < 0 || index > 15) {\n             return;\n         }\n\n         this.ticks[index].volume = volume;\n         this.ticks[index].active = active;\n     }\n\n\n     setTicksFromArray(data) {\n         data.forEach(e => {\n\n             if (typeof e === \"object\") {\n                 if (!e.index || e.index < 0 || e.index > 15) {\n                     return;\n                 }\n\n                 let tick = this.ticks[e.index];\n                 tick.volume = e.volume ? e.volume : 1.0;\n                 tick.active = e.active ? e.active : true;\n             }\n             else {\n                 this.ticks[e].active = true;\n             }\n\n         });\n     }\n\n\n     setBuffer(buffer, fileName) {\n         this.buffer = buffer;\n         console.log(\"Track \" + this.name + \": audio buffer changed ( \" + fileName + \" )\");\n     }\n\n\n     playSound() {\n         if (!this.audioContext) return;\n         let sound = this.audioContext.createBufferSource();\n         sound.buffer = this.buffer;\n         sound.connect(this.audioContext.destination);\n         sound.start();\n     }\n\n\n\n\n\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * audio-loader.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\nexport function audioLoader(audioCtx, url) {\n\n    return new Promise((resolve, reject) => {\n\n        if (!audioCtx) {\n            reject(\"Missing audio context parameter.\");\n            return;\n        }\n\n        if (!url) {\n            reject(\"Missing url parameter\");\n            return;\n        }\n\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", url);\n        xhr.responseType = \"arraybuffer\";\n\n        xhr.onload = function() {\n            try {\n                audioCtx.decodeAudioData(xhr.response, function(decodedBuffer) {\n                    resolve(decodedBuffer);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        };\n\n        xhr.send();\n    });\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * mainController.js\n * ---------------------------------------------------------------------------------------\n */\n\n\nimport { DrumMachine } from \"../../audio/DrumMachine\";\n\n\nexport function mainController($scope) {\n\n    $scope.title = \"Main Controller\";\n    $scope.tracks = [];\n    $scope.ticksElements = [];\n    $scope.removeTrack = removeTrack;\n    console.log(\"Main controller\");\n\n\n    let drumMachine = new DrumMachine();\n\n\n    $scope.startSequencer = () => {\n        drumMachine._start();\n    };\n\n\n    function removeTrack(track) {\n        drumMachine.removeTrack(track.id);\n    }\n\n\n    initDefaultTracks($scope, drumMachine);\n    initDATgui(drumMachine);\n\n}\n\n\n\n\nfunction initDefaultTracks($scope, drumMachine) {\n    drumMachine._loadDefaultBuffers().then(() => {\n        drumMachine._initDefaultTracks();\n        $scope.tracks = drumMachine.tracks;\n        $scope.$apply();\n    }, error => {\n        console.log(error);\n    });\n}\n\n\n\nfunction initDATgui(drumMachine) {\n    let gui = new dat.GUI();\n    let bpmController = gui.add(drumMachine, \"bpm\", 50.0, 220.0);\n\n    bpmController.onChange(value => {\n        drumMachine.bpm = Math.floor(drumMachine.bpm);\n    });\n}\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * testController.js\n * ---------------------------------------------------------------------------------------\n */\n\n export function testController($scope) {\n\n     $scope.title = \"Test Controller\";\n     console.log(\"Test Controller\");\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * verticalSlider directive\n * ---------------------------------------------------------------------------------------\n */\n\n\"use strict\";\n\nexport function tickSliderDirective() {\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            tick: \"=\",\n            ticksElements: \"=\",\n            resizeTick: \"=\"\n        },\n        link: (scope, elem, attrs) => {\n\n\n            // console.log(scope.tick);\n            scope.ticksElements.push(elem);\n\n\n            elem.slider({\n                min: 0,\n                max: 100,\n                orientation: \"vertical\",\n                value: scope.tick.active ? scope.tick.volume * 100 : 0,\n                slide: (event, ui) => {\n\n                    if (!scope.tick.active) {\n                        scope.tick.active = true;\n                    }\n\n                    scope.tick.volume = ui.value * 0.01;\n                    // console.log(scope.tick.volume);\n                }\n            }).draggable();\n\n\n\n            // scope.resizeTick(elem);\n\n        }\n    };\n\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * trackDirective\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nexport function trackDirective(supportedAudioFormats) {\n\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            track: \"=\",\n            ticksElements: \"=\",\n            removeTrack: \"=\"\n        },\n        templateUrl: \"app/directives/templates/trackDirTemplate.html\",\n        link: function (scope, elem, attrs) {\n\n            scope.resizeTick = resizeTick;\n            scope.handleFiles = handleFiles;\n            scope.playSound = playSound;\n            scope.onSoloTrack = onSoloTrack;\n            scope.onMuteTrack = onMuteTrack;\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * styles & widgets\n             * ---------------------------------------------------------------------------------------\n             */\n\n            elem.find('button[name=\"removeTrackButton\"]').button({\n                icon: \"ui-icon-close\",\n                showLabel: false\n            });\n\n            elem.find('button[name=\"playSoundButton\"]').button({\n                icon: \"ui-icon-circle-triangle-e\",\n                showLabel: false\n            });\n\n            elem.find('div[id=\"trackVolumeSlider\"]').slider({\n                min: 0,\n                max: 100,\n                orientation: \"horizontal\",\n                value: scope.track.gainNode.gain.value * 100,\n                slide: (event, ui) => {\n                    scope.track.gainNode.gain.value = ui.value * 0.01;\n                }\n            }).draggable();\n\n            if (scope.track.pannerNodeSupported) {\n                elem.find('div[id=\"trackPanSlider\"]').slider({\n                    min: -100,\n                    max: 100,\n                    orientation: \"horizontal\",\n                    value: scope.track.pannerNode.pan.value * 100,\n                    slide: (event, ui) => {\n                        scope.track.pannerNode.pan.value = ui.value * 0.01;\n                    }\n                }).draggable();\n            } else {\n                elem.find('div[id=\"trackPanSlider\"]').remove();\n                elem.find(\".pan-label\").remove();\n\n                // push down volume slider\n                elem.find('div[id=\"trackVolumeSlider\"]').css({\n                    // marginTop: 0,\n                    // position: \"relative\",\n                    // bottom: 0\n                });\n            }\n\n\n            elem.find('button[name=soloTrackButton]').button({\n\n            });\n\n            elem.find('button[name=muteTrackButton]').button({\n\n            });\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * event listeners\n             * ---------------------------------------------------------------------------------------\n             */\n\n            // $(window).resize(() => {\n            //     scope.ticksElements.forEach((e) => {\n            //         resizeTick(e);\n            //     });\n            // });\n\n\n\n\n            elem.on(\"dragover\", onDragOver);\n            elem.on(\"drop\", onDrop);\n            elem.on(\"dragleave\", onDragLeave);\n\n\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * private functions\n             * ---------------------------------------------------------------------------------------\n             */\n\n            function resizeTick(tickElem) {\n                let ticksContainerWidth = elem.find(\".ticks-container\").width();\n                console.log(ticksContainerWidth);\n                let margin = 8;\n                let tickWidth = Math.floor((ticksContainerWidth - 15 * margin) / 16.0);\n\n\n                // tickElem.css({\n                //     width: 32,\n                //     marginRight: \"8px !important\"\n                // });\n\n\n                // tickElem.parent().css({\n                //     width: tickWidth,\n                //     marginRight: margin\n                // });\n\n\n\n                // tickElem.find(\".ui-slider-handle\").css({\n                //\n                // });\n\n            }\n\n\n            function handleFiles(files) {\n                if (!files || files.length < 1) return;\n\n                let file = files[0];\n\n                // chech if it is an audio file with a supported extension\n                if (!supportedAudioFormats.has(file.type)) {\n                    console.log(\"File format not supported by Web Audio API\");\n                    return;\n                }\n\n                let reader = new FileReader();\n                reader.onload = (ev) => {\n                    scope.track.audioContext.decodeAudioData(ev.target.result, function (buffer) {\n                        scope.track.setBuffer(buffer, file.name);\n                    });\n                };\n                reader.readAsArrayBuffer(file);\n            }\n\n\n            function onDragOver(e) {\n                if (!elem.hasClass(\"track-dragfile\")) {\n                    elem.addClass(\"track-dragfile\");\n                }\n                e.stopPropagation();\n                e.preventDefault();\n            }\n\n\n            function onDrop(e) {\n                e.stopPropagation();\n                e.preventDefault();\n                handleFiles(e.originalEvent.dataTransfer.files);\n                onDragLeave();\n            }\n\n\n            function onDragLeave(e) {\n                if (elem.hasClass(\"track-dragfile\")) {\n                    elem.removeClass(\"track-dragfile\");\n                }\n                if (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            }\n\n            function playSound() {\n                scope.track.playSound();\n            }\n\n\n            function onSoloTrack() {\n                scope.track.drumMachine.soloTrack(scope.track.id);\n            }\n\n            function onMuteTrack() {\n                scope.track.drumMachine.muteTrack(scope.track.id);\n            }\n\n\n\n        }\n    };\n\n}\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * routes.js\n * ---------------------------------------------------------------------------------------\n */\n\nexport function initRoutes($routeProvider) {\n\n\n    $routeProvider.when('/', {\n        controller: \"mainController\",\n        templateUrl: \"app/components/main/mainView.html\"\n    });\n\n    $routeProvider.when('/test', {\n        controller: \"testController\",\n        templateUrl: \"app/components/test/testView.html\"\n    });\n\n    $routeProvider.otherwise({redirectTo: '/'});\n\n}","/*\n * ---------------------------------------------------------------------------------------\n * utils.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n /*\n  * checkIfiOSdevice\n  */\n export function checkIfiOSdevice() {\n     return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n }\n\n\n\n /*\n  * generate uuid\n  */\n export function guid() {\n     let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n         var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n         return v.toString(16);\n     });\n     return uuid;\n }"]}