{"version":3,"sources":["node_modules/browser-pack/_prelude.js","public/app/app.js","public/app/audio/DrumMachine.js","public/app/audio/Tick.js","public/app/audio/Track.js","public/app/audio/audio-loader.js","public/app/components/main/mainController.js","public/app/components/test/testController.js","public/app/directives/tickSlider-directive.js","public/app/directives/track-directive.js","public/app/routes.js","public/app/utils/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_routes","_mainController","_testController","_trackDirective","_tickSliderDirective","app","angular","config","initRoutes","controller","mainController","testController","directive","tickSliderDirective","trackDirective","supportedAudioFormats","Set","add","constant","_audioLoader","_utils","_Track","DrumMachine","_classCallCheck","this","tag","numberOfBeats","AudioContext","window","webkitAudioContext","audioContext","bpm","tickTime","isPlaying","isStopped","buffers","tracks","beats","defaultBuffersLoaded","defaultTracksLoaded","tracksInSolo","tracksInMute","currentTickIndex","callBacksInLoop","soundURLs","kick","snare","hat","ride","checkIfiOSdevice","_enableAudioContextForiOS","audioContextEnabled","_initBeats","push","_this","$","document","ready","btn","visibility","on","buffer","createBuffer","source","createBufferSource","start","trigger","console","log","_this2","ctx","urls","Promise","resolve","reject","all","audioLoader","then","values","error","kickTrack","Track","setTicksFromArray","snareTrack","hatTrack","index","volume","id","scheduler","self","clearTimeout","timeOutID","nextTickTime","currentTime","each","track","mute","trackTick","ticks","active","tickSound","tickGainNode","createGain","connect","gain","value","gainNode","previousIndex","forEach","fn","setTimeout","startTime","bufferName","time","sound","destination","name","soundUrl","_this3","arguments","undefined","pan","hasOwnProperty","newTrack","trackID","focusTrack","has","delete","solo","size","clear","_typeof","_bpm","val","_onBpmChanged","Tick","_volume","_Tick","drumMachine","guid","pannerNodeSupported","createStereoPanner","pannerNode","_initTicks","data","tick","fileName","audioCtx","url","xhr","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","decodedBuffer","send","$scope","removeTrack","safeApply","phase","$root","$$phase","$apply","title","ticksElements","_DrumMachine","Array","fill","updateBeatIndicators","previousTickIndex","tickIndex","beatIndicators","removeClass","addClass","beatIndicatorsContainer","getElementById","getElementsByClassName","addCallBackInLoop","startSequencer","_start","stopSequencer","_stop","indicators","initDefaultTracks","initDATgui","_loadDefaultBuffers","_initDefaultTracks","dat","GUI","onChange","Math","floor","restrict","replace","scope","resizeTick","link","elem","attrs","slider","min","max","orientation","slide","event","ui","draggable","templateUrl","tickElem","ticksContainerWidth","find","width","handleFiles","files","file","type","reader","FileReader","ev","target","result","setBuffer","readAsArrayBuffer","onDragOver","hasClass","stopPropagation","preventDefault","onDrop","originalEvent","dataTransfer","onDragLeave","playSound","onSoloTrack","soloTrack","onMuteTrack","muteTrack","button","icon","showLabel","remove","css","$routeProvider","when","otherwise","redirectTo","test","navigator","userAgent","MSStream","c","random","toString"],"mappings":"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","file":"app.bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * ---------------------------------------------------------------------------------------\n * app.js\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nimport { initRoutes } from \"./routes\";\n\nimport { mainController } from \"./components/main/mainController\";\nimport { testController } from \"./components/test/testController\";\n\nimport { trackDirective } from \"./directives/track-directive\";\nimport { tickSliderDirective } from \"./directives/tickSlider-directive\";\n\n\n\n(function() {\n\n    let app = angular.module(\"myApp\", [\"ngRoute\"]);\n\n\n    // configure angular routes\n    app.config([\"$routeProvider\", initRoutes]);\n\n\n    // bind controllers\n    app.controller(\"mainController\", ['$scope', mainController]);\n    app.controller(\"testController\", ['$scope', testController]);\n\n\n    // register directives\n    app.directive(\"tickSlider\", tickSliderDirective);\n    app.directive(\"theTrack\", [\"supportedAudioFormats\", trackDirective]);\n\n\n\n    let supportedAudioFormats = new Set();\n    supportedAudioFormats.add(\"audio/wav\");\n    supportedAudioFormats.add(\"audio/x-wav\");\n    supportedAudioFormats.add(\"audio/mp3\");\n    supportedAudioFormats.add(\"audio/x-mp3\");\n    supportedAudioFormats.add(\"audio/ogg\");\n    supportedAudioFormats.add(\"audio/x-ogg\");\n\n    // constants\n    app.constant(\"supportedAudioFormats\", supportedAudioFormats);\n\n\n\n}());","/*\n * ---------------------------------------------------------------------------------------\n * DrumMachine.js\n * ---------------------------------------------------------------------------------------\n */\n\nimport { audioLoader } from \"./audio-loader\";\nimport { checkIfiOSdevice } from \"../utils/utils\";\nimport { Track } from \"./Track\";\n\n\nexport class DrumMachine {\n\n    constructor() {\n        this.tag = \"[DrumMachine.js]\";\n        this.numberOfBeats = 16;\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        this.audioContext = new AudioContext();\n        this.bpm = 120.0;\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n        this.isPlaying = false;\n        this.isStopped = false;\n        this.buffers = {};\n        this.tracks = {};\n        this.beats = [];\n        this.defaultBuffersLoaded = false;\n        this.defaultTracksLoaded = false;\n        this.tracksInSolo = new Set();\n        this.tracksInMute = new Set();\n\n        this.currentTickIndex = 1;\n\n        this.callBacksInLoop = [];\n\n\n        this.soundURLs = {\n            kick: \"app/assets/audio/kick.wav\",\n            snare: \"app/assets/audio/snare.wav\",\n            hat: \"app/assets/audio/hat.wav\",\n            ride: \"app/assets/audio/ride.wav\"\n        };\n\n        if (checkIfiOSdevice()) {\n            this._enableAudioContextForiOS();\n        } else {\n            this.audioContextEnabled = true;\n        }\n\n        this._initBeats();\n\n        // this._loadDefaultBuffers();\n    }\n\n\n    /*\n     * get bpm\n     */\n    get bpm() {\n        return this._bpm;\n    }\n\n    /*\n     * set bpm\n     */\n    set bpm(val) {\n        if (val !== this._bpm) {\n            this._bpm = val;\n            this._onBpmChanged();\n        }\n    }\n\n\n    _initBeats() {\n        this.beats = [];\n        for (let i = 0; i < this.numberOfBeats; ++i) {\n            this.beats.push(false);\n        }\n        this.beats[0] = true;\n    }\n\n\n\n    _enableAudioContextForiOS() {\n        $(document).ready(() => {\n            let btn = $(\"<button/>\", {\n                visibility: \"hidden\"\n            });\n\n            btn.on(\"touchstart\", () => {\n                let buffer = this.audioContext.createBuffer(1, 1, 22050);\n                let source = this.audioContext.createBufferSource();\n                source.buffer = buffer;\n                source.start();\n            });\n\n            btn.trigger(\"touchstart\");\n\n            this.audioContextEnabled = true;\n            console.log(\"AudioContext enabled for iOS\");\n        });\n    }\n\n\n    _loadDefaultBuffers() {\n\n        let ctx = this.audioContext;\n        let urls = this.soundURLs;\n\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                audioLoader(ctx, urls.kick),\n                audioLoader(ctx, urls.snare),\n                audioLoader(ctx, urls.hat),\n                audioLoader(ctx, urls.ride)\n            ]).then(values => {\n                this.buffers[\"kick\"] = values[0];\n                this.buffers[\"snare\"] = values[1];\n                this.buffers[\"hat\"] = values[2];\n                this.buffers[\"ride\"] = values[3];\n                this.defaultBuffersLoaded = true;\n                console.log(this.buffers);\n\n                this.defaultBuffersLoaded = true;\n                console.log(\"Default buffers loaded\");\n                // this._initDefaultTracks();\n\n                resolve(\"Default buffers loaded\");\n\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n\n\n    _initDefaultTracks() {\n\n        if (!this.defaultBuffersLoaded) {\n            return;\n        }\n\n        this.tracks = {};\n\n        let kickTrack = new Track(this, \"kick\", this.buffers[\"kick\"]);\n        kickTrack.setTicksFromArray([0,4,8,12]);\n        let snareTrack = new Track(this, \"snare\", this.buffers[\"snare\"], 1, 0.1);\n        snareTrack.setTicksFromArray([4,12]);\n        let hatTrack = new Track(this, \"hat\", this.buffers[\"hat\"], 0.85, -1);\n        // hatTrack.setTicksFromArray([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\n\n\n        hatTrack.setTicksFromArray([\n            {\n                index: 0,\n                volume: 0.9\n            },\n            {\n                index: 1,\n                volume: 0.5\n            },\n            {\n                index: 2,\n                volume: 1.2\n            },\n            {\n                index: 3,\n                volume: 0.4\n            },\n            {\n                index: 4,\n                volume: 0.9\n            },\n            {\n                index: 5,\n                volume: 0.5\n            },\n            {\n                index: 6,\n                volume: 1.2\n            },\n            {\n                index: 7,\n                volume: 0.4\n            },\n            {\n                index: 8,\n                volume: 0.9\n            },\n            {\n                index: 9,\n                volume: 0.5\n            },\n            {\n                index: 10,\n                volume: 1.2\n            },\n            {\n                index: 11,\n                volume: 0.4\n            },\n            {\n                index: 12,\n                volume: 0.9\n            },\n            {\n                index: 13,\n                volume: 0.5\n            },\n            {\n                index: 14,\n                volume: 1.2\n            },\n            {\n                index: 15,\n                volume: 0.4\n            }\n        ]);\n\n        this.tracks[kickTrack.id] = kickTrack;\n        this.tracks[snareTrack.id] = snareTrack;\n        this.tracks[hatTrack.id] = hatTrack;\n\n        this.defaultTracksLoaded = true;\n        console.log(\"Default tracks loaded\" , this.tracks);\n\n        // this._start();\n    }\n\n\n    _onBpmChanged() {\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n    }\n\n\n\n    _start() {\n\n        if (!this.audioContextEnabled) {\n            console.log(\"Cannot play: AudioContext is not enabled.\");\n            return;\n        }\n\n        if (this.isPlaying) {\n            console.log(\"Cannot play: it is already playing.\");\n            return;\n        }\n\n        if (!this.defaultTracksLoaded) {\n            console.log(\"Cannot play: default tracks not loaded.\");\n            return;\n        }\n\n        this.isPlaying = true;\n        this.isStopped = false;\n        let self = this;\n        let ctx = this.audioContext;\n        let startTime = ctx.currentTime;\n        let nextTickTime = startTime + self.tickTime;\n        let index = 0;\n        let timeOutID;\n\n        function scheduler() {\n\n            if (self.isStopped) {\n                clearTimeout(timeOutID);\n                self.isPlaying = false;\n                return;\n            }\n\n            if (nextTickTime <= ctx.currentTime + self.tickTime ) {\n            // if (nextTickTime <= ctx.currentTime + 0.05 ) {\n\n                $.each(self.tracks, (id, track) => {\n                // self.tracks.forEach(track => {\n\n                    if (track.mute) {\n                        return;\n                    }\n\n                    if (!track.buffer) {\n                        return;\n                    }\n\n\n                    let trackTick = track.ticks[index];\n\n                    if (!trackTick.active) {\n                        return;\n                    }\n\n                    let tickSound = ctx.createBufferSource();\n                    tickSound.buffer = track.buffer;\n                    let tickGainNode = ctx.createGain();\n                    tickSound.connect(tickGainNode);\n                    tickGainNode.gain.value = trackTick.volume;\n                    tickGainNode.connect(track.gainNode);\n                    tickSound.start(nextTickTime);\n\n                });\n\n\n                self.currentTickIndex = index;\n                // console.log(\"Tick \" + self.currentTickIndex);\n\n                let previousIndex = index === 0 ? (self.numberOfBeats - 1) : index - 1;\n\n                self.callBacksInLoop.forEach(fn => {\n                   fn(previousIndex, index);\n                });\n\n                nextTickTime += self.tickTime;\n\n                index += 1;\n                index = index === self.numberOfBeats ? 0 : index;\n\n            }\n\n            timeOutID = window.setTimeout(scheduler, 0);\n        }\n\n        scheduler();\n    }\n\n\n    _stop() {\n        this.isStopped = true;\n    }\n\n\n\n\n\n    _playSound(bufferName, time) {\n        let ctx = this.audioContext;\n        let sound = ctx.createBufferSource();\n        sound.buffer = this.buffers[bufferName];\n        sound.connect(ctx.destination);\n        sound.start(time);\n    }\n\n\n\n    addNewTrack(name, soundUrl, volume = 1.0, pan = 0) {\n\n        if (this.buffers.hasOwnProperty(name)) {\n            console.log(\"Track name collision\");\n            return;\n        }\n\n        audioLoader(this.audioContext, soundUrl).then(buffer => {\n            this.buffers[name] = buffer;\n            let newTrack = new Track(this, name, this.buffers[name], volume, pan);\n            this.tracks[newTrack.id] = newTrack;\n            console.log(\"Added track \", newTrack);\n        }, error => {\n            console.log(\"ERROR\", error);\n        });\n    }\n\n\n    removeTrack(trackID) {\n        delete this.tracks[trackID];\n    }\n\n\n\n    soloTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this.tracksInSolo;\n        let tracksInMute = this.tracksInMute;\n\n        // case 1: track is not in solo and not in mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            $.each(this.tracks, (id, track) => {\n               if (id === trackID) {\n                   return;\n               }\n\n               if (!tracksInSolo.has(track)) {\n                   tracksInMute.add(track);\n                   track.mute = true;\n                   track.solo = false;\n               }\n            });\n        }\n\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            focusTrack.solo = false;\n\n            if (tracksInSolo.size > 0) {\n                tracksInMute.add(focusTrack);\n                focusTrack.mute = true;\n            } else {\n                tracksInMute.clear();\n                tracksInSolo.clear();\n                $.each(this.tracks, (id, track) => {\n                   track.mute = false;\n                   track.solo = false;\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else {\n\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            if (tracksInSolo.size === 1) {\n                $.each(this.tracks, (id, track) => {\n                   if (id !== trackID) {\n                       tracksInMute.add(track);\n                       track.mute = true;\n                   }\n                });\n            }\n        }\n    }\n\n\n\n    muteTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this.tracksInSolo;\n        let tracksInMute = this.tracksInMute;\n\n        // case 1: track not in solo or mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInMute.add(focusTrack);\n            focusTrack.mute = true;\n            focusTrack.solo = false;\n        }\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            tracksInMute.add(focusTrack);\n            focusTrack.solo = false;\n            focusTrack.mute = true;\n\n            if (tracksInSolo.size === 0) {\n                $.each(this.tracks, (id, track) => {\n                    if (id !== trackID) {\n                        tracksInMute.delete(track);\n                        track.mute = false;\n                    }\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else if (tracksInMute.has(focusTrack)) {\n            if (tracksInSolo.size > 0) {\n                tracksInMute.delete(focusTrack);\n                tracksInSolo.add(focusTrack);\n                focusTrack.mute = false;\n                focusTrack.solo = true;\n            }\n            else {\n                tracksInMute.delete(focusTrack);\n                focusTrack.mute = false;\n            }\n\n        }\n    }\n\n\n    addCallBackInLoop(fn) {\n        if (!typeof fn === \"function\") return;\n        this.callBacksInLoop.push( fn );\n    }\n\n\n\n\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * Tick.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n export class Tick {\n\n     constructor(index = 0, active = false, volume = 1.0) {\n         this.index = index;\n         this.active = active;\n         this.volume = volume;\n     }\n\n     get volume() {\n         return this._volume;\n     }\n\n     set volume(val) {\n         this._volume = val > 1 ? 1.0 : val;\n     }\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * Track.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n import { Tick } from \"./Tick\";\nimport { guid } from \"../utils/utils\";\n\n\n export class Track {\n\n     constructor (drumMachine, name = \"track_default\", buffer = undefined, volume = 1.0, pan = 0, mute = false ) {\n         this.id = guid();\n         this.drumMachine = drumMachine;\n         this.audioContext = drumMachine.audioContext;\n         this.name = name;\n         this.buffer = buffer;\n         this.solo = false;\n         this.mute = mute;\n         this.ticks = [];\n         this.pannerNodeSupported = false;\n         this.gainNode = this.audioContext.createGain();\n         this.gainNode.gain.value = volume;\n\n\n         if (typeof this.audioContext.createStereoPanner === \"function\") {\n             this.pannerNode = this.audioContext.createStereoPanner();\n             this.pannerNode.pan.value = pan;\n             this.gainNode.connect(this.pannerNode);\n             this.pannerNode.connect(this.audioContext.destination);\n             this.pannerNodeSupported = true;\n             console.log(\"Stereo panner supported\");\n         } else {\n             this.gainNode.connect(this.audioContext.destination);\n             console.log(\"Stereo panner not supported\");\n         }\n\n         this._initTicks();\n     }\n\n\n     // setGain(val) {\n     //     this.gainNode.gain.value = val > 1 ? 1.0 : val;\n     // }\n\n\n     // setPan(val) {\n     //     if (val < -1) {\n     //         this.pannerNode.pan.value = -1;\n     //     }\n     //     else if (val > 1) {\n     //         this.pannerNode.pan.value = 1;\n     //     }\n     //     else {\n     //         this.pannerNode.pan.value = val;\n     //     }\n     // }\n\n\n\n     /*\n      *\n      */\n     _initTicks() {\n         this.ticks = [];\n         for (let i = 0; i < 16; ++i) {\n             this.ticks.push(new Tick(i));\n         }\n     }\n\n\n     setTick(index, active = true, volume = 1.0) {\n         if (index < 0 || index > 15) {\n             return;\n         }\n\n         this.ticks[index].volume = volume;\n         this.ticks[index].active = active;\n     }\n\n\n     setTicksFromArray(data) {\n         data.forEach(e => {\n\n             if (typeof e === \"object\") {\n                 if (!e.index || e.index < 0 || e.index > 15) {\n                     return;\n                 }\n\n                 let tick = this.ticks[e.index];\n                 tick.volume = e.volume ? e.volume : 1.0;\n                 tick.active = e.active ? e.active : true;\n             }\n             else {\n                 this.ticks[e].active = true;\n             }\n\n         });\n     }\n\n\n     setBuffer(buffer, fileName) {\n         this.buffer = buffer;\n         console.log(\"Track \" + this.name + \": audio buffer changed ( \" + fileName + \" )\");\n     }\n\n\n     playSound() {\n         if (!this.audioContext) return;\n         let sound = this.audioContext.createBufferSource();\n         sound.buffer = this.buffer;\n         sound.connect(this.audioContext.destination);\n         sound.start();\n     }\n\n\n\n\n\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * audio-loader.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\nexport function audioLoader(audioCtx, url) {\n\n    return new Promise((resolve, reject) => {\n\n        if (!audioCtx) {\n            reject(\"Missing audio context parameter.\");\n            return;\n        }\n\n        if (!url) {\n            reject(\"Missing url parameter\");\n            return;\n        }\n\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", url);\n        xhr.responseType = \"arraybuffer\";\n\n        xhr.onload = function() {\n            try {\n                audioCtx.decodeAudioData(xhr.response, function(decodedBuffer) {\n                    resolve(decodedBuffer);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        };\n\n        xhr.send();\n    });\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * mainController.js\n * ---------------------------------------------------------------------------------------\n */\n\n\nimport { DrumMachine } from \"../../audio/DrumMachine\";\n\n\nexport function mainController($scope) {\n\n    $scope.safeApply = function(fn) {\n        var phase = this.$root.$$phase;\n        if(phase == '$apply' || phase == '$digest') {\n            if(fn && (typeof(fn) === 'function')) {\n                fn();\n            }\n        } else {\n            this.$apply(fn);\n        }\n    };\n\n\n\n    $scope.title = \"Main Controller\";\n    $scope.tracks = [];\n    $scope.ticksElements = [];\n    $scope.removeTrack = removeTrack;\n    console.log(\"Main controller\");\n\n\n    let drumMachine = new DrumMachine();\n\n\n    $scope.beats = new Array(drumMachine.numberOfBeats).fill(false);\n    // drumMachine.addCallBackInLoop(updateBeatIndicators);\n\n\n    $(window).ready(() => {\n\n        let beatIndicatorsContainer = document.getElementById(\"beatIndicatorsContainer\");\n        let beatIndicators = beatIndicatorsContainer.getElementsByClassName(\"tick-indicator\");\n\n        function updateBeatIndicators(previousTickIndex,tickIndex) {\n            $(beatIndicators[previousTickIndex]).removeClass(\"tick-indicator-active\");\n            $(beatIndicators[tickIndex]).addClass(\"tick-indicator-active\");\n        }\n\n        drumMachine.addCallBackInLoop(updateBeatIndicators);\n\n    });\n\n\n\n\n\n\n\n\n    // $(window).ready(() => {\n    //     let container = $(\"#beatIndicatorsContainer\");\n    //     drumMachine.beats.forEach(e => {\n    //         container.append(createBeatIndicator());\n    //     });\n    // });\n    //\n    //\n    //\n    //\n    // function createBeatIndicator() {\n    //     return $(\"<li></li>\\n\\r\").append($(\"<div></div> \").addClass(\"tick-indicator\"));\n    // }\n\n\n\n\n    $scope.startSequencer = () => {\n        drumMachine._start();\n    };\n\n    $scope.stopSequencer = () => {\n        drumMachine._stop();\n        let indicators = document.getElementById(\"beatIndicatorsContainer\").getElementsByClassName(\"tick-indicator\");\n        $(indicators).removeClass(\"tick-indicator-active\");\n    };\n\n\n    function removeTrack(track) {\n        drumMachine.removeTrack(track.id);\n    }\n\n\n    initDefaultTracks($scope, drumMachine);\n    initDATgui(drumMachine);\n\n}\n\n\n\n\nfunction initDefaultTracks($scope, drumMachine) {\n    drumMachine._loadDefaultBuffers().then(() => {\n        drumMachine._initDefaultTracks();\n        $scope.tracks = drumMachine.tracks;\n        $scope.$apply();\n    }, error => {\n        console.log(error);\n    });\n}\n\n\n\nfunction initDATgui(drumMachine) {\n    let gui = new dat.GUI();\n    let bpmController = gui.add(drumMachine, \"bpm\", 50.0, 220.0);\n\n    bpmController.onChange(value => {\n        drumMachine.bpm = Math.floor(drumMachine.bpm);\n    });\n}\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * testController.js\n * ---------------------------------------------------------------------------------------\n */\n\n export function testController($scope) {\n\n     $scope.title = \"Test Controller\";\n     console.log(\"Test Controller\");\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * verticalSlider directive\n * ---------------------------------------------------------------------------------------\n */\n\n\"use strict\";\n\nexport function tickSliderDirective() {\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            tick: \"=\",\n            ticksElements: \"=\",\n            resizeTick: \"=\"\n        },\n        link: (scope, elem, attrs) => {\n\n\n            // console.log(scope.tick);\n            scope.ticksElements.push(elem);\n\n\n            elem.slider({\n                min: 0,\n                max: 100,\n                orientation: \"vertical\",\n                value: scope.tick.active ? scope.tick.volume * 100 : 0,\n                slide: (event, ui) => {\n\n                    if (!scope.tick.active) {\n                        scope.tick.active = true;\n                    }\n\n                    scope.tick.volume = ui.value * 0.01;\n                    // console.log(scope.tick.volume);\n                }\n            }).draggable();\n\n\n\n            // scope.resizeTick(elem);\n\n        }\n    };\n\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * trackDirective\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nexport function trackDirective(supportedAudioFormats) {\n\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            track: \"=\",\n            ticksElements: \"=\",\n            removeTrack: \"=\"\n        },\n        templateUrl: \"app/directives/templates/trackDirTemplate.html\",\n        link: function (scope, elem, attrs) {\n\n            scope.resizeTick = resizeTick;\n            scope.handleFiles = handleFiles;\n            scope.playSound = playSound;\n            scope.onSoloTrack = onSoloTrack;\n            scope.onMuteTrack = onMuteTrack;\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * styles & widgets\n             * ---------------------------------------------------------------------------------------\n             */\n\n            elem.find('button[name=\"removeTrackButton\"]').button({\n                icon: \"ui-icon-close\",\n                showLabel: false\n            });\n\n            elem.find('button[name=\"playSoundButton\"]').button({\n                icon: \"ui-icon-circle-triangle-e\",\n                showLabel: false\n            });\n\n            elem.find('div[id=\"trackVolumeSlider\"]').slider({\n                min: 0,\n                max: 100,\n                orientation: \"horizontal\",\n                value: scope.track.gainNode.gain.value * 100,\n                slide: (event, ui) => {\n                    scope.track.gainNode.gain.value = ui.value * 0.01;\n                }\n            }).draggable();\n\n            if (scope.track.pannerNodeSupported) {\n                elem.find('div[id=\"trackPanSlider\"]').slider({\n                    min: -100,\n                    max: 100,\n                    orientation: \"horizontal\",\n                    value: scope.track.pannerNode.pan.value * 100,\n                    slide: (event, ui) => {\n                        scope.track.pannerNode.pan.value = ui.value * 0.01;\n                    }\n                }).draggable();\n            } else {\n                elem.find('div[id=\"trackPanSlider\"]').remove();\n                elem.find(\".pan-label\").remove();\n\n                // push down volume slider\n                elem.find('div[id=\"trackVolumeSlider\"]').css({\n                    // marginTop: 0,\n                    // position: \"relative\",\n                    // bottom: 0\n                });\n            }\n\n\n            elem.find('button[name=soloTrackButton]').button({\n\n            });\n\n            elem.find('button[name=muteTrackButton]').button({\n\n            });\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * event listeners\n             * ---------------------------------------------------------------------------------------\n             */\n\n            // $(window).resize(() => {\n            //     scope.ticksElements.forEach((e) => {\n            //         resizeTick(e);\n            //     });\n            // });\n\n\n\n\n            elem.on(\"dragover\", onDragOver);\n            elem.on(\"drop\", onDrop);\n            elem.on(\"dragleave\", onDragLeave);\n\n\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * private functions\n             * ---------------------------------------------------------------------------------------\n             */\n\n            function resizeTick(tickElem) {\n                let ticksContainerWidth = elem.find(\".ticks-container\").width();\n                console.log(ticksContainerWidth);\n                let margin = 8;\n                let tickWidth = Math.floor((ticksContainerWidth - 15 * margin) / 16.0);\n\n\n                // tickElem.css({\n                //     width: 32,\n                //     marginRight: \"8px !important\"\n                // });\n\n\n                // tickElem.parent().css({\n                //     width: tickWidth,\n                //     marginRight: margin\n                // });\n\n\n\n                // tickElem.find(\".ui-slider-handle\").css({\n                //\n                // });\n\n            }\n\n\n            function handleFiles(files) {\n                if (!files || files.length < 1) return;\n\n                let file = files[0];\n\n                // chech if it is an audio file with a supported extension\n                if (!supportedAudioFormats.has(file.type)) {\n                    console.log(\"File format not supported by Web Audio API\");\n                    return;\n                }\n\n                let reader = new FileReader();\n                reader.onload = (ev) => {\n                    scope.track.audioContext.decodeAudioData(ev.target.result, function (buffer) {\n                        scope.track.setBuffer(buffer, file.name);\n                    });\n                };\n                reader.readAsArrayBuffer(file);\n            }\n\n\n            function onDragOver(e) {\n                if (!elem.hasClass(\"track-dragfile\")) {\n                    elem.addClass(\"track-dragfile\");\n                }\n                e.stopPropagation();\n                e.preventDefault();\n            }\n\n\n            function onDrop(e) {\n                e.stopPropagation();\n                e.preventDefault();\n                handleFiles(e.originalEvent.dataTransfer.files);\n                onDragLeave();\n            }\n\n\n            function onDragLeave(e) {\n                if (elem.hasClass(\"track-dragfile\")) {\n                    elem.removeClass(\"track-dragfile\");\n                }\n                if (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            }\n\n            function playSound() {\n                scope.track.playSound();\n            }\n\n\n            function onSoloTrack() {\n                scope.track.drumMachine.soloTrack(scope.track.id);\n            }\n\n            function onMuteTrack() {\n                scope.track.drumMachine.muteTrack(scope.track.id);\n            }\n\n\n\n        }\n    };\n\n}\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * routes.js\n * ---------------------------------------------------------------------------------------\n */\n\nexport function initRoutes($routeProvider) {\n\n\n    $routeProvider.when('/', {\n        controller: \"mainController\",\n        templateUrl: \"app/components/main/mainView.html\"\n    });\n\n    $routeProvider.when('/test', {\n        controller: \"testController\",\n        templateUrl: \"app/components/test/testView.html\"\n    });\n\n    $routeProvider.otherwise({redirectTo: '/'});\n\n}","/*\n * ---------------------------------------------------------------------------------------\n * utils.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n /*\n  * checkIfiOSdevice\n  */\n export function checkIfiOSdevice() {\n     return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n }\n\n\n\n /*\n  * generate uuid\n  */\n export function guid() {\n     let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n         var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n         return v.toString(16);\n     });\n     return uuid;\n }"]}