{"version":3,"sources":["node_modules/browser-pack/_prelude.js","public/app/app.js","public/app/audio/DrumMachine.js","public/app/audio/Tick.js","public/app/audio/Track.js","public/app/audio/audio-loader.js","public/app/audio/presets.js","public/app/components/drum-machine/drumMachineController.js","public/app/components/test/testController.js","public/app/directives/commentDirective.js","public/app/directives/tickSliderDirective.js","public/app/directives/trackDirective.js","public/app/routes.js","public/app/utils/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_routes","_drumMachineController","_testController","_trackDirective","_tickSliderDirective","_commentDirective","app","angular","config","initRoutes","controller","drumMachineController","testController","directive","tickSliderDirective","trackDirective","commentDirective","supportedAudioFormats","Set","add","constant","_audioLoader","_utils","_Track","DrumMachine","_classCallCheck","this","tag","numberOfBeats","AudioContext","window","webkitAudioContext","audioContext","bpm","bpmMin","bpmMax","tickTime","isPlaying","isStopped","buffers","tracks","defaultBuffersLoaded","defaultTracksLoaded","_tracksInSolo","_tracksInMute","currentTickIndex","callBacksInLoop","soundURLs","kick","snare","hat","ride","checkIfiOSdevice","_enableAudioContextForiOS","audioContextEnabled","_this","$","document","ready","btn","visibility","on","buffer","createBuffer","source","createBufferSource","start","console","log","trigger","_this2","ctx","urls","Promise","resolve","reject","all","audioLoader","then","values","error","kickTrack","Track","setTicksFromArray","snareTrack","hatTrack","active","index","volume","id","scheduler","self","clearTimeout","timeOutID","nextTickTime","currentTime","each","track","mute","trackTick","ticks","tickSound","tickGainNode","createGain","connect","gain","value","gainNode","previousIndex","previousPrevious","firstLoopEnded","forEach","fn","setTimeout","startTime","bufferName","time","sound","destination","trackID","delete","hasOwnProperty","focusTrack","tracksInSolo","tracksInMute","has","solo","size","clear","_typeof","push","key","name","Object","keys","_createEmptyTicksArray","soundPath","pan","_this3","pannerNode","data","_this4","_clearTracks","promises","createTrack","_bpm","val","_onBpmChanged","Tick","arguments","undefined","_Tick","drumMachine","guid","pannerNodeSupported","createStereoPanner","_initTicks","fileName","audioCtx","url","xhr","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","decodedBuffer","send","groovyRockPreset","timeSignature","num","den","psyTrancePreset","$scope","$compile","$http","FileSaver","Blob","removeTrack","play","preventDefault","stopPropagation","playBtn","css","backgroundColor","backgroundImage","stopBtn","startSequencer","stop","stopSequencer","loadPresetFromJson","json","enableLoadingSpinner","loadPreset","bpmSlider","slider","$apply","disableLoadingSpinner","initExportMidiMenu","API","li","click","exportMidi","find","append","initPanels","initPresetsMenu","baseServerUrl","method","headers","Accept","presets","liParent","ul","preset","errorResponse","loadComments","enableCommentsLoadingSpinner","comments","safeApply","disableCommentsLoadingSpinner","loadingContainer","addClass","removeClass","commentsLoadingOverlay","commentsLoadingSpinner","_DrumMachine","phase","$root","$$phase","title","ticksElements","integerval","beats","Array","fill","username","commentToPost","invalidUsernameMessage","invalidCommentMessage","accordion","animate","collapsible","heightStyle","beforeActivate","button","icon","updateBeatIndicators","previousTickIndex","tickIndex","beatIndicators","beatIndicatorsContainer","getElementById","getElementsByClassName","addCallBackInLoop","addEventListener","keyCode","is","target","body","_start","_stop","indicators","addTrack","addEmptyTrack","trackData","notes","waitCounter","tick","noteEventData","pitch","velocity","duration","waitParam","Content-Type","JSON","stringify","blob","type","saveAs","savePreset","_presets","uploadFiles","handler","formData","FormData","fileList","files","file","obj","setRequestHeader","postComment","message","splice","_loadDefaultBuffers","_initDefaultTracks","scope","min","max","orientation","slide","event","ui","draggable","updateSlider","isInRangeBPM","restrict","replace","templateUrl","link","elem","attrs","resizeTick","tickElem","ticksContainerWidth","width","Math","floor","handleFiles","reader","FileReader","ev","result","setBuffer","readAsArrayBuffer","onDragOver","hasClass","onDrop","originalEvent","dataTransfer","onDragLeave","playSound","onSoloTrack","soloTrack","onMuteTrack","muteTrack","showLabel","remove","$routeProvider","when","otherwise","redirectTo","test","navigator","userAgent","MSStream","c","random","toString"],"mappings":"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","file":"app.bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * ---------------------------------------------------------------------------------------\n * app.js\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nimport { initRoutes } from \"./routes\";\n\nimport { drumMachineController } from \"./components/drum-machine/drumMachineController\";\nimport { testController } from \"./components/test/testController\";\n\nimport { trackDirective } from \"./directives/trackDirective\";\nimport { tickSliderDirective } from \"./directives/tickSliderDirective\";\nimport { commentDirective } from \"./directives/commentDirective\";\n\n\n\n\n(function() {\n\n    let app = angular.module(\"myApp\", [\"ngRoute\", \"ngFileSaver\"]);\n\n\n    // configure angular routes\n    app.config([\"$routeProvider\", initRoutes]);\n\n\n    // bind controllers\n    app.controller(\"drumMachineController\", [\"$scope\", \"$compile\", \"$http\", \"FileSaver\", \"Blob\", drumMachineController]);\n    app.controller(\"testController\", ['$scope', testController]);\n\n\n    // register directives\n    app.directive(\"tickSlider\", tickSliderDirective);\n    app.directive(\"theTrack\", [\"supportedAudioFormats\", trackDirective]);\n    app.directive(\"comment\", [\"supportedAudioFormats\", commentDirective]);\n\n\n\n\n    let supportedAudioFormats = new Set();\n    supportedAudioFormats.add(\"audio/wav\");\n    supportedAudioFormats.add(\"audio/x-wav\");\n    supportedAudioFormats.add(\"audio/mp3\");\n    supportedAudioFormats.add(\"audio/x-mp3\");\n    supportedAudioFormats.add(\"audio/ogg\");\n    supportedAudioFormats.add(\"audio/x-ogg\");\n\n    // constants\n    app.constant(\"supportedAudioFormats\", supportedAudioFormats);\n\n\n\n}());","/*\n * ---------------------------------------------------------------------------------------\n * DrumMachine.js\n * ---------------------------------------------------------------------------------------\n */\n\nimport { audioLoader } from \"./audio-loader\";\nimport { checkIfiOSdevice } from \"../utils/utils\";\nimport { Track } from \"./Track\";\n\n\nexport class DrumMachine {\n\n    constructor() {\n        this.tag = \"[DrumMachine.js]\";\n        this.numberOfBeats = 16;\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        this.audioContext = new AudioContext();\n        this.bpm = 120;\n        this.bpmMin = 30;\n        this.bpmMax = 240;\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n        this.isPlaying = false;\n        this.isStopped = true;\n        this.buffers = {};\n        this.tracks = {};\n        this.defaultBuffersLoaded = false;\n        this.defaultTracksLoaded = false;\n        this._tracksInSolo = new Set();\n        this._tracksInMute = new Set();\n\n        this.currentTickIndex = 0;\n\n        this.callBacksInLoop = [];\n\n        this.soundURLs = {\n            kick: \"app/assets/audio/kick.wav\",\n            snare: \"app/assets/audio/snare.wav\",\n            hat: \"app/assets/audio/hat.wav\",\n            ride: \"app/assets/audio/ride.wav\"\n        };\n\n        if (checkIfiOSdevice()) {\n            this._enableAudioContextForiOS();\n        } else {\n            this.audioContextEnabled = true;\n        }\n\n    }\n\n\n    /*\n     * get bpm\n     */\n    get bpm() {\n        return this._bpm;\n    }\n\n    /*\n     * set bpm\n     */\n    set bpm(val) {\n        if (val !== this._bpm) {\n            this._bpm = val;\n            this._onBpmChanged();\n        }\n    }\n\n\n\n\n\n    _enableAudioContextForiOS() {\n        $(document).ready(() => {\n            let btn = $(\"<button/>\", {\n                visibility: \"hidden\"\n            });\n\n            btn.on(\"touchstart\", () => {\n                let buffer = this.audioContext.createBuffer(1, 1, 22050);\n                let source = this.audioContext.createBufferSource();\n                source.buffer = buffer;\n                source.start();\n\n                this.audioContextEnabled = true;\n                console.log(\"AudioContext enabled for iOS\");\n            });\n\n            btn.trigger(\"touchstart\");\n\n        });\n    }\n\n\n    _loadDefaultBuffers() {\n\n        let ctx = this.audioContext;\n        let urls = this.soundURLs;\n\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                audioLoader(ctx, urls.kick),\n                audioLoader(ctx, urls.snare),\n                audioLoader(ctx, urls.hat),\n                audioLoader(ctx, urls.ride)\n            ]).then(values => {\n                this.buffers[\"kick\"] = values[0];\n                this.buffers[\"snare\"] = values[1];\n                this.buffers[\"hat\"] = values[2];\n                this.buffers[\"ride\"] = values[3];\n                this.defaultBuffersLoaded = true;\n                console.log(this.buffers);\n\n                this.defaultBuffersLoaded = true;\n                console.log(\"Default buffers loaded\");\n                // this._initDefaultTracks();\n\n                resolve(\"Default buffers loaded\");\n\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n\n\n    _initDefaultTracks() {\n\n        if (!this.defaultBuffersLoaded) {\n            return;\n        }\n\n        this.tracks = {};\n\n        let kickTrack = new Track(this, \"kick\", this.buffers[\"kick\"]);\n        kickTrack.setTicksFromArray([0,4,8,12]);\n        let snareTrack = new Track(this, \"snare\", this.buffers[\"snare\"], 1, 0.1);\n        snareTrack.setTicksFromArray([4,12]);\n        let hatTrack = new Track(this, \"hat\", this.buffers[\"hat\"], 0.85, -1);\n        // hatTrack.setTicksFromArray([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\n\n\n        hatTrack.setTicksFromArray([\n            {\n                active: true,\n                index: 0,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 1,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 2,\n                volume: 1.2\n            },\n            {\n                active: true,\n                index: 3,\n                volume: 0.4\n            },\n            {\n                active: true,\n                index: 4,\n                volume: 0.9\n            },\n            {\n                active: true,\n                index: 5,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 6,\n                volume: 1\n            },\n            {\n                active: true,\n                index: 7,\n                volume: 0.4\n            },\n            {\n                active: true,\n                index: 8,\n                volume: 0.9\n            },\n            {\n                active: true,\n                index: 9,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 10,\n                volume: 1\n            },\n            {\n                active: true,\n                index: 11,\n                volume: 0.4\n            },\n            {\n                active: true,\n                index: 12,\n                volume: 0.9\n            },\n            {\n                active: true,\n                index: 13,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 14,\n                volume: 1\n            },\n            {\n                active: true,\n                index: 15,\n                volume: 0.4\n            }\n        ]);\n\n        this.tracks[kickTrack.id] = kickTrack;\n        this.tracks[snareTrack.id] = snareTrack;\n        this.tracks[hatTrack.id] = hatTrack;\n\n        this.defaultTracksLoaded = true;\n        console.log(\"Default tracks loaded\" , this.tracks);\n\n        // this._start();\n    }\n\n\n    _onBpmChanged() {\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n    }\n\n\n    _start() {\n\n        if (!this.audioContextEnabled) {\n            console.log(\"Cannot play: AudioContext is not enabled.\");\n            return;\n        }\n\n        if (this.isPlaying) {\n            console.log(\"Cannot play: it is already playing.\");\n            return;\n        }\n\n        if (!this.defaultTracksLoaded) {\n            console.log(\"Cannot play: default tracks not loaded.\");\n            return;\n        }\n\n\n        this.isStopped = false;\n        let self = this;\n        let ctx = this.audioContext;\n        let startTime = ctx.currentTime;\n        let nextTickTime = startTime + self.tickTime;\n        let index = 0;\n        let timeOutID;\n        let firstLoopEnded = false;\n\n\n        function scheduler() {\n\n            if (self.isStopped) {\n                clearTimeout(timeOutID);\n                self.isPlaying = false;\n                return;\n            }\n\n\n            if (nextTickTime <= ctx.currentTime + self.tickTime ) {\n\n                self.isPlaying = true;\n                self.isStopped = false;\n\n                $.each(self.tracks, (id, track) => {\n\n                    if (track.mute) {\n                        return;\n                    }\n\n                    if (!track.buffer) {\n                        return;\n                    }\n\n                    let trackTick = track.ticks[index];\n\n                    if (!trackTick.active) {\n                        return;\n                    }\n\n                    let tickSound = ctx.createBufferSource();\n                    tickSound.buffer = track.buffer;\n                    let tickGainNode = ctx.createGain();\n                    tickSound.connect(tickGainNode);\n                    tickGainNode.gain.value = trackTick.volume;\n                    tickGainNode.connect(track.gainNode);\n                    tickSound.start(nextTickTime);\n\n                });\n\n                self.currentTickIndex = index;\n                let previousIndex = index === 0 ? (self.numberOfBeats - 1) : index - 1;\n                let previousPrevious = previousIndex === 0 ? (self.numberOfBeats - 1) : previousIndex - 1;\n\n                // to syncronize web audio api schedule with ui beat indicators\n                if (firstLoopEnded) {\n                    self.callBacksInLoop.forEach(fn => {\n                        fn(previousPrevious, previousIndex);\n                    });\n                }\n\n                nextTickTime += self.tickTime;\n                index = ++index === self.numberOfBeats ? 0 : index;\n            }\n\n            firstLoopEnded = true;\n            timeOutID = window.setTimeout(scheduler, 0);\n        }\n\n        scheduler();\n    }\n\n\n    _stop() {\n        this.isStopped = true;\n    }\n\n\n    _playSound(bufferName, time) {\n        let ctx = this.audioContext;\n        let sound = ctx.createBufferSource();\n        sound.buffer = this.buffers[bufferName];\n        sound.connect(ctx.destination);\n        sound.start(time);\n    }\n\n\n    removeTrack(trackID) {\n        let track = this.tracks[trackID];\n        this._tracksInSolo.delete(track);\n        this._tracksInMute.delete(track);\n        delete this.tracks[trackID];\n    }\n\n\n\n    soloTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this._tracksInSolo;\n        let tracksInMute = this._tracksInMute;\n\n        // case 1: track is not in solo and not in mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            $.each(this.tracks, (id, track) => {\n               if (id === trackID) {\n                   return;\n               }\n\n               if (!tracksInSolo.has(track)) {\n                   tracksInMute.add(track);\n                   track.mute = true;\n                   track.solo = false;\n               }\n            });\n        }\n\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            focusTrack.solo = false;\n\n            if (tracksInSolo.size > 0) {\n                tracksInMute.add(focusTrack);\n                focusTrack.mute = true;\n            } else {\n                tracksInMute.clear();\n                tracksInSolo.clear();\n                $.each(this.tracks, (id, track) => {\n                   track.mute = false;\n                   track.solo = false;\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else {\n\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            if (tracksInSolo.size === 1) {\n                $.each(this.tracks, (id, track) => {\n                   if (id !== trackID) {\n                       tracksInMute.add(track);\n                       track.mute = true;\n                   }\n                });\n            }\n        }\n    }\n\n\n\n    muteTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this._tracksInSolo;\n        let tracksInMute = this._tracksInMute;\n\n        // case 1: track not in solo or mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInMute.add(focusTrack);\n            focusTrack.mute = true;\n            focusTrack.solo = false;\n        }\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            tracksInMute.add(focusTrack);\n            focusTrack.solo = false;\n            focusTrack.mute = true;\n\n            if (tracksInSolo.size === 0) {\n                $.each(this.tracks, (id, track) => {\n                    if (id !== trackID) {\n                        tracksInMute.delete(track);\n                        track.mute = false;\n                    }\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else if (tracksInMute.has(focusTrack)) {\n            if (tracksInSolo.size > 0) {\n                tracksInMute.delete(focusTrack);\n                tracksInSolo.add(focusTrack);\n                focusTrack.mute = false;\n                focusTrack.solo = true;\n            }\n            else {\n                tracksInMute.delete(focusTrack);\n                focusTrack.mute = false;\n            }\n\n        }\n    }\n\n\n    addCallBackInLoop(fn) {\n        if (!typeof fn === \"function\") return;\n        this.callBacksInLoop.push( fn );\n    }\n\n\n    isInRangeBPM(value) {\n        if (value >= this.bpmMin && value <= this.bpmMax) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n    _createEmptyTicksArray() {\n        let ticks = [];\n        for(let i = 0; i < this.numberOfBeats; i++) {\n\n            ticks.push({\n                index: i,\n                volume: 0,\n                active: false\n            });\n        }\n        return ticks;\n    }\n\n\n    _clearTracks() {\n        this._tracksInSolo.clear();\n        this._tracksInMute.clear();\n\n        for (let key in this.tracks) {\n            if (this.tracks.hasOwnProperty(key)) {\n                delete this.tracks[key];\n            }\n        }\n    }\n\n\n    addEmptyTrack() {\n        let name = \"track_\" + (Object.keys(this.tracks).length + 1);\n        let track = new Track(this, name);\n        track.setTicksFromArray(this._createEmptyTicksArray());\n        this.tracks[track.id] = track;\n    }\n\n\n    createTrack(name, soundPath, volume, pan, ticks) {\n        return new Promise((resolve, reject) => {\n            audioLoader(this.audioContext, soundPath).then(buffer => {\n\n                let track = new Track(this, name, buffer);\n\n                if (ticks) {\n                    track.setTicksFromArray(ticks);\n                } else {\n                    track.setTicksFromArray(this._createEmptyTicksArray());\n                }\n\n                if (volume) {\n                    track.gainNode.gain.value = volume;\n                }\n\n                if (pan) {\n                    if (track.pannerNode) {\n                        track.pannerNode.pan.value = pan;\n                    }\n                }\n\n                resolve(track);\n\n            }, error => {\n                console.log(error);\n                reject(error);\n            });\n        });\n    }\n\n\n    loadPreset(data) {\n        try {\n            this.bpm = data.bpm;\n            this._clearTracks();\n\n            let promises = [];\n\n            data.tracks.forEach((track) => {\n                promises.push(this.createTrack(track.name, track.soundPath, track.volume, track.pan, track.ticks));\n            });\n\n            return Promise.all(promises);\n        }\n        catch (e) {\n            return new Promise((resolve, reject) => {\n                reject(e);\n            });\n        }\n    }\n\n\n\n\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * Tick.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n export class Tick {\n\n     constructor(index = 0, active = false, volume = 1.0) {\n         this.index = index;\n         this.active = active;\n         this.volume = volume;\n     }\n\n     // get volume() {\n     //     return this._volume;\n     // }\n     //\n     // set volume(val) {\n     //     this._volume = val > 1 ? 1.0 : val;\n     // }\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * Track.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n import { Tick } from \"./Tick\";\nimport { guid } from \"../utils/utils\";\n\n\n export class Track {\n\n     constructor (drumMachine, name = \"track_default\", buffer = undefined, volume = 1.0, pan = 0, mute = false ) {\n         this.id = guid();\n         this.drumMachine = drumMachine;\n         this.audioContext = drumMachine.audioContext;\n         this.name = name;\n         this.buffer = buffer;\n         this.solo = false;\n         this.mute = mute;\n         this.ticks = [];\n         this.pannerNodeSupported = false;\n         this.gainNode = this.audioContext.createGain();\n         this.gainNode.gain.value = volume;\n\n\n         if (typeof this.audioContext.createStereoPanner === \"function\") {\n             this.pannerNode = this.audioContext.createStereoPanner();\n             this.pannerNode.pan.value = pan;\n             this.gainNode.connect(this.pannerNode);\n             this.pannerNode.connect(this.audioContext.destination);\n             this.pannerNodeSupported = true;\n             console.log(\"Stereo panner supported\");\n         } else {\n             this.gainNode.connect(this.audioContext.destination);\n             console.log(\"Stereo panner not supported\");\n         }\n\n         this._initTicks();\n     }\n\n\n     // setGain(val) {\n     //     this.gainNode.gain.value = val > 1 ? 1.0 : val;\n     // }\n\n\n     // setPan(val) {\n     //     if (val < -1) {\n     //         this.pannerNode.pan.value = -1;\n     //     }\n     //     else if (val > 1) {\n     //         this.pannerNode.pan.value = 1;\n     //     }\n     //     else {\n     //         this.pannerNode.pan.value = val;\n     //     }\n     // }\n\n\n\n     /*\n      *\n      */\n     _initTicks() {\n         this.ticks = [];\n         for (let i = 0; i < this.drumMachine.numberOfBeats; ++i) {\n             this.ticks.push(new Tick(i));\n         }\n     }\n\n\n     setTick(index, active = true, volume = 1.0) {\n         if (index < 0 || index > (this.drumMachine.numberOfBeats-1)) {\n             return;\n         }\n\n         this.ticks[index].volume = volume;\n         this.ticks[index].active = active;\n     }\n\n\n     setTicksFromArray(data) {\n         data.forEach(e => {\n             if (typeof e === \"object\") {\n                 if (e.index === \"undefined\" || e.index < 0 || e.index > (this.drumMachine.numberOfBeats-1)) {\n                     return;\n                 }\n\n                 this.ticks[e.index].volume = e.volume !== \"undefined\" ? e.volume : 0;\n                 this.ticks[e.index].active = e.active !== \"undefined\" ? e.active : false;\n             }\n             else {\n                 this.ticks[e].active = true;\n             }\n         });\n     }\n\n\n     setBuffer(buffer, fileName) {\n         this.buffer = buffer;\n         console.log(\"Track \" + this.name + \": audio buffer changed ( \" + fileName + \" )\");\n     }\n\n\n     playSound() {\n         if (!this.audioContext || !this.buffer) return;\n         let sound = this.audioContext.createBufferSource();\n         sound.buffer = this.buffer;\n         sound.connect(this.audioContext.destination);\n         sound.start();\n     }\n\n\n\n\n\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * audio-loader.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\nexport function audioLoader(audioCtx, url) {\n\n    return new Promise((resolve, reject) => {\n\n        if (!audioCtx) {\n            reject(\"Missing audio context parameter.\");\n            return;\n        }\n\n        if (!url) {\n            reject(\"Missing url parameter\");\n            return;\n        }\n\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", url);\n        xhr.responseType = \"arraybuffer\";\n\n        xhr.onload = function() {\n            try {\n                audioCtx.decodeAudioData(xhr.response, function(decodedBuffer) {\n                    resolve(decodedBuffer);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        };\n\n        xhr.send();\n    });\n}\n","/**\n * ---------------------------------------------------------------------------------------\n * presets.js\n * ---------------------------------------------------------------------------------------\n */\n\n\nexport let groovyRockPreset = {\n    name : \"Groovy rock\",\n    bpm : 120,\n    timeSignature : {\n        num : 4,\n        den : 4\n    },\n    tracks : [\n        {\n            name : \"kick\",\n            soundPath : \"app/assets/audio/rock-metal/rock-kick.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 0,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 4,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 8,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 10,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"snare\",\n            soundPath : \"app/assets/audio/rock-metal/rock-snare.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 4,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"ghost-snare\",\n            soundPath : \"app/assets/audio/rock-metal/rock-snare-ghost.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 15,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"hh open\",\n            soundPath : \"app/assets/audio/rock-metal/rock-hh-open.wav\",\n            volume : 0.4,\n            pan : 0.5,\n            ticks : [\n                {\n                    active : true,\n                    index : 4,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 8,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 0.8\n                }\n            ]\n        },\n        {\n            name : \"crash\",\n            soundPath : \"app/assets/audio/rock-metal/rock-crash.wav\",\n            volume : 0.5,\n            pan : -0.5,\n            ticks : [\n                {\n                    active : true,\n                    index : 0,\n                    volume : 0.8\n                }\n            ]\n        }\n    ]\n};\n\nexport let psyTrancePreset = {\n    name : \"psy-trance\",\n    bpm : 145,\n    timeSignature : {\n        num : 4,\n        den : 4\n    },\n    tracks : [\n        {\n            name : \"kick\",\n            soundPath : \"app/assets/audio/trance/trance-kick.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 0,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 4,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 8,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"clap\",\n            soundPath : \"app/assets/audio/trance/trance-clap.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 4,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"hh open\",\n            soundPath : \"app/assets/audio/trance/trance-hh-open.wav\",\n            volume : 0.8,\n            pan : 0.2,\n            ticks : [\n                {\n                    active : true,\n                    index : 2,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 6,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 10,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 14,\n                    volume : 0.8\n                }\n            ]\n        },\n        {\n            name : \"bass\",\n            soundPath : \"app/assets/audio/trance/trance-bass-A1.wav\",\n            volume : 0.8,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 1,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 2,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 3,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 5,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 6,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 7,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 9,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 10,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 11,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 13,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 14,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 15,\n                    volume : 0.8\n                }\n            ]\n        }\n    ]\n};\n","/**\n * ---------------------------------------------------------------------------------------\n * mainController.js\n * ---------------------------------------------------------------------------------------\n */\n\n\nimport { DrumMachine } from \"../../audio/DrumMachine\";\nimport { psyTrancePreset } from \"../../audio/presets\";\n\n// const baseServerUrl = \"http://localhost:4500\";\nconst baseServerUrl = \"http://192.168.1.72:4500\";\n// const baseServerUrl = \"http://192.168.1.75:4500\";\n\n\nexport function drumMachineController($scope, $compile, $http, FileSaver, Blob) {\n\n    let drumMachine = new DrumMachine();\n    let loadingContainer = $(\"#loadingContainer\");\n    let commentsLoadingOverlay = $(\"#commentsLoadingOverlay\");\n    let commentsLoadingSpinner = $(\"#commentsLoadingSpinner\");\n    let playBtn = $(\"#sequencerPlayButton\");\n    let stopBtn = $(\"#sequencerStopButton\");\n    let bpmSlider = $(\"#sequencerBPMslider\");\n\n    $scope.safeApply = function(fn) {\n        var phase = this.$root.$$phase;\n        if(phase == '$apply' || phase == '$digest') {\n            if(fn && (typeof(fn) === 'function')) {\n                fn();\n            }\n        } else {\n            this.$apply(fn);\n        }\n    };\n\n    $scope.title = \"Main Controller\";\n    $scope.tracks = [];\n    $scope.ticksElements = [];\n    $scope.bpm = drumMachine.bpm;\n    $scope.isPlaying = drumMachine.isPlaying;\n    $scope.isStopped = drumMachine.isStopped;\n    $scope.removeTrack = removeTrack;\n    $scope.integerval = /^\\d*$/;\n    $scope.beats = new Array(drumMachine.numberOfBeats).fill(false);\n    $scope.username = \"\";\n    $scope.commentToPost = \"\";\n    $scope.comments = [];\n    $scope.invalidUsernameMessage = \"Give ya a name! (3-32 characters)\";\n    $scope.invalidCommentMessage = \"Write something cool! (3-1000 characters)\";\n\n\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * UI\n     * ---------------------------------------------------------------------------------------\n     */\n\n    $( \"#accordion\" ).accordion({\n        animate: 200,\n        collapsible: true,\n        active: false,\n        heightStyle: \"content\",\n        // icons: { \"header\": \"ui-icon-plus\", \"activeHeader\": \"ui-icon-minus\" },\n        beforeActivate: () => {\n            if ($scope.comments.length === 0) {\n                loadComments();\n            }\n        }\n    });\n\n    $(\"#postCommentBtn\").button({\n        icon: \"ui-icon-pencil\"\n    });\n\n\n\n\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * event listeners\n     * ---------------------------------------------------------------------------------------\n     */\n\n    $(window).ready(() => {\n\n        let beatIndicatorsContainer = document.getElementById(\"beatIndicators\");\n        let beatIndicators = beatIndicatorsContainer.getElementsByClassName(\"beat-indicator\");\n\n        function updateBeatIndicators(previousTickIndex, tickIndex) {\n            $(beatIndicators[previousTickIndex]).removeClass(\"beat-indicator-active\");\n            $(beatIndicators[tickIndex]).addClass(\"beat-indicator-active\");\n        }\n\n        drumMachine.addCallBackInLoop(updateBeatIndicators);\n\n    });\n\n\n    window.addEventListener(\"keyup\", (e) => {\n        switch (e.keyCode) {\n\n            case 32:\n\n                if($(\"textarea#commentArea, input#usernameInput\").is(\":focus\")){\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                else if ($scope.isStopped) {\n                    play(e);\n                } else {\n                    stop(e);\n                }\n                break;\n\n            default:\n                break;\n        }\n    });\n\n\n    // remove scroll down on spacebar\n    window.addEventListener('keydown', function(e) {\n        if(e.keyCode === 32 && e.target === document.body) {\n            e.preventDefault();\n        }\n    });\n\n\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * public\n     * ---------------------------------------------------------------------------------------\n     */\n\n    $scope.startSequencer = () => {\n        drumMachine._start();\n        $scope.isPlaying = true;\n        $scope.isStopped = false;\n    };\n\n    $scope.stopSequencer = () => {\n        drumMachine._stop();\n        $scope.isPlaying = false;\n        $scope.isStopped = true;\n        let indicators = document.getElementById(\"beatIndicators\").getElementsByClassName(\"beat-indicator\");\n        $(indicators).removeClass(\"beat-indicator-active\");\n    };\n\n\n    $scope.addTrack = () => {\n        drumMachine.addEmptyTrack();\n    };\n\n\n    $scope.exportMidi = () => {\n\n        let tracks = [];\n        for (let key in drumMachine.tracks) {\n            if (drumMachine.tracks.hasOwnProperty(key)) {\n\n                let track = drumMachine.tracks[key];\n                let trackData = {\n                    name: track.name,\n                    notes: []\n                };\n\n                let waitCounter = 0;\n                track.ticks.forEach((tick) => {\n\n                    if (tick.active) {\n                        let noteEventData = {\n                            pitch: [\"C4\"],\n                            velocity: tick.volume,\n                            duration: \"16\"  // 1/16\n                        };\n\n                        if (waitCounter > 0) {\n                            let waitParam = \"T\" + waitCounter * 32; //number of ticks to wait (each tick is 1/128)\n                            noteEventData[\"wait\"] = waitParam;\n                        }\n\n                        trackData.notes.push(noteEventData);\n                        waitCounter = 0;\n                    }\n\n                    else {\n                        waitCounter += 1;\n                    }\n                });\n\n                tracks.push(trackData);\n            }\n        }\n\n\n        let data = {\n            bpm: drumMachine.bpm,\n            timeSignature: {num: 4, den: 4},\n            tracks: tracks\n        };\n\n\n\n        $http({\n            url: baseServerUrl + '/api/midi',\n            method: \"POST\",\n            responseType: \"arraybuffer\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            data: JSON.stringify(data)\n\n        }).then(function (response) {\n            console.log(response);\n            let blob = new Blob([response.data], { type: 'audio/midi' });\n            // let fileName = response.headers('content-disposition');\n            FileSaver.saveAs(blob, \"loop.mid\");\n        }, function (response) {\n            console.log(response);\n        });\n\n    };\n\n\n\n    $scope.loadPreset = () => {\n\n\n        $http({\n            url: baseServerUrl + \"/api/presets\",\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        }).then(response => {\n\n            let presets = response.data;\n            if (presets.length === 0) {\n                return;\n            }\n\n            drumMachine.loadPreset(presets[0]).then(tracks => {\n\n                tracks.forEach(t => {\n                    drumMachine.tracks[t.id] = t;\n                });\n\n                $scope.bpm = drumMachine.bpm;\n                bpmSlider.slider(\"value\", $scope.bpm);\n                $scope.$apply();\n\n\n            }, error => {\n                console.log(error);\n            });\n\n\n\n        }, errorResponse => {\n            console.log(errorResponse);\n        });\n\n\n    };\n\n\n\n\n    $scope.savePreset = function() {\n\n        let preset = psyTrancePreset;\n\n        $http({\n            url: baseServerUrl + '/api/presets',\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            data: JSON.stringify(preset)\n\n        }).then(function (response) {\n            console.log(response);\n        }, function (response) {\n            console.log(response);\n        });\n\n\n\n    };\n\n\n\n    $scope.uploadFiles = function() {\n\n        let formData = new FormData();\n\n        $('input[type=\"file\"]').each(function(index) {\n\n            let fileList = $(this)[0].files;\n\n            for(let i = 0; i < fileList.length; i++) {\n                let file = fileList[i];\n                formData.append(file.name, file);\n            }\n        });\n\n\n        let obj = {\n            name: \"track\",\n            bpm: 120,\n            tracks: [\n                {\n                    name: \"kick\"\n                },\n                {\n                    name: \"snare\"\n                }\n            ]\n        };\n\n        formData.append(\"preset\", JSON.stringify(obj));\n\n\n        let xhr = new XMLHttpRequest();\n\n\n\n        xhr.open( 'POST', baseServerUrl + '/api/upload', true );\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.onload = handler;\n        xhr.send( formData );\n\n        function handler(e) {\n            console.log(e);\n        }\n\n        // $http({\n        //     url: \"http://localhost:4500/upload\",\n        //     method: \"POST\",\n        //     transformRequest: angular.identity,\n        //     header: {\n        //         \"Content-Type\": undefined,\n        //     },\n        //     data: formData\n        // }).then(response => {\n        //     console.log(response);\n        // }, error => {\n        //     console.log(error);\n        // });\n\n\n\n    };\n\n\n\n\n    $scope.postComment = ()=> {\n\n        let data = {\n            username: $scope.username,\n            message: $scope.commentToPost\n        };\n\n        $http({\n            url: baseServerUrl + '/api/comments',\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            data: JSON.stringify(data)\n\n        }).then(function (response) {\n            console.log(response);\n            $scope.comments.splice(0, 0, response.data);\n            $scope.commentToPost = \"\";\n            $scope.safeApply();\n        }, function (response) {\n            console.log(response);\n        });\n\n    };\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * private\n     * ---------------------------------------------------------------------------------------\n     */\n\n    function removeTrack(track) {\n        drumMachine.removeTrack(track.id);\n    }\n\n    function initDefaultTracks($scope, drumMachine) {\n\n        enableLoadingSpinner();\n\n        drumMachine._loadDefaultBuffers().then(() => {\n            drumMachine._initDefaultTracks();\n            $scope.tracks = drumMachine.tracks;\n            $scope.$apply();\n            disableLoadingSpinner();\n        }, error => {\n            console.log(error);\n        });\n    }\n\n    function initDATgui(drumMachine) {\n        let gui = new dat.GUI();\n        let bpmController = gui.add(drumMachine, \"bpm\", 50.0, 220.0);\n\n        bpmController.onChange(value => {\n            drumMachine.bpm = Math.floor(drumMachine.bpm);\n        });\n    }\n\n\n    function initSequencerControls(scope, drumMachine) {\n\n        playBtn.on(\"mousedown touchstart\", (e) => {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            playBtn.css({\n                backgroundColor: \"#444\"\n            });\n        });\n\n        playBtn.on(\"mouseup touchend\", (e) => {\n            play(e);\n        });\n\n\n\n\n        stopBtn.on(\"mousedown touchstart\", (e) => {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            stopBtn.css({\n                backgroundColor: \"#444\"\n            });\n        });\n\n        stopBtn.on(\"mouseup touchend\", (e) => {\n            stop(e);\n        });\n\n\n        bpmSlider.slider({\n            min: drumMachine.bpmMin,\n            max: drumMachine.bpmMax,\n            orientation: \"horizontal\",\n            value: scope.bpm,\n            slide: (event, ui) => {\n                drumMachine.bpm = ui.value;\n                scope.bpm = ui.value;\n                scope.$apply();\n            }\n        }).draggable();\n\n\n\n        scope.updateSlider = function() {\n            if (drumMachine.isInRangeBPM(scope.bpm)) {\n                bpmSlider.slider(\"value\", scope.bpm);\n                drumMachine.bpm = scope.bpm;\n            }\n        }\n    }\n\n\n    function play(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        playBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Play-50-green.png)\"\n        });\n\n        stopBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Stop-50-white.png)\"\n        });\n\n        $scope.startSequencer();\n    }\n\n\n    function stop(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        stopBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Stop-50-red.png)\"\n        });\n\n        playBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Play-50-white.png)\"\n        });\n\n        $scope.stopSequencer();\n    }\n\n\n    function loadPresetFromJson(json) {\n\n        enableLoadingSpinner();\n\n        drumMachine.loadPreset(json).then(tracks => {\n\n            tracks.forEach(t => {\n                drumMachine.tracks[t.id] = t;\n            });\n\n            $scope.bpm = drumMachine.bpm;\n            bpmSlider.slider(\"value\", $scope.bpm);\n            $scope.$apply();\n            disableLoadingSpinner();\n\n        }, error => {\n            console.log(error);\n        });\n    }\n\n\n    function initExportMidiMenu() {\n\n        let API = $(\"nav#menu\").data( \"mmenu\" );\n        let li = $('<li><a href=\"#exportMidi\" >Export midi</a></li>');\n        li.click($scope.exportMidi);\n\n        $(\"#menu-list\").find( \".mm-listview\" ).append( li );\n\n        API.initPanels( $(\"#menu-list\") );\n\n    }\n\n\n    function initPresetsMenu() {\n\n        $http({\n            url: baseServerUrl + \"/api/presets\",\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        }).then(response => {\n\n            let presets = response.data;\n            if (presets.length === 0) {\n                return;\n            }\n\n\n            let liParent = $('<li><a href=\"#\">Presets</a></li>');\n            let ul = $(\"<ul></ul>\");\n            liParent.append(ul);\n\n            presets.forEach(preset => {\n\n                let li = $('<li><a href=\"#\">' + preset.name + '</a></li>');\n                li.click(() => {\n                    loadPresetFromJson(preset);\n                });\n\n                ul.append(li);\n            });\n\n            let API = $(\"nav#menu\").data( \"mmenu\" );\n            $(\"#menu-list\").find( \".mm-listview\" ).append( liParent );\n            API.initPanels( $(\"#menu-list\") );\n\n\n            initExportMidiMenu();\n\n        }, errorResponse => {\n            console.log(errorResponse);\n            initExportMidiMenu();\n        });\n\n    }\n\n\n    function loadComments() {\n\n        enableCommentsLoadingSpinner();\n\n        $http({\n            url: baseServerUrl + '/api/comments',\n            method: \"GET\",\n            headers: {\n                \"Accept\" : \"application/json\"\n            }\n\n        }).then(function (response) {\n            console.log(response);\n            $scope.comments = response.data;\n            $scope.safeApply();\n            disableCommentsLoadingSpinner();\n        }, function (response) {\n            console.log(response);\n        });\n\n    }\n\n\n    function enableLoadingSpinner() {\n        setTimeout(() => {\n            loadingContainer.addClass(\"loading-active\");\n        }, 500);\n    }\n\n    function disableLoadingSpinner() {\n        setTimeout(() => {\n            loadingContainer.removeClass(\"loading-active\");\n        }, 500);\n    }\n\n    function enableCommentsLoadingSpinner() {\n        setTimeout(() => {\n            commentsLoadingOverlay.addClass(\"loading-active\");\n            commentsLoadingSpinner.addClass(\"loading-active\");\n        }, 100);\n    }\n\n    function disableCommentsLoadingSpinner() {\n        setTimeout(() => {\n            commentsLoadingOverlay.removeClass(\"loading-active\");\n            commentsLoadingSpinner.removeClass(\"loading-active\");\n        }, 100);\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * init\n     * ---------------------------------------------------------------------------------------\n     */\n\n    initDefaultTracks($scope, drumMachine);\n    initSequencerControls($scope, drumMachine);\n\n    $(window).ready(() => {\n        initPresetsMenu();\n    });\n\n    // initDATgui(drumMachine);\n\n\n}\n\n\n\n\n\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * testController.js\n * ---------------------------------------------------------------------------------------\n */\n\n export function testController($scope) {\n\n     $scope.title = \"Test Controller\";\n     console.log(\"Test Controller\");\n\n }","/**\n * ---------------------------------------------------------------------------------------\n * commentDirective.js\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nexport function commentDirective() {\n\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        templateUrl: \"app/directives/templates/commentDirective.html\",\n        link: function (scope, elem, attrs) {\n\n\n\n        }\n    }\n\n\n\n}\n\n\n","/**\n * ---------------------------------------------------------------------------------------\n * tickSliderDirective.js\n * ---------------------------------------------------------------------------------------\n */\n\n\"use strict\";\n\nexport function tickSliderDirective() {\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            tick: \"=\",\n            ticksElements: \"=\",\n            resizeTick: \"=\"\n        },\n        link: (scope, elem, attrs) => {\n\n\n            // console.log(scope.tick);\n            scope.ticksElements.push(elem);\n\n\n            elem.slider({\n                min: 0,\n                max: 100,\n                orientation: \"vertical\",\n                value: scope.tick.active ? scope.tick.volume * 100 : 0,\n                slide: (event, ui) => {\n\n                    if (ui.value === 0) {\n                        scope.tick.active = false;\n                    }\n                    else {\n                        scope.tick.active = true;\n                    }\n\n                    scope.tick.volume = ui.value * 0.01;\n                    // console.log(scope.tick.volume);\n                }\n            }).draggable();\n\n            // scope.resizeTick(elem);\n\n        }\n    };\n\n}\n","/**\n * ---------------------------------------------------------------------------------------\n * trackDirective\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nexport function trackDirective(supportedAudioFormats) {\n\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            track: \"=\",\n            ticksElements: \"=\",\n            removeTrack: \"=\"\n        },\n        templateUrl: \"app/directives/templates/trackDirective.html\",\n        link: function (scope, elem, attrs) {\n\n            scope.resizeTick = resizeTick;\n            scope.handleFiles = handleFiles;\n            scope.playSound = playSound;\n            scope.onSoloTrack = onSoloTrack;\n            scope.onMuteTrack = onMuteTrack;\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * styles & widgets\n             * ---------------------------------------------------------------------------------------\n             */\n\n            elem.find('button[name=\"removeTrackButton\"]').button({\n                icon: \"ui-icon-close\",\n                showLabel: false\n            });\n\n            elem.find('button[name=\"playSoundButton\"]').button({\n                icon: \"ui-icon-circle-triangle-e\",\n                showLabel: false\n            });\n\n            elem.find('div[id=\"trackVolumeSlider\"]').slider({\n                min: 0,\n                max: 100,\n                orientation: \"horizontal\",\n                value: scope.track.gainNode.gain.value * 100,\n                slide: (event, ui) => {\n                    scope.track.gainNode.gain.value = ui.value * 0.01;\n                }\n            }).draggable();\n\n            if (scope.track.pannerNodeSupported) {\n                elem.find('div[id=\"trackPanSlider\"]').slider({\n                    min: -100,\n                    max: 100,\n                    orientation: \"horizontal\",\n                    value: scope.track.pannerNode.pan.value * 100,\n                    slide: (event, ui) => {\n                        scope.track.pannerNode.pan.value = ui.value * 0.01;\n                    }\n                }).draggable();\n            } else {\n                elem.find('div[id=\"trackPanSlider\"]').remove();\n                elem.find(\".pan-label\").remove();\n\n                // push down volume slider\n                elem.find('div[id=\"trackVolumeSlider\"]').css({\n                    // marginTop: 0,\n                    // position: \"relative\",\n                    // bottom: 0\n                });\n            }\n\n\n            elem.find('button[name=soloTrackButton]').button({\n\n            });\n\n            elem.find('button[name=muteTrackButton]').button({\n\n            });\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * event listeners\n             * ---------------------------------------------------------------------------------------\n             */\n\n            // $(window).resize(() => {\n            //     scope.ticksElements.forEach((e) => {\n            //         resizeTick(e);\n            //     });\n            // });\n\n\n\n\n            elem.on(\"dragover\", onDragOver);\n            elem.on(\"drop\", onDrop);\n            elem.on(\"dragleave\", onDragLeave);\n\n\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * private functions\n             * ---------------------------------------------------------------------------------------\n             */\n\n            function resizeTick(tickElem) {\n                let ticksContainerWidth = elem.find(\".ticks-container\").width();\n                console.log(ticksContainerWidth);\n                let margin = 8;\n                let tickWidth = Math.floor((ticksContainerWidth - 15 * margin) / 16.0);\n\n\n                // tickElem.css({\n                //     width: 32,\n                //     marginRight: \"8px !important\"\n                // });\n\n\n                // tickElem.parent().css({\n                //     width: tickWidth,\n                //     marginRight: margin\n                // });\n\n\n\n                // tickElem.find(\".ui-slider-handle\").css({\n                //\n                // });\n\n            }\n\n\n            function handleFiles(files) {\n                if (!files || files.length < 1) return;\n\n                let file = files[0];\n\n                // chech if it is an audio file with a supported extension\n                if (!supportedAudioFormats.has(file.type)) {\n                    console.log(\"File format not supported by Web Audio API\");\n                    return;\n                }\n\n                let reader = new FileReader();\n                reader.onload = (ev) => {\n                    scope.track.audioContext.decodeAudioData(ev.target.result, function (buffer) {\n                        scope.track.setBuffer(buffer, file.name);\n                    });\n                };\n                reader.readAsArrayBuffer(file);\n            }\n\n\n            function onDragOver(e) {\n                if (!elem.hasClass(\"track-dragfile\")) {\n                    elem.addClass(\"track-dragfile\");\n                }\n                e.stopPropagation();\n                e.preventDefault();\n            }\n\n\n            function onDrop(e) {\n                e.stopPropagation();\n                e.preventDefault();\n                handleFiles(e.originalEvent.dataTransfer.files);\n                onDragLeave();\n            }\n\n\n            function onDragLeave(e) {\n                if (elem.hasClass(\"track-dragfile\")) {\n                    elem.removeClass(\"track-dragfile\");\n                }\n                if (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            }\n\n            function playSound() {\n                scope.track.playSound();\n            }\n\n\n            function onSoloTrack() {\n                scope.track.drumMachine.soloTrack(scope.track.id);\n            }\n\n            function onMuteTrack() {\n                scope.track.drumMachine.muteTrack(scope.track.id);\n            }\n\n\n\n        }\n    };\n\n}\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * routes.js\n * ---------------------------------------------------------------------------------------\n */\n\nexport function initRoutes($routeProvider) {\n\n\n    $routeProvider.when('/', {\n        controller: \"drumMachineController\",\n        templateUrl: \"app/components/drum-machine/drumMachineView.html\"\n    });\n\n    $routeProvider.when('/test', {\n        controller: \"testController\",\n        templateUrl: \"app/components/test/testView.html\"\n    });\n\n    $routeProvider.otherwise({redirectTo: '/'});\n\n}","/*\n * ---------------------------------------------------------------------------------------\n * utils.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n /*\n  * checkIfiOSdevice\n  */\n export function checkIfiOSdevice() {\n     return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n }\n\n\n\n /*\n  * generate uuid\n  */\n export function guid() {\n     let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n         var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n         return v.toString(16);\n     });\n     return uuid;\n }"]}