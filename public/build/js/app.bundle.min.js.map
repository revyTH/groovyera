{"version":3,"sources":["node_modules/browser-pack/_prelude.js","public/js/audio/Audio.js","public/js/audio/Tick.js","public/js/audio/Track.js","public/js/audio/audio-loader.js","public/js/index.js","public/js/utils/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_audioLoader","_Track","Audio","_classCallCheck","this","tag","AudioContext","window","webkitAudioContext","audioContext","audioContextEnabled","bpm","tickTime","isPlaying","buffers","tracks","defaultBuffersLoaded","defaultTracksLoaded","currentTickIndex","soundURLs","kick","snare","hat","ride","_loadDefaultBuffers","_this","ctx","urls","Promise","all","audioLoader","then","values","console","log","_initDefaultTracks","kickTrack","Track","setTicksFromArray","snareTrack","hatTrack","push","_start","scheduler","nextTickTime","currentTime","self","forEach","track","mute","buffer","trackTick","ticks","index","active","tickSound","createBufferSource","tickGainNode","createGain","connect","gain","value","volume","pannerNode","start","setTimeout","startTime","bufferName","time","sound","destination","_bpm","val","_onBpmChanged","_audioContextEnabled","Tick","arguments","undefined","_volume","_Tick","name","pan","gainNode","createStereoPanner","_initTicks","data","_typeof","tick","audioCtx","url","resolve","reject","xhr","XMLHttpRequest","open","responseType","onload","decodeAudioData","response","decodedBuffer","send","checkiOS","test","navigator","userAgent","MSStream","initWebAudioCtxForIOS","_ctx","createBuffer","source","testing","audio","_Audio","dat","GUI","add","onChange","Math","floor","$","on","setTick","css","visibility","checkIfiOSdevice"],"mappings":"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","file":"app.bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * ---------------------------------------------------------------------------------------\n * Audio.js\n * ---------------------------------------------------------------------------------------\n */\n\nimport { audioLoader } from \"./audio-loader\";\nimport { checkIfiOSdevice } from \"../utils/utils\";\nimport { Track } from \"./Track\";\n\n\nexport class Audio {\n\n    constructor() {\n        this.tag = \"[Audio.js]\";\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        this.audioContext = new AudioContext();\n        this.audioContextEnabled = false;\n        this.bpm = 120.0;\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n        this.isPlaying = false;\n        this.buffers = {};\n        this.tracks = [];\n        this.defaultBuffersLoaded = false;\n        this.defaultTracksLoaded = false;\n\n        this.currentTickIndex = 1;\n\n\n        this.soundURLs = {\n            kick: \"assets/audio/kick.wav\",\n            snare: \"assets/audio/snare.wav\",\n            hat: \"assets/audio/hat.wav\",\n            ride: \"assets/audio/ride.wav\"\n        };\n\n        this._loadDefaultBuffers();\n    }\n\n\n    /*\n     * get bpm\n     */\n    get bpm() {\n        return this._bpm;\n    }\n\n    /*\n     * set bpm\n     */\n    set bpm(val) {\n        if (val !== this._bpm) {\n            this._bpm = val;\n            this._onBpmChanged();\n        }\n    }\n\n    /*\n     * get audioContextEnabled\n     */\n    get audioContextEnabled() {\n        return this._audioContextEnabled;\n    }\n\n    /*\n     * set audioContextEnabled\n     */\n    set audioContextEnabled(val) {\n        if (val !== this._audioContextEnabled) {\n            this._audioContextEnabled = val;\n        }\n    }\n\n\n\n    _enableAudioContextForiOS() {\n\n    }\n\n\n    _loadDefaultBuffers() {\n\n        let ctx = this.audioContext;\n        let urls = this.soundURLs;\n\n        Promise.all([\n            audioLoader(ctx, urls.kick),\n            audioLoader(ctx, urls.snare),\n            audioLoader(ctx, urls.hat),\n            audioLoader(ctx, urls.ride)\n        ]).then(values => {\n            this.buffers[\"kick\"] = values[0];\n            this.buffers[\"snare\"] = values[1];\n            this.buffers[\"hat\"] = values[2];\n            this.buffers[\"ride\"] = values[3];\n            this.defaultBuffersLoaded = true;\n            console.log(this.buffers);\n\n            this.defaultBuffersLoaded = true;\n            console.log(\"Default buffers loaded\");\n            this._initDefaultTracks();\n\n        });\n    }\n\n\n    _initDefaultTracks() {\n\n        if (!this.defaultBuffersLoaded) {\n            return;\n        }\n\n        this.tracks = [];\n\n        let kickTrack = new Track(this.audioContext, \"kick\", this.buffers[\"kick\"]);\n        kickTrack.setTicksFromArray([1,5,9,13]);\n        let snareTrack = new Track(this.audioContext, \"snare\", this.buffers[\"snare\"]);\n        snareTrack.setTicksFromArray([5,13]);\n        let hatTrack = new Track(this.audioContext, \"hat\", this.buffers[\"hat\"]);\n        hatTrack.setTicksFromArray([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\n\n        this.tracks.push(kickTrack);\n        this.tracks.push(snareTrack);\n        this.tracks.push(hatTrack);\n\n        this.defaultTracksLoaded = true;\n        console.log(\"Default tracks loaded\");\n        console.log(this.tracks);\n\n        this._start();\n    }\n\n\n    _onBpmChanged() {\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n    }\n\n\n\n    _start() {\n\n        if (this.isPlaying) {\n            return;\n        }\n\n        if (!this.defaultTracksLoaded) {\n            return;\n        }\n\n        this.isPlaying = true;\n        let self = this;\n        let ctx = this.audioContext;\n        let startTime = ctx.currentTime;\n        let nextTickTime = startTime + self.tickTime;\n        let index = 1;\n\n        function scheduler() {\n\n            if (nextTickTime <= ctx.currentTime + self.tickTime ) {\n            // if (nextTickTime <= ctx.currentTime + 0.05 ) {\n\n                self.tracks.forEach(track => {\n\n                    if (track.mute) {\n                        return;\n                    }\n\n                    if (!track.buffer) {\n                        return;\n                    }\n\n                    // let trackVolumeNode = ctx.createGain();\n                    // trackVolumeNode.gain.value = track.volume;\n                    // let pannerNode = ctx.createStereoPanner();\n                    // pannerNode.pan.value = track.pan;\n                    //\n                    // trackVolumeNode.connect(pannerNode);\n                    // pannerNode.connect(ctx.destination);\n\n\n                    let trackTick = track.ticks[index];\n\n                    if (!trackTick.active) {\n                        return;\n                    }\n\n                    let tickSound = ctx.createBufferSource();\n                    tickSound.buffer = track.buffer;\n                    let tickGainNode = ctx.createGain();\n                    tickSound.connect(tickGainNode);\n                    tickGainNode.gain.value = trackTick.volume;\n                    tickGainNode.connect(track.pannerNode);\n                    tickSound.start(nextTickTime);\n\n\n\n\n\n                    // track.ticks.forEach(tick => {\n                    //     if (tick.index !== index) {\n                    //         return;\n                    //     }\n                    //\n                    //     let tickSound = ctx.createBufferSource();\n                    //     tickSound.buffer = track.buffer;\n                    //     let tickVolumeNode = ctx.createGain();\n                    //     tickVolumeNode.gain.value = tick.volume;\n                    //     tickVolumeNode.connect(trackVolumeNode);\n                    //     tickSound.connect(tickVolumeNode);\n                    //     tickSound.start(nextTickTime);\n                    //\n                    // });\n\n                });\n\n\n                self.currentTickIndex = index;\n                console.log(\"Tick \" + self.currentTickIndex);\n                nextTickTime += self.tickTime;\n\n                index += 1;\n                index = index > 16 ? 1 : index;\n\n            }\n\n            window.setTimeout(scheduler, 0);\n        }\n\n        scheduler();\n    }\n\n\n\n\n\n\n    _playSound(bufferName, time) {\n        let ctx = this.audioContext;\n        let sound = ctx.createBufferSource();\n        sound.buffer = this.buffers[bufferName];\n        sound.connect(ctx.destination);\n        sound.start(time);\n    }\n\n\n\n\n\n\n\n\n\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * Tick.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n export class Tick {\n\n     constructor(active = false, volume = 1.0) {\n         this.active = active;\n         this.volume = volume;\n     }\n\n     get volume() {\n         return this._volume;\n     }\n\n     set volume(val) {\n         this._volume = val > 1 ? 1.0 : val;\n     }\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * Track.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n import { Tick } from \"./Tick\";\n\n\n export class Track {\n\n     constructor (audioContext, name = \"track_default\", buffer = undefined, ticks = [], volume = 1.0, pan = 0, mute = false ) {\n         this.name = name;\n         this.buffer = buffer;\n         this.mute = mute;\n         this.ticks = [];\n         this.gainNode = audioContext.createGain();\n         this.gainNode.gain.value = volume;\n         this.pannerNode = audioContext.createStereoPanner();\n         this.pannerNode.pan.value = pan;\n         this.pannerNode.connect(this.gainNode);\n         this.gainNode.connect(audioContext.destination);\n\n         this._initTicks();\n     }\n\n\n     setGain(val) {\n         this.gainNode.gain.value = val > 1 ? 1.0 : val;\n     }\n\n\n     setPan(val) {\n         if (val < -1) {\n             this.pannerNode.pan.value = -1;\n         }\n         else if (val > 1) {\n             this.pannerNode.pan.value = 1;\n         }\n         else {\n             this.pannerNode.pan.value = val;\n         }\n     }\n\n\n\n     /*\n      *\n      */\n     _initTicks() {\n         this.ticks = [];\n         for (let i = 0; i <= 16; ++i) {\n             this.ticks.push(new Tick());\n         }\n     }\n\n\n     setTick(index, active = true, volume = 1.0) {\n         if (index < 1 || index > 16) {\n             return;\n         }\n\n         this.ticks[index].volume = volume;\n         this.ticks[index].active = active;\n     }\n\n\n     setTicksFromArray(data) {\n         data.forEach(e => {\n\n             if (typeof e === \"object\") {\n                 if (!e.index || e.index < 1 || e.index > 16) {\n                     return;\n                 }\n\n                 let tick = this.ticks[e.index];\n                 tick.volume = e.volume ? e.volume : 1.0;\n                 tick.active = e.active ? e.active : true;\n             }\n             else {\n                 this.ticks[e].active = true;\n             }\n\n         });\n     }\n\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * audio-loader.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\nexport function audioLoader(audioCtx, url) {\n\n    return new Promise((resolve, reject) => {\n\n        if (!audioCtx) {\n            reject(\"Missing audio context parameter.\");\n            return;\n        }\n\n        if (!url) {\n            reject(\"Missing url parameter\");\n            return;\n        }\n\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", url);\n        xhr.responseType = \"arraybuffer\";\n\n        xhr.onload = function() {\n            try {\n                audioCtx.decodeAudioData(xhr.response, function(decodedBuffer) {\n                    resolve(decodedBuffer);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        };\n\n        xhr.send();\n    });\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * index.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\nimport { Audio } from \"./audio/Audio\";\nimport { audioLoader } from \"./audio/audio-loader\";\n\n\n\n\nfunction checkiOS() {\n    return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n}\n\n\nfunction initWebAudioCtxForIOS() {\n    let AudioContext = window.AudioContext || window.webkitAudioContext;\n    let _ctx = new AudioContext();\n    let buffer = _ctx.createBuffer(1, 1, 22050);\n    let source = _ctx.createBufferSource();\n    source.buffer = buffer;\n    source.start();\n    // _contextEnabled = true;\n    // console.log('AudioContext enabled', _contextEnabled);\n}\n\n\n\n\n\nfunction init() {\n\n    let isiOSDevice = checkiOS();\n\n    if (isiOSDevice) {\n        $(\"#iOS\").css({\n            visibility: \"visible\"\n        });\n\n        $(\"#enableAudioBtn\").on(\"click\", () => {\n            initWebAudioCtxForIOS();\n\n            $(\"#iOS\").css({\n                visibility: \"hidden\"\n            });\n\n            testing();\n\n        });\n    } else {\n        testing();\n    }\n\n\n\n\n}\n\n\n\n\n\n\nfunction testing() {\n\n    let audio = new Audio();\n\n    let gui = new dat.GUI();\n    let bpmController = gui.add(audio, \"bpm\", 60.0, 180.0);\n\n    bpmController.onChange(value => {\n        audio.bpm = Math.floor(audio.bpm);\n    });\n\n    $(\"#btn\").on(\"click\", () => {\n\n        let hatTrack = audio.tracks[0];\n        hatTrack.setTick(2);\n\n    });\n\n    $(\"#muteBtn\").on(\"click\", () => {\n\n        let hatTrack = audio.tracks[0];\n        hatTrack.mute = !hatTrack.mute;\n\n    });\n\n}\n\n\n\ninit();\n\n\n\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * utils.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n /*\n  * checkIfiOSdevice\n  */\n export function checkIfiOSdevice() {\n     return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n }"]}