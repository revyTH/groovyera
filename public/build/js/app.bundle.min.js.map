{"version":3,"sources":["node_modules/browser-pack/_prelude.js","public/app/app.js","public/app/audio/DrumMachine.js","public/app/audio/Tick.js","public/app/audio/Track.js","public/app/audio/audio-loader.js","public/app/audio/presets.js","public/app/components/drum-machine/drumMachineController.js","public/app/components/test/testController.js","public/app/directives/commentDirective.js","public/app/directives/savePresetDirective.js","public/app/directives/tickSliderDirective.js","public/app/directives/trackDirective.js","public/app/routes.js","public/app/utils/utils.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_routes","_drumMachineController","_testController","_trackDirective","_tickSliderDirective","_commentDirective","_savePresetDirective","app","angular","config","initRoutes","controller","drumMachineController","testController","directive","tickSliderDirective","trackDirective","commentDirective","savePresetDirective","supportedAudioFormats","Set","add","socketEvents","presetSaved","presetConflict","constant","_audioLoader","_utils","_Track","DrumMachine","_classCallCheck","this","tag","numberOfBeats","AudioContext","window","webkitAudioContext","audioContext","bpm","bpmMin","bpmMax","timeSignature","num","den","tickTime","isPlaying","isStopped","buffers","tracks","defaultBuffersLoaded","defaultTracksLoaded","_tracksInSolo","_tracksInMute","currentTickIndex","callBacksInLoop","soundURLs","kick","snare","hat","ride","checkIfiOSdevice","_enableAudioContextForiOS","audioContextEnabled","_this","$","document","ready","btn","visibility","on","buffer","createBuffer","source","createBufferSource","start","console","log","trigger","_this2","ctx","urls","Promise","resolve","reject","all","audioLoader","then","values","error","kickTrack","Track","setTicksFromArray","snareTrack","hatTrack","active","index","volume","id","scheduler","self","clearTimeout","timeOutID","nextTickTime","currentTime","each","track","mute","sampleData","decodedAudioBuffer","trackTick","ticks","tickSound","tickGainNode","createGain","connect","gain","value","gainNode","previousIndex","previousPrevious","firstLoopEnded","forEach","fn","setTimeout","startTime","bufferName","time","sound","destination","trackID","delete","hasOwnProperty","focusTrack","tracksInSolo","tracksInMute","has","solo","size","clear","_typeof","push","key","name","Object","keys","_createEmptyTicksArray","soundPath","pan","_this3","pannerNode","data","_this4","_clearTracks","promises","createTrack","category","_this5","trackData","fileName","pannerNodeSupported","ticksData","tick","JSON","stringify","_bpm","val","_onBpmChanged","Tick","arguments","undefined","_Tick","drumMachine","guid","extension","originalBuffer","createStereoPanner","getArrayAudioBufferFromUrl","getFileNameFromPath","setSampleData","_initTicks","arrayBuffer","decodeAudioData","arrayAudioBuffer","decodedBuffer","getExtensionFromFileName","audioCtx","url","xhr","XMLHttpRequest","open","responseType","onload","response","send","groovyRockPreset","psyTrancePreset","$scope","$compile","$http","FileSaver","Blob","removeTrack","play","preventDefault","stopPropagation","playBtn","css","backgroundColor","backgroundImage","stopBtn","startSequencer","stop","stopSequencer","loadPresetFromJson","json","enableLoadingSpinner","loadPreset","bpmSlider","slider","$apply","disableLoadingSpinner","initExportMidiMenu","API","li","click","exportMidi","find","append","initPanels","initPresetsMenu","categories","baseServerUrl","method","headers","Accept","presetsData","liParent","ulParent","match","_id","categoryPresets","presets","liCategory","ul","preset","after","errorResponse","initSavePresetMenu","savePreset","element","createElement","domElem","body","loadComments","enableCommentsLoadingSpinner","comments","safeApply","disableCommentsLoadingSpinner","loadingContainer","addClass","removeClass","commentsLoadingOverlay","commentsLoadingSpinner","_DrumMachine","phase","$root","$$phase","title","ticksElements","integerval","beats","Array","fill","username","commentToPost","invalidUsernameMessage","invalidCommentMessage","categorySelected","accordion","animate","collapsible","heightStyle","beforeActivate","button","icon","updateBeatIndicators","previousTickIndex","tickIndex","beatIndicators","beatIndicatorsContainer","getElementById","getElementsByClassName","addCallBackInLoop","_start","_stop","indicators","addTrack","addEmptyTrack","notes","waitCounter","noteEventData","pitch","velocity","duration","waitParam","Content-Type","blob","type","saveAs","populateCategories","handler","formData","FormData","jsonPreset","buildJsonPreset","setRequestHeader","uploadFiles","obj","postComment","message","splice","socket","io","scope","min","max","orientation","slide","event","ui","draggable","updateSlider","isInRangeBPM","toast","text","showHideTransition","bgColor","textColor","allowToastClose","hideAfter","stack","textAlign","position","onPresetCancel","restrict","replace","templateUrl","link","elem","attrs","tagHandler","invalidPresetNameMessage","invalidCategoryMessage","remove","onPresetSave","resizeTick","tickElem","ticksContainerWidth","width","Math","floor","handleFiles","files","file","fileExtension","getFileExtension","reader","FileReader","ev","target","result","readAsArrayBuffer","onDragOver","hasClass","onDrop","originalEvent","dataTransfer","onDragLeave","playSound","onSoloTrack","soloTrack","onMuteTrack","muteTrack","showLabel","$routeProvider","when","otherwise","redirectTo","test","navigator","userAgent","MSStream","c","random","toString","exec","path","substr","lastIndexOf"],"mappings":"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","file":"app.bundle.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n * ---------------------------------------------------------------------------------------\n * app.js\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nimport { initRoutes } from \"./routes\";\n\nimport { drumMachineController } from \"./components/drum-machine/drumMachineController\";\nimport { testController } from \"./components/test/testController\";\n\nimport { trackDirective } from \"./directives/trackDirective\";\nimport { tickSliderDirective } from \"./directives/tickSliderDirective\";\nimport { commentDirective } from \"./directives/commentDirective\";\nimport { savePresetDirective } from \"./directives/savePresetDirective\";\n\n\n\n\n(function() {\n\n    let app = angular.module(\"myApp\", [\"ngRoute\", \"ngFileSaver\", \"ngSanitize\", \"ui.select\"]);\n\n\n    // configure angular routes\n    app.config([\"$routeProvider\", initRoutes]);\n\n\n    // bind controllers\n    app.controller(\"drumMachineController\", [\"$scope\", \"$compile\", \"$http\", \"FileSaver\", \"Blob\", \"socketEvents\", drumMachineController]);\n    app.controller(\"testController\", ['$scope', testController]);\n\n\n    // register directives\n    app.directive(\"tickSlider\", tickSliderDirective);\n    app.directive(\"theTrack\", [\"supportedAudioFormats\", trackDirective]);\n    app.directive(\"comment\", commentDirective);\n    app.directive(\"savePreset\", savePresetDirective);\n\n\n\n\n    let supportedAudioFormats = new Set();\n    supportedAudioFormats.add(\"wav\");\n    supportedAudioFormats.add(\"audio/wav\");\n    supportedAudioFormats.add(\"audio/x-wav\");\n    supportedAudioFormats.add(\"mp3\");\n    supportedAudioFormats.add(\"audio/mp3\");\n    supportedAudioFormats.add(\"audio/x-mp3\");\n    supportedAudioFormats.add(\"ogg\");\n    supportedAudioFormats.add(\"audio/ogg\");\n    supportedAudioFormats.add(\"audio/x-ogg\");\n\n    let socketEvents = {\n        presetSaved: \"PRESET_SAVED\",\n        presetConflict: \"PRESET_CONFLICT\"\n    };\n\n    // constants\n    app.constant(\"supportedAudioFormats\", supportedAudioFormats);\n    app.constant(\"socketEvents\", socketEvents);\n\n\n\n}());","/*\n * ---------------------------------------------------------------------------------------\n * DrumMachine.js\n * ---------------------------------------------------------------------------------------\n */\n\nimport { audioLoader } from \"./audio-loader\";\nimport { checkIfiOSdevice } from \"../utils/utils\";\nimport { Track } from \"./Track\";\n\n\nexport class DrumMachine {\n\n    constructor() {\n        this.tag = \"[DrumMachine.js]\";\n        this.numberOfBeats = 16;\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        this.audioContext = new AudioContext();\n        this.bpm = 120;\n        this.bpmMin = 30;\n        this.bpmMax = 240;\n        this.timeSignature = {\n            num: 4,\n            den: 4\n        };\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n        this.isPlaying = false;\n        this.isStopped = true;\n        this.buffers = {};\n        this.tracks = {};\n        this.defaultBuffersLoaded = false;\n        this.defaultTracksLoaded = false;\n        this._tracksInSolo = new Set();\n        this._tracksInMute = new Set();\n\n        this.currentTickIndex = 0;\n\n        this.callBacksInLoop = [];\n\n        this.soundURLs = {\n            kick: \"app/assets/audio/kick.wav\",\n            snare: \"app/assets/audio/snare.wav\",\n            hat: \"app/assets/audio/hat.wav\",\n            ride: \"app/assets/audio/ride.wav\"\n        };\n\n        if (checkIfiOSdevice()) {\n            this._enableAudioContextForiOS();\n        } else {\n            this.audioContextEnabled = true;\n        }\n\n    }\n\n\n    /*\n     * get bpm\n     */\n    get bpm() {\n        return this._bpm;\n    }\n\n    /*\n     * set bpm\n     */\n    set bpm(val) {\n        if (val !== this._bpm) {\n            this._bpm = val;\n            this._onBpmChanged();\n        }\n    }\n\n\n\n\n\n    _enableAudioContextForiOS() {\n        $(document).ready(() => {\n            let btn = $(\"<button/>\", {\n                visibility: \"hidden\"\n            });\n\n            btn.on(\"touchstart\", () => {\n                let buffer = this.audioContext.createBuffer(1, 1, 22050);\n                let source = this.audioContext.createBufferSource();\n                source.buffer = buffer;\n                source.start();\n\n                this.audioContextEnabled = true;\n                console.log(\"AudioContext enabled for iOS\");\n            });\n\n            btn.trigger(\"touchstart\");\n\n        });\n    }\n\n\n    _loadDefaultBuffers() {\n\n        let ctx = this.audioContext;\n        let urls = this.soundURLs;\n\n        return new Promise((resolve, reject) => {\n            Promise.all([\n                audioLoader(ctx, urls.kick),\n                audioLoader(ctx, urls.snare),\n                audioLoader(ctx, urls.hat),\n                audioLoader(ctx, urls.ride)\n            ]).then(values => {\n                this.buffers[\"kick\"] = values[0];\n                this.buffers[\"snare\"] = values[1];\n                this.buffers[\"hat\"] = values[2];\n                this.buffers[\"ride\"] = values[3];\n                this.defaultBuffersLoaded = true;\n                console.log(this.buffers);\n\n                this.defaultBuffersLoaded = true;\n                console.log(\"Default buffers loaded\");\n                // this._initDefaultTracks();\n\n                resolve(\"Default buffers loaded\");\n\n            }, error => {\n                reject(error);\n            });\n        });\n    }\n\n\n    _initDefaultTracks() {\n\n        if (!this.defaultBuffersLoaded) {\n            return;\n        }\n\n        this.tracks = {};\n\n        let kickTrack = new Track(this, \"kick\", this.buffers[\"kick\"]);\n        kickTrack.setTicksFromArray([0,4,8,12]);\n        let snareTrack = new Track(this, \"snare\", this.buffers[\"snare\"], 1, 0.1);\n        snareTrack.setTicksFromArray([4,12]);\n        let hatTrack = new Track(this, \"hat\", this.buffers[\"hat\"], 0.85, -1);\n        // hatTrack.setTicksFromArray([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]);\n\n\n        hatTrack.setTicksFromArray([\n            {\n                active: true,\n                index: 0,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 1,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 2,\n                volume: 1.2\n            },\n            {\n                active: true,\n                index: 3,\n                volume: 0.4\n            },\n            {\n                active: true,\n                index: 4,\n                volume: 0.9\n            },\n            {\n                active: true,\n                index: 5,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 6,\n                volume: 1\n            },\n            {\n                active: true,\n                index: 7,\n                volume: 0.4\n            },\n            {\n                active: true,\n                index: 8,\n                volume: 0.9\n            },\n            {\n                active: true,\n                index: 9,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 10,\n                volume: 1\n            },\n            {\n                active: true,\n                index: 11,\n                volume: 0.4\n            },\n            {\n                active: true,\n                index: 12,\n                volume: 0.9\n            },\n            {\n                active: true,\n                index: 13,\n                volume: 0.5\n            },\n            {\n                active: true,\n                index: 14,\n                volume: 1\n            },\n            {\n                active: true,\n                index: 15,\n                volume: 0.4\n            }\n        ]);\n\n        this.tracks[kickTrack.id] = kickTrack;\n        this.tracks[snareTrack.id] = snareTrack;\n        this.tracks[hatTrack.id] = hatTrack;\n\n        this.defaultTracksLoaded = true;\n        console.log(\"Default tracks loaded\" , this.tracks);\n\n        // this._start();\n    }\n\n\n    _onBpmChanged() {\n        this.tickTime = 60.0 / this.bpm / 4.0;  // 1/16 note\n    }\n\n\n    _start() {\n\n        if (!this.audioContextEnabled) {\n            console.log(\"Cannot play: AudioContext is not enabled.\");\n            return;\n        }\n\n        if (this.isPlaying) {\n            console.log(\"Cannot play: it is already playing.\");\n            return;\n        }\n\n        // if (!this.defaultTracksLoaded) {\n        //     console.log(\"Cannot play: default tracks not loaded.\");\n        //     return;\n        // }\n\n\n        this.isStopped = false;\n        let self = this;\n        let ctx = this.audioContext;\n        let startTime = ctx.currentTime;\n        let nextTickTime = startTime + self.tickTime;\n        let index = 0;\n        let timeOutID;\n        let firstLoopEnded = false;\n\n\n        function scheduler() {\n\n            if (self.isStopped) {\n                clearTimeout(timeOutID);\n                self.isPlaying = false;\n                return;\n            }\n\n\n            if (nextTickTime <= ctx.currentTime + self.tickTime ) {\n\n                self.isPlaying = true;\n                self.isStopped = false;\n\n                $.each(self.tracks, (id, track) => {\n\n                    if (track.mute) {\n                        return;\n                    }\n\n                    if (!track.sampleData.decodedAudioBuffer) {\n                        return;\n                    }\n\n                    let trackTick = track.ticks[index];\n\n                    if (!trackTick.active) {\n                        return;\n                    }\n\n                    let tickSound = ctx.createBufferSource();\n                    tickSound.buffer = track.sampleData.decodedAudioBuffer;\n                    let tickGainNode = ctx.createGain();\n                    tickSound.connect(tickGainNode);\n                    tickGainNode.gain.value = trackTick.volume;\n                    tickGainNode.connect(track.gainNode);\n                    tickSound.start(nextTickTime);\n\n                });\n\n                self.currentTickIndex = index;\n                let previousIndex = index === 0 ? (self.numberOfBeats - 1) : index - 1;\n                let previousPrevious = previousIndex === 0 ? (self.numberOfBeats - 1) : previousIndex - 1;\n\n                // to syncronize web audio api schedule with ui beat indicators\n                if (firstLoopEnded) {\n                    self.callBacksInLoop.forEach(fn => {\n                        fn(previousPrevious, previousIndex);\n                    });\n                }\n\n                nextTickTime += self.tickTime;\n                index = ++index === self.numberOfBeats ? 0 : index;\n            }\n\n            firstLoopEnded = true;\n            timeOutID = window.setTimeout(scheduler, 0);\n        }\n\n        scheduler();\n    }\n\n\n    _stop() {\n        this.isStopped = true;\n    }\n\n\n    _playSound(bufferName, time) {\n        let ctx = this.audioContext;\n        let sound = ctx.createBufferSource();\n        sound.buffer = this.buffers[bufferName];\n        sound.connect(ctx.destination);\n        sound.start(time);\n    }\n\n\n    removeTrack(trackID) {\n        let track = this.tracks[trackID];\n        this._tracksInSolo.delete(track);\n        this._tracksInMute.delete(track);\n        delete this.tracks[trackID];\n    }\n\n\n\n    soloTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this._tracksInSolo;\n        let tracksInMute = this._tracksInMute;\n\n        // case 1: track is not in solo and not in mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            $.each(this.tracks, (id, track) => {\n               if (id === trackID) {\n                   return;\n               }\n\n               if (!tracksInSolo.has(track)) {\n                   tracksInMute.add(track);\n                   track.mute = true;\n                   track.solo = false;\n               }\n            });\n        }\n\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            focusTrack.solo = false;\n\n            if (tracksInSolo.size > 0) {\n                tracksInMute.add(focusTrack);\n                focusTrack.mute = true;\n            } else {\n                tracksInMute.clear();\n                tracksInSolo.clear();\n                $.each(this.tracks, (id, track) => {\n                   track.mute = false;\n                   track.solo = false;\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else {\n\n            tracksInSolo.add(focusTrack);\n            focusTrack.solo = true;\n            focusTrack.mute = false;\n\n            if (tracksInSolo.size === 1) {\n                $.each(this.tracks, (id, track) => {\n                   if (id !== trackID) {\n                       tracksInMute.add(track);\n                       track.mute = true;\n                   }\n                });\n            }\n        }\n    }\n\n\n\n    muteTrack(trackID) {\n\n        if (!this.tracks.hasOwnProperty(trackID)) return;\n\n        let focusTrack = this.tracks[trackID];\n        let tracksInSolo = this._tracksInSolo;\n        let tracksInMute = this._tracksInMute;\n\n        // case 1: track not in solo or mute\n        if (!tracksInSolo.has(focusTrack) && !tracksInMute.has(focusTrack)) {\n            tracksInMute.add(focusTrack);\n            focusTrack.mute = true;\n            focusTrack.solo = false;\n        }\n\n        // case 2: track is in solo\n        else if (tracksInSolo.has(focusTrack)) {\n            tracksInSolo.delete(focusTrack);\n            tracksInMute.add(focusTrack);\n            focusTrack.solo = false;\n            focusTrack.mute = true;\n\n            if (tracksInSolo.size === 0) {\n                $.each(this.tracks, (id, track) => {\n                    if (id !== trackID) {\n                        tracksInMute.delete(track);\n                        track.mute = false;\n                    }\n                });\n            }\n        }\n\n        // case 3: track is in mute\n        else if (tracksInMute.has(focusTrack)) {\n            if (tracksInSolo.size > 0) {\n                tracksInMute.delete(focusTrack);\n                tracksInSolo.add(focusTrack);\n                focusTrack.mute = false;\n                focusTrack.solo = true;\n            }\n            else {\n                tracksInMute.delete(focusTrack);\n                focusTrack.mute = false;\n            }\n\n        }\n    }\n\n\n    addCallBackInLoop(fn) {\n        if (!typeof fn === \"function\") return;\n        this.callBacksInLoop.push( fn );\n    }\n\n\n    isInRangeBPM(value) {\n        if (value >= this.bpmMin && value <= this.bpmMax) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n\n    _createEmptyTicksArray() {\n        let ticks = [];\n        for(let i = 0; i < this.numberOfBeats; i++) {\n\n            ticks.push({\n                index: i,\n                volume: 0,\n                active: false\n            });\n        }\n        return ticks;\n    }\n\n\n    _clearTracks() {\n        this._tracksInSolo.clear();\n        this._tracksInMute.clear();\n\n        for (let key in this.tracks) {\n            if (this.tracks.hasOwnProperty(key)) {\n                delete this.tracks[key];\n            }\n        }\n    }\n\n\n    addEmptyTrack() {\n        let name = \"track_\" + (Object.keys(this.tracks).length + 1);\n        let track = new Track(this, name);\n        track.setTicksFromArray(this._createEmptyTicksArray());\n        this.tracks[track.id] = track;\n    }\n\n\n    // createTrack(name, soundPath, volume, pan, ticks) {\n    //     return new Promise((resolve, reject) => {\n    //         audioLoader(this.audioContext, soundPath).then(buffer => {\n    //\n    //             let track = new Track(this, name, buffer);\n    //\n    //             if (ticks) {\n    //                 track.setTicksFromArray(ticks);\n    //             } else {\n    //                 track.setTicksFromArray(this._createEmptyTicksArray());\n    //             }\n    //\n    //             if (volume) {\n    //                 track.gainNode.gain.value = volume;\n    //             }\n    //\n    //             if (pan) {\n    //                 if (track.pannerNode) {\n    //                     track.pannerNode.pan.value = pan;\n    //                 }\n    //             }\n    //\n    //             resolve(track);\n    //\n    //         }, error => {\n    //             console.log(error);\n    //             reject(error);\n    //         });\n    //     });\n    // }\n\n\n\n    createTrack(name, soundPath, volume, pan, ticks) {\n        return new Promise((resolve, reject) => {\n\n            let track = new Track(this, name, soundPath);\n\n            if (ticks) {\n                track.setTicksFromArray(ticks);\n            } else {\n                track.setTicksFromArray(this._createEmptyTicksArray());\n            }\n\n            if (volume) {\n                track.gainNode.gain.value = volume;\n            }\n\n            if (pan) {\n                if (track.pannerNode) {\n                    track.pannerNode.pan.value = pan;\n                }\n            }\n\n            resolve(track);\n        });\n    }\n\n\n    loadPreset(data) {\n        try {\n            this.bpm = data.bpm;\n            this._clearTracks();\n\n            let promises = [];\n\n            data.tracks.forEach((track) => {\n                promises.push(this.createTrack(track.name, track.soundPath, track.volume, track.pan, track.ticks));\n            });\n\n            return Promise.all(promises);\n        }\n        catch (e) {\n            return new Promise((resolve, reject) => {\n                reject(e);\n            });\n        }\n    }\n\n\n\n\n\n\n    buildJsonPreset(name, category) {\n\n        let data = {\n            name: name,\n            category: category,\n            bpm: this.bpm,\n            timeSignature: this.timeSignature\n        };\n\n        let tracks = [];\n\n        for (let id in this.tracks) {\n            if (this.tracks.hasOwnProperty(id)) {\n\n                let track = this.tracks[id];\n\n                let trackData = {\n                    name: track.name,\n                    soundPath: category + \"/\" + track.sampleData.fileName,\n                    volume: track.gainNode.gain.value,\n                    pan: track.pannerNodeSupported ? track.pannerNode.pan.value : 0\n                };\n\n                let ticksData = [];\n\n                track.ticks.forEach(tick => {\n                    ticksData.push({\n                        active: tick.active,\n                        index: tick.index,\n                        volume: tick.volume\n                    })\n                });\n\n                trackData.ticks = ticksData;\n\n                tracks.push(trackData);\n            }\n        }\n\n        data.tracks = tracks;\n\n\n        console.log(data);\n\n\n        return JSON.stringify(data);\n\n\n\n\n        /*\n        tracks: [\n            {\n                name: String,\n                soundPath: {type: String, required: true},\n                volume: Number,\n                pan: Number,\n\n                ticks: [\n                    {\n                        active: Boolean,\n                        index: Number,\n                        volume: Number\n                    }\n                ]\n            }\n        ]\n        */\n\n    }\n\n\n\n\n}\n","/*\n * ---------------------------------------------------------------------------------------\n * Tick.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n export class Tick {\n\n     constructor(index = 0, active = false, volume = 1.0) {\n         this.index = index;\n         this.active = active;\n         this.volume = volume;\n     }\n\n     // get volume() {\n     //     return this._volume;\n     // }\n     //\n     // set volume(val) {\n     //     this._volume = val > 1 ? 1.0 : val;\n     // }\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * Track.js\n * ---------------------------------------------------------------------------------------\n */\n\n\"use strict\";\n\nimport { Tick } from \"./Tick\";\nimport { guid } from \"../utils/utils\";\nimport { getArrayAudioBufferFromUrl } from \"../utils/utils\";\nimport { getExtensionFromFileName } from \"../utils/utils\";\nimport { getFileNameFromPath } from \"../utils/utils\";\n\n\n export class Track {\n\n     constructor (drumMachine, name = \"track_default\", soundPath = undefined, volume = 1.0, pan = 0, mute = false ) {\n         this.id = guid();\n         this.drumMachine = drumMachine;\n         this.audioContext = drumMachine.audioContext;\n         this.name = name;\n\n         this.sampleData = {\n             fileName:              \"\",\n             extension:             \"\",\n             originalBuffer:        undefined,\n             decodedAudioBuffer:    undefined,\n         };\n\n\n         this.solo = false;\n         this.mute = mute;\n         this.ticks = [];\n         this.pannerNodeSupported = false;\n         this.gainNode = this.audioContext.createGain();\n         this.gainNode.gain.value = volume;\n\n\n         if (typeof this.audioContext.createStereoPanner === \"function\") {\n             this.pannerNode = this.audioContext.createStereoPanner();\n             this.pannerNode.pan.value = pan;\n             this.gainNode.connect(this.pannerNode);\n             this.pannerNode.connect(this.audioContext.destination);\n             this.pannerNodeSupported = true;\n             console.log(\"Stereo panner supported\");\n         } else {\n             this.gainNode.connect(this.audioContext.destination);\n             console.log(\"Stereo panner not supported\");\n         }\n\n\n         if (soundPath) {\n             getArrayAudioBufferFromUrl(this.audioContext, soundPath).then(buffer => {\n                let fileName = getFileNameFromPath(soundPath);\n                this.setSampleData(fileName, buffer);\n             });\n         }\n\n\n\n         this._initTicks();\n     }\n\n\n     // setGain(val) {\n     //     this.gainNode.gain.value = val > 1 ? 1.0 : val;\n     // }\n\n\n     // setPan(val) {\n     //     if (val < -1) {\n     //         this.pannerNode.pan.value = -1;\n     //     }\n     //     else if (val > 1) {\n     //         this.pannerNode.pan.value = 1;\n     //     }\n     //     else {\n     //         this.pannerNode.pan.value = val;\n     //     }\n     // }\n\n\n\n     /*\n      *\n      */\n     _initTicks() {\n         this.ticks = [];\n         for (let i = 0; i < this.drumMachine.numberOfBeats; ++i) {\n             this.ticks.push(new Tick(i));\n         }\n     }\n\n\n     setTick(index, active = true, volume = 1.0) {\n         if (index < 0 || index > (this.drumMachine.numberOfBeats-1)) {\n             return;\n         }\n\n         this.ticks[index].volume = volume;\n         this.ticks[index].active = active;\n     }\n\n\n     setTicksFromArray(data) {\n         data.forEach(e => {\n             if (typeof e === \"object\") {\n                 if (e.index === \"undefined\" || e.index < 0 || e.index > (this.drumMachine.numberOfBeats-1)) {\n                     return;\n                 }\n\n                 this.ticks[e.index].volume = e.volume !== \"undefined\" ? e.volume : 0;\n                 this.ticks[e.index].active = e.active !== \"undefined\" ? e.active : false;\n             }\n             else {\n                 this.ticks[e].active = true;\n             }\n         });\n     }\n\n\n     // setBuffer(buffer, fileName) {\n     //     this.buffer = buffer;\n     //     console.log(\"Track \" + this.name + \": audio buffer changed ( \" + fileName + \" )\");\n     // }\n\n\n     setBuffer(arrayBuffer, fileName) {\n         this.originalBuffer = arrayBuffer;\n         this.drumMachine.audioContext.decodeAudioData(arrayBuffer, decodedAudioBuffer => {\n             this.buffer = decodedAudioBuffer;\n             console.log(\"Track \" + this.name + \": audio buffer changed ( \" + fileName + \" )\");\n         });\n     }\n\n\n     playSound() {\n         if (!this.audioContext || !this.sampleData.decodedAudioBuffer) return;\n         let sound = this.audioContext.createBufferSource();\n         sound.buffer = this.sampleData.decodedAudioBuffer;\n         sound.connect(this.audioContext.destination);\n         sound.start();\n     }\n\n\n\n     setSampleData(fileName, arrayAudioBuffer) {\n\n         if (!fileName || !arrayAudioBuffer) {\n             console.log(\"Missing fileName and/or arrayAudioBuffer parameters\");\n             return;\n         }\n\n         this.drumMachine.audioContext.decodeAudioData(arrayAudioBuffer, decodedBuffer => {\n             this.sampleData.fileName = fileName;\n             this.sampleData.extension = getExtensionFromFileName(fileName);\n             this.sampleData.originalBuffer = arrayAudioBuffer;\n             this.sampleData.decodedAudioBuffer = decodedBuffer;\n         });\n     }\n\n\n\n }","/*\n * ---------------------------------------------------------------------------------------\n * audio-loader.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\nexport function audioLoader(audioCtx, url) {\n\n    return new Promise((resolve, reject) => {\n\n        if (!audioCtx) {\n            reject(\"Missing audio context parameter.\");\n            return;\n        }\n\n        if (!url) {\n            reject(\"Missing url parameter\");\n            return;\n        }\n\n        let xhr = new XMLHttpRequest();\n        xhr.open(\"GET\", url);\n        xhr.responseType = \"arraybuffer\";\n\n        xhr.onload = function() {\n            try {\n                audioCtx.decodeAudioData(xhr.response, function(decodedBuffer) {\n                    resolve(decodedBuffer);\n                });\n            } catch (e) {\n                reject(e);\n            }\n        };\n\n        xhr.send();\n    });\n}\n","/**\n * ---------------------------------------------------------------------------------------\n * presets.js\n * ---------------------------------------------------------------------------------------\n */\n\n\nexport let groovyRockPreset = {\n    name : \"Groovy rock\",\n    bpm : 120,\n    category: \"Rock\",\n    timeSignature : {\n        num : 4,\n        den : 4\n    },\n    tracks : [\n        {\n            name : \"kick\",\n            soundPath : \"app/assets/audio/rock-metal/rock-kick.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 0,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 4,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 8,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 10,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"snare\",\n            soundPath : \"app/assets/audio/rock-metal/rock-snare.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 4,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"ghost-snare\",\n            soundPath : \"app/assets/audio/rock-metal/rock-snare-ghost.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 15,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"hh open\",\n            soundPath : \"app/assets/audio/rock-metal/rock-hh-open.wav\",\n            volume : 0.4,\n            pan : 0.5,\n            ticks : [\n                {\n                    active : true,\n                    index : 4,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 8,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 0.8\n                }\n            ]\n        },\n        {\n            name : \"crash\",\n            soundPath : \"app/assets/audio/rock-metal/rock-crash.wav\",\n            volume : 0.5,\n            pan : -0.5,\n            ticks : [\n                {\n                    active : true,\n                    index : 0,\n                    volume : 0.8\n                }\n            ]\n        }\n    ]\n};\n\nexport let psyTrancePreset = {\n    name : \"psy-trance\",\n    category: \"Trance\",\n    bpm : 145,\n    timeSignature : {\n        num : 4,\n        den : 4\n    },\n    tracks : [\n        {\n            name : \"kick\",\n            soundPath : \"app/assets/audio/trance/trance-kick.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 0,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 4,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 8,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"clap\",\n            soundPath : \"app/assets/audio/trance/trance-clap.wav\",\n            volume : 1,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 4,\n                    volume : 1\n                },\n                {\n                    active : true,\n                    index : 12,\n                    volume : 1\n                }\n            ]\n        },\n        {\n            name : \"hh open\",\n            soundPath : \"app/assets/audio/trance/trance-hh-open.wav\",\n            volume : 0.8,\n            pan : 0.2,\n            ticks : [\n                {\n                    active : true,\n                    index : 2,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 6,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 10,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 14,\n                    volume : 0.8\n                }\n            ]\n        },\n        {\n            name : \"bass\",\n            soundPath : \"app/assets/audio/trance/trance-bass-A1.wav\",\n            volume : 0.8,\n            pan : 0,\n            ticks : [\n                {\n                    active : true,\n                    index : 1,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 2,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 3,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 5,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 6,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 7,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 9,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 10,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 11,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 13,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 14,\n                    volume : 0.8\n                },\n                {\n                    active : true,\n                    index : 15,\n                    volume : 0.8\n                }\n            ]\n        }\n    ]\n};\n","/**\n * ---------------------------------------------------------------------------------------\n * mainController.js\n * ---------------------------------------------------------------------------------------\n */\n\n\nimport { DrumMachine } from \"../../audio/DrumMachine\";\nimport { psyTrancePreset } from \"../../audio/presets\";\nimport { groovyRockPreset } from \"../../audio/presets\";\n\n// const baseServerUrl = \"http://localhost:4500\";\nconst baseServerUrl = \"http://192.168.1.72:4500\";\n// const baseServerUrl = \"http://192.168.1.75:4500\";\n\n\nexport function drumMachineController($scope, $compile, $http, FileSaver, Blob, socketEvents) {\n\n    let drumMachine = new DrumMachine();\n    let loadingContainer = $(\"#loadingContainer\");\n    let commentsLoadingOverlay = $(\"#commentsLoadingOverlay\");\n    let commentsLoadingSpinner = $(\"#commentsLoadingSpinner\");\n    let playBtn = $(\"#sequencerPlayButton\");\n    let stopBtn = $(\"#sequencerStopButton\");\n    let bpmSlider = $(\"#sequencerBPMslider\");\n\n    $scope.safeApply = function(fn) {\n        var phase = this.$root.$$phase;\n        if(phase == '$apply' || phase == '$digest') {\n            if(fn && (typeof(fn) === 'function')) {\n                fn();\n            }\n        } else {\n            this.$apply(fn);\n        }\n    };\n\n    $scope.title = \"Main Controller\";\n    $scope.tracks = [];\n    $scope.ticksElements = [];\n    $scope.bpm = drumMachine.bpm;\n    $scope.isPlaying = drumMachine.isPlaying;\n    $scope.isStopped = drumMachine.isStopped;\n    $scope.removeTrack = removeTrack;\n    $scope.integerval = /^\\d*$/;\n    $scope.beats = new Array(drumMachine.numberOfBeats).fill(false);\n    $scope.username = \"\";\n    $scope.commentToPost = \"\";\n    $scope.comments = [];\n    $scope.invalidUsernameMessage = \"Give ya a name! (3-32 characters)\";\n    $scope.invalidCommentMessage = \"Write something cool! (3-1000 characters)\";\n\n    $scope.preset = {\n        name: \"\",\n        categorySelected: undefined,\n        categories: []\n    };\n\n\n    $scope.tracks = drumMachine.tracks;\n    $scope.safeApply();\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * UI\n     * ---------------------------------------------------------------------------------------\n     */\n\n    $( \"#accordion\" ).accordion({\n        animate: 200,\n        collapsible: true,\n        active: false,\n        heightStyle: \"content\",\n        // icons: { \"header\": \"ui-icon-plus\", \"activeHeader\": \"ui-icon-minus\" },\n        beforeActivate: () => {\n            if ($scope.comments.length === 0) {\n                loadComments();\n            }\n        }\n    });\n\n    $(\"#postCommentBtn\").button({\n        icon: \"ui-icon-pencil\"\n    });\n\n\n\n\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * event listeners\n     * ---------------------------------------------------------------------------------------\n     */\n\n    $(window).ready(() => {\n\n        let beatIndicatorsContainer = document.getElementById(\"beatIndicators\");\n        let beatIndicators = beatIndicatorsContainer.getElementsByClassName(\"beat-indicator\");\n\n        function updateBeatIndicators(previousTickIndex, tickIndex) {\n            $(beatIndicators[previousTickIndex]).removeClass(\"beat-indicator-active\");\n            $(beatIndicators[tickIndex]).addClass(\"beat-indicator-active\");\n        }\n\n        drumMachine.addCallBackInLoop(updateBeatIndicators);\n\n    });\n\n    /*\n    window.addEventListener(\"keyup\", (e) => {\n        switch (e.keyCode) {\n\n            case 32:\n\n                if($(\"textarea#commentArea, input#usernameInput\").is(\":focus\")){\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n                else if ($scope.isStopped) {\n                    play(e);\n                } else {\n                    stop(e);\n                }\n                break;\n\n            default:\n                break;\n        }\n    });\n\n\n    // remove scroll down on spacebar\n    window.addEventListener('keydown', function(e) {\n        if(e.keyCode === 32 && e.target === document.body) {\n            e.preventDefault();\n        }\n    });\n    */\n\n\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * public\n     * ---------------------------------------------------------------------------------------\n     */\n\n    $scope.startSequencer = () => {\n        drumMachine._start();\n        $scope.isPlaying = true;\n        $scope.isStopped = false;\n    };\n\n    $scope.stopSequencer = () => {\n        drumMachine._stop();\n        $scope.isPlaying = false;\n        $scope.isStopped = true;\n        let indicators = document.getElementById(\"beatIndicators\").getElementsByClassName(\"beat-indicator\");\n        $(indicators).removeClass(\"beat-indicator-active\");\n    };\n\n\n    $scope.addTrack = () => {\n        drumMachine.addEmptyTrack();\n    };\n\n\n    $scope.exportMidi = () => {\n\n        let tracks = [];\n        for (let key in drumMachine.tracks) {\n            if (drumMachine.tracks.hasOwnProperty(key)) {\n\n                let track = drumMachine.tracks[key];\n                let trackData = {\n                    name: track.name,\n                    notes: []\n                };\n\n                let waitCounter = 0;\n                track.ticks.forEach((tick) => {\n\n                    if (tick.active) {\n                        let noteEventData = {\n                            pitch: [\"C4\"],\n                            velocity: tick.volume,\n                            duration: \"16\"  // 1/16\n                        };\n\n                        if (waitCounter > 0) {\n                            let waitParam = \"T\" + waitCounter * 32; //number of ticks to wait (each tick is 1/128)\n                            noteEventData[\"wait\"] = waitParam;\n                        }\n\n                        trackData.notes.push(noteEventData);\n                        waitCounter = 0;\n                    }\n\n                    else {\n                        waitCounter += 1;\n                    }\n                });\n\n                tracks.push(trackData);\n            }\n        }\n\n\n        let data = {\n            bpm: drumMachine.bpm,\n            timeSignature: {num: 4, den: 4},\n            tracks: tracks\n        };\n\n\n\n        $http({\n            url: baseServerUrl + '/api/midi',\n            method: \"POST\",\n            responseType: \"arraybuffer\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            data: JSON.stringify(data)\n\n        }).then(function (response) {\n            console.log(response);\n            let blob = new Blob([response.data], { type: 'audio/midi' });\n            // let fileName = response.headers('content-disposition');\n            FileSaver.saveAs(blob, \"loop.mid\");\n        }, function (response) {\n            console.log(response);\n        });\n\n    };\n\n\n    $scope.populateCategories = () => {\n        return new Promise((resolve, reject) => {\n            $http({\n                url: baseServerUrl + \"/api/categories\",\n                method: \"GET\",\n                headers: {\n                    \"Accept\": \"application/json\"\n                }\n            }).then(response => {\n                // console.log(response);\n                let categories = response.data;\n                // categories.forEach(c => {\n                //     $scope.categories.push(c.name);\n                // });\n                $scope.preset.categories = categories;\n                resolve(categories);\n\n            }, error => {\n                console.log(error);\n                reject(error);\n            });\n        });\n    };\n\n\n    $scope.loadPreset = () => {\n\n\n        $http({\n            url: baseServerUrl + \"/api/presets\",\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        }).then(response => {\n\n            let presets = response.data;\n            if (presets.length === 0) {\n                return;\n            }\n\n            drumMachine.loadPreset(presets[0]).then(tracks => {\n\n                tracks.forEach(t => {\n                    drumMachine.tracks[t.id] = t;\n                });\n\n                $scope.bpm = drumMachine.bpm;\n                bpmSlider.slider(\"value\", $scope.bpm);\n                $scope.$apply();\n\n\n            }, error => {\n                console.log(error);\n            });\n\n\n\n        }, errorResponse => {\n            console.log(errorResponse);\n        });\n\n\n    };\n\n\n    $scope.savePreset = function() {\n\n        let formData = new FormData();\n        let jsonPreset = drumMachine.buildJsonPreset($scope.preset.name, $scope.preset.categorySelected.name);\n\n\n        for (let id in drumMachine.tracks) {\n\n            if (drumMachine.tracks.hasOwnProperty(id)) {\n                let track = drumMachine.tracks[id];\n\n                let blob = new Blob([track.sampleData.originalBuffer], {\n                    // type: track.sampleData.extension ? \"audio/\" + track.sampleData.extension : \"octet-stream\"\n                    type: \"octet-stream\"\n                });\n\n                formData.append(\"sample\", blob, track.sampleData.fileName);\n            }\n        }\n\n\n        formData.append(\"preset\", jsonPreset);\n\n\n        let xhr = new XMLHttpRequest();\n\n\n\n        xhr.open( 'POST', baseServerUrl + '/api/presets', true );\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.onload = handler;\n        xhr.send( formData );\n\n        function handler(e) {\n            console.log(e);\n        }\n\n    };\n\n\n\n    $scope.uploadFiles = function() {\n\n        let formData = new FormData();\n\n        // $('input[type=\"file\"]').each(function(index) {\n        //\n        //     let fileList = $(this)[0].files;\n        //\n        //     for(let i = 0; i < fileList.length; i++) {\n        //         let file = fileList[i];\n        //         formData.append(file.name, file);\n        //     }\n        // });\n\n\n\n\n\n\n        // drumMachine.tracks.forEach(track => {\n        //\n        //     console.log(track);\n        //     let buffer = track.buffer;\n        //     let blob = new Blob(buffer);\n        //     formData.append(track.name, blob, \"campione.wav\");\n        //\n        // });\n\n        for (let id in drumMachine.tracks) {\n            if (drumMachine.tracks.hasOwnProperty(id)) {\n                let track = drumMachine.tracks[id];\n\n\n                let blob = new Blob([track.sampleData.originalBuffer], {\n                    // type: track.sampleData.extension ? \"audio/\" + track.sampleData.extension : \"octet-stream\"\n                    type: \"octet-stream\"\n                });\n\n                formData.append(\"sample\", blob, track.sampleData.fileName);\n            }\n        }\n\n\n\n        let obj = {\n            name: \"track\",\n            bpm: 120,\n            tracks: [\n                {\n                    name: \"kick\"\n                },\n                {\n                    name: \"snare\"\n                }\n            ]\n        };\n\n        formData.append(\"preset\", JSON.stringify(obj));\n\n\n        let xhr = new XMLHttpRequest();\n\n\n\n        xhr.open( 'POST', baseServerUrl + '/api/upload', true );\n        xhr.setRequestHeader(\"Accept\", \"application/json\");\n        xhr.onload = handler;\n        xhr.send( formData );\n\n        function handler(e) {\n            console.log(e);\n        }\n\n        // $http({\n        //     url: \"http://localhost:4500/upload\",\n        //     method: \"POST\",\n        //     transformRequest: angular.identity,\n        //     header: {\n        //         \"Content-Type\": undefined,\n        //     },\n        //     data: formData\n        // }).then(response => {\n        //     console.log(response);\n        // }, error => {\n        //     console.log(error);\n        // });\n\n\n\n    };\n\n\n\n\n    $scope.postComment = ()=> {\n\n        let data = {\n            username: $scope.username,\n            message: $scope.commentToPost\n        };\n\n        $http({\n            url: baseServerUrl + '/api/comments',\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                \"Accept\": \"application/json\"\n            },\n            data: JSON.stringify(data)\n\n        }).then(function (response) {\n            console.log(response);\n            $scope.comments.splice(0, 0, response.data);\n            $scope.commentToPost = \"\";\n            $scope.safeApply();\n        }, function (response) {\n            console.log(response);\n        });\n\n    };\n\n\n\n\n\n    /*\n     * ---------------------------------------------------------------------------------------\n     * private\n     * ---------------------------------------------------------------------------------------\n     */\n\n    function removeTrack(track) {\n        drumMachine.removeTrack(track.id);\n    }\n\n    function initDefaultTracks($scope, drumMachine) {\n\n        enableLoadingSpinner();\n\n        drumMachine._loadDefaultBuffers().then(() => {\n            drumMachine._initDefaultTracks();\n            $scope.tracks = drumMachine.tracks;\n            $scope.$apply();\n            disableLoadingSpinner();\n        }, error => {\n            console.log(error);\n        });\n    }\n\n    function initDATgui(drumMachine) {\n        let gui = new dat.GUI();\n        let bpmController = gui.add(drumMachine, \"bpm\", 50.0, 220.0);\n\n        bpmController.onChange(value => {\n            drumMachine.bpm = Math.floor(drumMachine.bpm);\n        });\n    }\n\n\n    function initSequencerControls(scope, drumMachine) {\n\n        playBtn.on(\"mousedown touchstart\", (e) => {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            playBtn.css({\n                backgroundColor: \"#444\"\n            });\n        });\n\n        playBtn.on(\"mouseup touchend\", (e) => {\n            play(e);\n        });\n\n\n\n\n        stopBtn.on(\"mousedown touchstart\", (e) => {\n\n            e.preventDefault();\n            e.stopPropagation();\n\n            stopBtn.css({\n                backgroundColor: \"#444\"\n            });\n        });\n\n        stopBtn.on(\"mouseup touchend\", (e) => {\n            stop(e);\n        });\n\n\n        bpmSlider.slider({\n            min: drumMachine.bpmMin,\n            max: drumMachine.bpmMax,\n            orientation: \"horizontal\",\n            value: scope.bpm,\n            slide: (event, ui) => {\n                drumMachine.bpm = ui.value;\n                scope.bpm = ui.value;\n                scope.$apply();\n            }\n        }).draggable();\n\n\n\n        scope.updateSlider = function() {\n            if (drumMachine.isInRangeBPM(scope.bpm)) {\n                bpmSlider.slider(\"value\", scope.bpm);\n                drumMachine.bpm = scope.bpm;\n            }\n        }\n    }\n\n\n    function play(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        playBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Play-50-green.png)\"\n        });\n\n        stopBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Stop-50-white.png)\"\n        });\n\n        $scope.startSequencer();\n    }\n\n\n    function stop(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        stopBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Stop-50-red.png)\"\n        });\n\n        playBtn.css({\n            backgroundColor: \"transparent\",\n            backgroundImage: \"url(./app/assets/icons/Play-50-white.png)\"\n        });\n\n        $scope.stopSequencer();\n    }\n\n\n    function loadPresetFromJson(json) {\n\n        enableLoadingSpinner();\n\n        drumMachine.loadPreset(json).then(tracks => {\n\n            tracks.forEach(t => {\n                drumMachine.tracks[t.id] = t;\n            });\n\n            $scope.bpm = drumMachine.bpm;\n            bpmSlider.slider(\"value\", $scope.bpm);\n            $scope.$apply();\n            disableLoadingSpinner();\n\n        }, error => {\n            console.log(error);\n        });\n    }\n\n\n    function initExportMidiMenu() {\n\n        let API = $(\"nav#menu\").data( \"mmenu\" );\n        let li = $('<li><a href=\"#exportMidi\" >Export midi</a></li>');\n        li.click($scope.exportMidi);\n\n        $(\"#menu-list\").find( \".mm-listview\" ).append( li );\n\n        API.initPanels( $(\"#menu-list\") );\n\n    }\n\n\n    function initPresetsMenuOld() {\n\n        $http({\n            url: baseServerUrl + \"/api/presets\",\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        }).then(response => {\n\n            let presets = response.data;\n            if (presets.length === 0) {\n                return;\n            }\n\n\n            let liParent = $('<li><a href=\"#\">Presets</a></li>');\n            let ul = $(\"<ul></ul>\");\n            liParent.append(ul);\n\n            presets.forEach(preset => {\n\n                let li = $('<li><a href=\"#\">' + preset.name + '</a></li>');\n                li.click(() => {\n                    loadPresetFromJson(preset);\n                });\n\n                ul.append(li);\n            });\n\n            let API = $(\"nav#menu\").data( \"mmenu\" );\n            $(\"#menu-list\").find( \".mm-listview\" ).append( liParent );\n            API.initPanels( $(\"#menu-list\") );\n\n\n            initExportMidiMenu();\n\n        }, errorResponse => {\n            console.log(errorResponse);\n            initExportMidiMenu();\n        });\n    }\n\n\n    function initPresetsMenu(categories) {\n\n        $http({\n            url: baseServerUrl + \"/api/presets\",\n            method: \"GET\",\n            headers: {\n                \"Accept\": \"application/json\"\n            }\n        }).then(response => {\n\n            let presetsData = response.data;\n            if (presetsData.length === 0) {\n                return;\n            }\n\n\n            let liParent = $('<li><a href=\"#\">Presets</a></li>');\n            let ulParent = $(\"<ul></ul>\");\n            liParent.append(ulParent);\n\n\n            categories.forEach(category => {\n\n                let match = presetsData.find(e => { return e._id === category.name; });\n\n                if (!match) {\n                   return;\n                }\n\n                let categoryPresets = match.presets;\n\n                let liCategory = $('<li><a href=\"#\">' + category.name + '</a></li>');\n                let ul = $(\"<ul></ul>\");\n\n\n                categoryPresets.forEach(preset => {\n                    let li = $('<li><a href=\"#\">' + preset.name + '</a></li>');\n                    li.click(() => {\n                        loadPresetFromJson(preset);\n                    });\n\n                    ul.append(li);\n                });\n\n                liCategory.append(ul);\n                ulParent.append(liCategory);\n\n            });\n\n\n            let API = $(\"nav#menu\").data( \"mmenu\" );\n            $(\"#menu-list\").find( \".mm-listview li:first\" ).after( liParent );\n            API.initPanels( $(\"#menu-list\") );\n\n        }, errorResponse => {\n            console.log(errorResponse);\n            initExportMidiMenu();\n        });\n    }\n\n\n    function addPresetToMenu(preset) {\n\n    }\n\n\n    function initSavePresetMenu() {\n        let li = $('<li><a href=\"#\">Save preset</a></li>');\n\n        li.click(() => {\n            let savePreset = angular.element(document.createElement('save-preset'));\n            let domElem = $compile( savePreset )( $scope );\n            angular.element(document.body).append(domElem);\n        });\n\n        let API = $(\"nav#menu\").data( \"mmenu\" );\n        $(\"#menu-list\").find( \".mm-listview\" ).append( li );\n        API.initPanels( $(\"#menu-list\") );\n    }\n\n\n    function loadComments() {\n\n        enableCommentsLoadingSpinner();\n\n        $http({\n            url: baseServerUrl + '/api/comments',\n            method: \"GET\",\n            headers: {\n                \"Accept\" : \"application/json\"\n            }\n\n        }).then(function (response) {\n            console.log(response);\n            $scope.comments = response.data;\n            $scope.safeApply();\n            disableCommentsLoadingSpinner();\n        }, function (response) {\n            console.log(response);\n        });\n\n    }\n\n\n    function enableLoadingSpinner() {\n        setTimeout(() => {\n            loadingContainer.addClass(\"loading-active\");\n        }, 500);\n    }\n\n    function disableLoadingSpinner() {\n        setTimeout(() => {\n            loadingContainer.removeClass(\"loading-active\");\n        }, 500);\n    }\n\n    function enableCommentsLoadingSpinner() {\n        setTimeout(() => {\n            commentsLoadingOverlay.addClass(\"loading-active\");\n            commentsLoadingSpinner.addClass(\"loading-active\");\n        }, 100);\n    }\n\n    function disableCommentsLoadingSpinner() {\n        setTimeout(() => {\n            commentsLoadingOverlay.removeClass(\"loading-active\");\n            commentsLoadingSpinner.removeClass(\"loading-active\");\n        }, 100);\n    }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /**\n     * ---------------------------------------------------------------------------------------\n     * init\n     * ---------------------------------------------------------------------------------------\n     */\n\n    const socket = io.connect(baseServerUrl);\n    initSequencerControls($scope, drumMachine);\n\n    $(window).ready(() => {\n        initSavePresetMenu();\n        initExportMidiMenu();\n        $scope.populateCategories().then(categories => {\n            initPresetsMenu(categories);\n        });\n\n        socket.on(socketEvents.presetSaved, data => {\n            console.log(socketEvents.presetSaved, data);\n            $.toast({\n                text : \"Preset saved!\",\n                showHideTransition : 'slide',  // It can be plain, fade or slide\n                bgColor : '#05a2fc',              // Background color for toast\n                textColor : '#fff',            // text color\n                allowToastClose : false,       // Show the close button or not\n                hideAfter : 4000,              // `false` to make it sticky or time in miliseconds to hide after\n                stack : 5,                     // `fakse` to show one stack at a time count showing the number of toasts that can be shown at once\n                textAlign : 'left',            // Alignment of text i.e. left, right, center\n                position : 'top-right'       // bottom-left or bottom-right or bottom-center or top-left or top-right or top-center or mid-center or an object representing the left, right, top, bottom values to position the toast on page\n            });\n            $scope.onPresetCancel();\n        });\n\n        socket.on(socketEvents.presetConflict, data => {\n            console.log(socketEvents.presetConflict, data);\n            $.toast({\n                text : data,\n                showHideTransition : 'slide',  // It can be plain, fade or slide\n                bgColor : '#ff4a40',              // Background color for toast\n                textColor : '#fff',            // text color\n                allowToastClose : false,       // Show the close button or not\n                hideAfter : 4000,              // `false` to make it sticky or time in miliseconds to hide after\n                stack : 5,                     // `fakse` to show one stack at a time count showing the number of toasts that can be shown at once\n                textAlign : 'left',            // Alignment of text i.e. left, right, center\n                position : 'top-right'       // bottom-left or bottom-right or bottom-center or top-left or top-right or top-center or mid-center or an object representing the left, right, top, bottom values to position the toast on page\n            });\n        })\n\n    });\n\n\n\n    // initDATgui(drumMachine);\n\n\n}\n\n\n\n\n\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * testController.js\n * ---------------------------------------------------------------------------------------\n */\n\n export function testController($scope) {\n\n     $scope.title = \"Test Controller\";\n     console.log(\"Test Controller\");\n\n }","/**\n * ---------------------------------------------------------------------------------------\n * commentDirective.js\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\nexport function commentDirective() {\n\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        templateUrl: \"app/directives/templates/commentDirective.html\",\n        link: function (scope, elem, attrs) {\n\n\n\n        }\n    }\n\n\n\n}\n\n\n","/**\n * ---------------------------------------------------------------------------------------\n * savePresetDirective.js\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\n\n\nexport function savePresetDirective() {\n\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        templateUrl: \"app/directives/templates/savePreset.html\",\n        link: function (scope, elem, attrs) {\n\n\n            scope.tagHandler = function (tag){\n                return null;\n            };\n\n            scope.invalidPresetNameMessage = \"Choose a preset name (6-32 characters)\";\n            scope.invalidCategoryMessage = \"Choose a category\";\n\n\n\n\n            scope.onPresetCancel = function() {\n                $(\".save-preset-container\").remove();\n            };\n\n\n            scope.onPresetSave = function() {\n                scope.savePreset();\n            };\n\n\n\n\n\n\n\n\n\n\n            function initUI() {\n\n                $(\"#presetCancelBtn\").button();\n                $(\"#presetSaveBtn\").button();\n            }\n\n\n\n\n\n            /**\n             * ---------------------------------------------------------------------------------------\n             * init\n             * ---------------------------------------------------------------------------------------\n             */\n\n            initUI();\n\n        }\n\n\n    }\n\n\n}","/**\n * ---------------------------------------------------------------------------------------\n * tickSliderDirective.js\n * ---------------------------------------------------------------------------------------\n */\n\n\"use strict\";\n\nexport function tickSliderDirective() {\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            tick: \"=\",\n            ticksElements: \"=\",\n            resizeTick: \"=\"\n        },\n        link: (scope, elem, attrs) => {\n\n\n            // console.log(scope.tick);\n            scope.ticksElements.push(elem);\n\n\n            elem.slider({\n                min: 0,\n                max: 100,\n                orientation: \"vertical\",\n                value: scope.tick.active ? scope.tick.volume * 100 : 0,\n                slide: (event, ui) => {\n\n                    if (ui.value === 0) {\n                        scope.tick.active = false;\n                    }\n                    else {\n                        scope.tick.active = true;\n                    }\n\n                    scope.tick.volume = ui.value * 0.01;\n                    // console.log(scope.tick.volume);\n                }\n            }).draggable();\n\n            // scope.resizeTick(elem);\n\n        }\n    };\n\n}\n","/**\n * ---------------------------------------------------------------------------------------\n * trackDirective\n * ---------------------------------------------------------------------------------------\n */\n\n\n\"use strict\";\n\nimport { getFileExtension } from \"../utils/utils\";\n\n\nexport function trackDirective(supportedAudioFormats) {\n\n\n    return {\n        restrict: 'AE',\n        replace: 'false',\n        scope: {\n            track: \"=\",\n            ticksElements: \"=\",\n            removeTrack: \"=\"\n        },\n        templateUrl: \"app/directives/templates/trackDirective.html\",\n        link: function (scope, elem, attrs) {\n\n            scope.resizeTick = resizeTick;\n            scope.handleFiles = handleFiles;\n            scope.playSound = playSound;\n            scope.onSoloTrack = onSoloTrack;\n            scope.onMuteTrack = onMuteTrack;\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * styles & widgets\n             * ---------------------------------------------------------------------------------------\n             */\n\n            elem.find('button[name=\"removeTrackButton\"]').button({\n                icon: \"ui-icon-close\",\n                showLabel: false\n            });\n\n            elem.find('button[name=\"playSoundButton\"]').button({\n                icon: \"ui-icon-circle-triangle-e\",\n                showLabel: false\n            });\n\n            elem.find('div[id=\"trackVolumeSlider\"]').slider({\n                min: 0,\n                max: 100,\n                orientation: \"horizontal\",\n                value: scope.track.gainNode.gain.value * 100,\n                slide: (event, ui) => {\n                    scope.track.gainNode.gain.value = ui.value * 0.01;\n                }\n            }).draggable();\n\n            if (scope.track.pannerNodeSupported) {\n                elem.find('div[id=\"trackPanSlider\"]').slider({\n                    min: -100,\n                    max: 100,\n                    orientation: \"horizontal\",\n                    value: scope.track.pannerNode.pan.value * 100,\n                    slide: (event, ui) => {\n                        scope.track.pannerNode.pan.value = ui.value * 0.01;\n                    }\n                }).draggable();\n            } else {\n                elem.find('div[id=\"trackPanSlider\"]').remove();\n                elem.find(\".pan-label\").remove();\n\n                // push down volume slider\n                elem.find('div[id=\"trackVolumeSlider\"]').css({\n                    // marginTop: 0,\n                    // position: \"relative\",\n                    // bottom: 0\n                });\n            }\n\n\n            elem.find('button[name=soloTrackButton]').button({\n\n            });\n\n            elem.find('button[name=muteTrackButton]').button({\n\n            });\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * event listeners\n             * ---------------------------------------------------------------------------------------\n             */\n\n            // $(window).resize(() => {\n            //     scope.ticksElements.forEach((e) => {\n            //         resizeTick(e);\n            //     });\n            // });\n\n\n\n\n            elem.on(\"dragover\", onDragOver);\n            elem.on(\"drop\", onDrop);\n            elem.on(\"dragleave\", onDragLeave);\n\n\n\n\n\n\n\n\n\n            /*\n             * ---------------------------------------------------------------------------------------\n             * private functions\n             * ---------------------------------------------------------------------------------------\n             */\n\n            function resizeTick(tickElem) {\n                let ticksContainerWidth = elem.find(\".ticks-container\").width();\n                console.log(ticksContainerWidth);\n                let margin = 8;\n                let tickWidth = Math.floor((ticksContainerWidth - 15 * margin) / 16.0);\n\n\n                // tickElem.css({\n                //     width: 32,\n                //     marginRight: \"8px !important\"\n                // });\n\n\n                // tickElem.parent().css({\n                //     width: tickWidth,\n                //     marginRight: margin\n                // });\n\n\n\n                // tickElem.find(\".ui-slider-handle\").css({\n                //\n                // });\n\n            }\n\n\n            function handleFiles(files) {\n                if (!files || files.length < 1) return;\n\n                let file = files[0];\n                let fileExtension = getFileExtension(file.name);\n\n                // chech if it is an audio file with a supported extension\n                if (!supportedAudioFormats.has(fileExtension)) {\n                    console.log(\"File format not supported by Web Audio API: \", fileExtension);\n                    return;\n                }\n\n                let reader = new FileReader();\n\n                reader.onload = (ev) => {\n                    let arrayBuffer = ev.target.result;\n                    scope.track.setSampleData(file.name, arrayBuffer);\n                };\n\n                reader.readAsArrayBuffer(file);\n            }\n\n\n            function onDragOver(e) {\n                if (!elem.hasClass(\"track-dragfile\")) {\n                    elem.addClass(\"track-dragfile\");\n                }\n                e.stopPropagation();\n                e.preventDefault();\n            }\n\n\n            function onDrop(e) {\n                e.stopPropagation();\n                e.preventDefault();\n                handleFiles(e.originalEvent.dataTransfer.files);\n                onDragLeave();\n            }\n\n\n            function onDragLeave(e) {\n                if (elem.hasClass(\"track-dragfile\")) {\n                    elem.removeClass(\"track-dragfile\");\n                }\n                if (e) {\n                    e.stopPropagation();\n                    e.preventDefault();\n                }\n            }\n\n            function playSound() {\n                scope.track.playSound();\n            }\n\n\n            function onSoloTrack() {\n                scope.track.drumMachine.soloTrack(scope.track.id);\n            }\n\n            function onMuteTrack() {\n                scope.track.drumMachine.muteTrack(scope.track.id);\n            }\n\n\n\n        }\n    };\n\n}\n\n\n","/*\n * ---------------------------------------------------------------------------------------\n * routes.js\n * ---------------------------------------------------------------------------------------\n */\n\nexport function initRoutes($routeProvider) {\n\n\n    $routeProvider.when('/', {\n        controller: \"drumMachineController\",\n        templateUrl: \"app/components/drum-machine/drumMachineView.html\"\n    });\n\n    $routeProvider.when('/test', {\n        controller: \"testController\",\n        templateUrl: \"app/components/test/testView.html\"\n    });\n\n    $routeProvider.otherwise({redirectTo: '/'});\n\n}","/*\n * ---------------------------------------------------------------------------------------\n * utils.js\n * ---------------------------------------------------------------------------------------\n */\n\n \"use strict\";\n\n\n /*\n  * checkIfiOSdevice\n  */\n export function checkIfiOSdevice() {\n     return /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n }\n\n\n\n /*\n  * generate uuid\n  */\n export function guid() {\n     let uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n         var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);\n         return v.toString(16);\n     });\n     return uuid;\n }\n\n\n\n\n export function getExtensionFromFileName(fileName) {\n     let re = /(?:\\.([^.]+))?$/;\n     let ext = re.exec(fileName)[1];\n     return ext;\n }\n\n\n\n export function getFileNameFromPath(path) {\n     return path.replace(/^.*[\\\\\\/]/, '');\n }\n\n\n\n export function getArrayAudioBufferFromUrl(audioCtx, url) {\n\n        return new Promise((resolve, reject) => {\n\n            if (!audioCtx) {\n                reject(\"Missing audio context parameter.\");\n                return;\n            }\n\n            if (!url) {\n                reject(\"Missing url parameter\");\n                return;\n            }\n\n            let xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url);\n            xhr.responseType = \"arraybuffer\";\n\n            xhr.onload = function() {\n                resolve(xhr.response);\n            };\n\n            xhr.send();\n        });\n\n}\n\n\n\nexport function getFileExtension(fileName) {\n    return fileName.substr(fileName.lastIndexOf('.') + 1);\n}"]}